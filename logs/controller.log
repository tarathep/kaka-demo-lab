[2020-06-03 10:13:03,300] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2020-06-03 10:21:48,804] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2020-06-03 10:25:10,518] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2020-06-03 10:27:58,839] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2020-06-03 10:29:17,495] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-06-03 10:29:17,539] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2020-06-03 10:29:17,539] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2020-06-03 10:29:17,544] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-06-03 10:29:17,549] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-06-03 10:29:17,553] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2020-06-03 10:29:17,590] INFO [Controller id=0] Initialized broker epochs cache: Map(0 -> 24) (kafka.controller.KafkaController)
[2020-06-03 10:29:17,595] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2020-06-03 10:29:17,604] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2020-06-03 10:29:17,612] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-06-03 10:29:17,612] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2020-06-03 10:29:17,613] INFO [Controller id=0] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2020-06-03 10:29:17,614] INFO [Controller id=0] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2020-06-03 10:29:17,614] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-06-03 10:29:17,618] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-06-03 10:29:17,619] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2020-06-03 10:29:17,620] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-06-03 10:29:17,621] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2020-06-03 10:29:17,621] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2020-06-03 10:29:17,649] INFO [RequestSendThread controllerId=0] Controller 0 connected to BOKIE-SURFACE:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-06-03 10:29:17,651] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-06-03 10:29:17,653] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-06-03 10:29:17,659] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-06-03 10:29:17,661] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> Map() (kafka.controller.ZkReplicaStateMachine)
[2020-06-03 10:29:17,662] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-06-03 10:29:17,663] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-06-03 10:29:17,670] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> Map() (kafka.controller.ZkPartitionStateMachine)
[2020-06-03 10:29:17,670] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2020-06-03 10:29:17,677] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-06-03 10:29:17,679] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-06-03 10:29:17,679] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-06-03 10:29:17,680] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-06-03 10:29:17,681] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-06-03 10:29:17,708] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-06-03 10:29:22,721] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-03 10:29:22,721] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-03 10:29:26,454] INFO [Controller id=0] New topics: [Set(test)], deleted topics: [Set()], new partition replica assignment [Map(test-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-06-03 10:29:26,456] INFO [Controller id=0] New partition creation callback for test-0 (kafka.controller.KafkaController)
[2020-06-03 10:34:22,731] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-03 10:34:22,732] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-03 10:34:22,736] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-03 10:34:22,738] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-03 10:39:22,741] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-03 10:39:22,741] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-03 10:39:22,742] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-03 10:39:22,748] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-03 10:44:22,750] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-03 10:44:22,750] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-03 10:44:22,751] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-03 10:44:22,751] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-03 10:49:22,754] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-03 10:49:22,754] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-03 10:49:22,754] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-03 10:49:22,754] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-03 10:54:22,757] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-03 10:54:22,757] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-03 10:54:22,759] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-03 10:54:22,759] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-03 10:59:22,761] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-03 10:59:22,761] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-03 10:59:22,761] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-03 10:59:22,761] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-03 11:04:22,762] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-03 11:04:22,766] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-03 11:04:22,766] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-03 11:04:22,767] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-03 11:09:22,769] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-03 11:09:22,770] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-03 11:09:22,772] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-03 11:09:22,772] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-03 11:14:22,773] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-03 11:14:22,774] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-03 11:14:22,774] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-03 11:14:22,774] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-03 11:19:22,777] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-03 11:19:22,777] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-03 11:19:22,777] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-03 11:19:22,778] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-03 11:23:18,125] INFO [Controller id=0] New topics: [Set(__consumer_offsets)], deleted topics: [Set()], new partition replica assignment [Map(__consumer_offsets-22 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-06-03 11:23:18,126] INFO [Controller id=0] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-37,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-38,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-13,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2020-06-03 11:23:18,326] INFO [RequestSendThread controllerId=0] Controller 0 connected to BOKIE-SURFACE:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-06-03 11:24:22,780] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-03 11:24:22,781] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-03 11:24:22,784] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-03 11:24:22,784] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-03 11:29:22,797] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-03 11:29:22,797] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-03 11:29:22,797] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-03 11:29:22,797] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-03 11:30:01,781] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2020-06-03 11:30:02,377] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2020-06-03 11:30:02,377] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2020-06-03 11:30:02,378] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2020-06-03 11:30:02,383] TRACE [Controller id=0] All leaders = __consumer_offsets-49 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-38 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-16 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-27 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-8 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-19 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-13 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-2 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-46 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-35 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-24 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-5 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-43 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-32 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-21 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-10 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-37 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-48 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-40 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-18 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-29 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-7 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-23 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-45 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-34 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-26 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-4 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-15 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-42 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-31 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-9 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-20 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),test-0 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-12 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-1 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-28 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-17 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-6 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-39 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-44 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-36 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-47 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-3 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-25 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-14 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-30 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-41 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-33 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-22 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-11 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-0 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) (kafka.controller.KafkaController)
[2020-06-03 11:30:03,661] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-06-03 11:30:03,686] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-06-03 11:30:03,687] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-06-03 11:30:03,687] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2020-06-03 11:30:03,688] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2020-06-03 11:30:03,690] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-06-03 11:30:03,696] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-06-03 11:30:03,696] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2020-06-03 11:30:03,696] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2020-06-03 11:30:03,697] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2020-06-03 11:30:03,701] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2020-06-03 11:30:32,813] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-06-03 11:30:32,888] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 2 and epoch zk version is now 2 (kafka.controller.KafkaController)
[2020-06-03 11:30:32,888] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2020-06-03 11:30:32,895] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-06-03 11:30:32,902] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-06-03 11:30:32,908] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2020-06-03 11:30:32,924] INFO [Controller id=0] Initialized broker epochs cache: Map(0 -> 154) (kafka.controller.KafkaController)
[2020-06-03 11:30:32,955] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2020-06-03 11:30:33,089] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2020-06-03 11:30:33,117] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2020-06-03 11:30:33,118] INFO [Controller id=0] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2020-06-03 11:30:33,118] INFO [Controller id=0] Current list of topics in the cluster: Set(test, __consumer_offsets) (kafka.controller.KafkaController)
[2020-06-03 11:30:33,119] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-06-03 11:30:33,135] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-06-03 11:30:33,136] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2020-06-03 11:30:33,136] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-06-03 11:30:33,137] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2020-06-03 11:30:33,138] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2020-06-03 11:30:33,150] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-06-03 11:30:33,157] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-06-03 11:30:33,169] INFO [RequestSendThread controllerId=0] Controller 0 connected to BOKIE-SURFACE:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-06-03 11:30:33,177] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-06-03 11:30:33,346] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-06-03 11:30:33,348] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> Map([Topic=__consumer_offsets,Partition=21,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=42,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=46,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=39,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=7,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=13,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=49,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=48,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=15,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=38,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=2,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=28,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=23,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=32,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=10,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=18,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=33,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=5,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=17,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=8,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=19,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=37,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=43,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=6,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=9,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=3,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=30,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=25,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=47,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=36,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=11,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=34,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=27,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=12,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=44,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=1,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=45,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=24,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=22,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=31,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=14,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=40,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=4,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=20,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=41,Replica=0] -> OnlineReplica, [Topic=test,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=26,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=29,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=16,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=35,Replica=0] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2020-06-03 11:30:33,351] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-06-03 11:30:33,359] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-06-03 11:30:33,368] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> Map(__consumer_offsets-49 -> OnlinePartition, __consumer_offsets-38 -> OnlinePartition, __consumer_offsets-16 -> OnlinePartition, __consumer_offsets-27 -> OnlinePartition, __consumer_offsets-8 -> OnlinePartition, __consumer_offsets-19 -> OnlinePartition, __consumer_offsets-13 -> OnlinePartition, __consumer_offsets-2 -> OnlinePartition, __consumer_offsets-46 -> OnlinePartition, __consumer_offsets-35 -> OnlinePartition, __consumer_offsets-24 -> OnlinePartition, __consumer_offsets-5 -> OnlinePartition, __consumer_offsets-43 -> OnlinePartition, __consumer_offsets-32 -> OnlinePartition, __consumer_offsets-21 -> OnlinePartition, __consumer_offsets-10 -> OnlinePartition, __consumer_offsets-37 -> OnlinePartition, __consumer_offsets-48 -> OnlinePartition, __consumer_offsets-40 -> OnlinePartition, __consumer_offsets-18 -> OnlinePartition, __consumer_offsets-29 -> OnlinePartition, __consumer_offsets-7 -> OnlinePartition, __consumer_offsets-23 -> OnlinePartition, __consumer_offsets-45 -> OnlinePartition, __consumer_offsets-34 -> OnlinePartition, __consumer_offsets-26 -> OnlinePartition, __consumer_offsets-4 -> OnlinePartition, __consumer_offsets-15 -> OnlinePartition, __consumer_offsets-42 -> OnlinePartition, __consumer_offsets-31 -> OnlinePartition, __consumer_offsets-9 -> OnlinePartition, __consumer_offsets-20 -> OnlinePartition, test-0 -> OnlinePartition, __consumer_offsets-12 -> OnlinePartition, __consumer_offsets-1 -> OnlinePartition, __consumer_offsets-28 -> OnlinePartition, __consumer_offsets-17 -> OnlinePartition, __consumer_offsets-6 -> OnlinePartition, __consumer_offsets-39 -> OnlinePartition, __consumer_offsets-44 -> OnlinePartition, __consumer_offsets-36 -> OnlinePartition, __consumer_offsets-47 -> OnlinePartition, __consumer_offsets-3 -> OnlinePartition, __consumer_offsets-25 -> OnlinePartition, __consumer_offsets-14 -> OnlinePartition, __consumer_offsets-30 -> OnlinePartition, __consumer_offsets-41 -> OnlinePartition, __consumer_offsets-22 -> OnlinePartition, __consumer_offsets-33 -> OnlinePartition, __consumer_offsets-11 -> OnlinePartition, __consumer_offsets-0 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2020-06-03 11:30:33,369] INFO [Controller id=0] Ready to serve as the new controller with epoch 2 (kafka.controller.KafkaController)
[2020-06-03 11:30:33,394] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-06-03 11:30:33,394] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-06-03 11:30:33,401] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-06-03 11:30:33,401] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-06-03 11:30:33,403] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-06-03 11:30:33,434] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-06-03 11:30:38,437] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-03 11:30:38,438] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-03 11:30:38,448] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-03 11:30:38,451] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-03 11:35:38,452] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-03 11:35:38,452] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-03 11:35:38,453] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-03 11:35:38,454] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-03 11:40:38,454] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-03 11:40:38,454] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-03 11:40:38,458] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-03 11:40:38,458] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-03 11:41:01,904] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2020-06-03 11:42:08,713] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2020-06-03 11:43:23,305] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-06-03 11:43:23,339] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 3 and epoch zk version is now 3 (kafka.controller.KafkaController)
[2020-06-03 11:43:23,339] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2020-06-03 11:43:23,345] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-06-03 11:43:23,357] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-06-03 11:43:23,363] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2020-06-03 11:43:23,378] INFO [Controller id=0] Initialized broker epochs cache: Map(0 -> 203) (kafka.controller.KafkaController)
[2020-06-03 11:43:23,398] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2020-06-03 11:43:23,513] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2020-06-03 11:43:23,543] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2020-06-03 11:43:23,544] INFO [Controller id=0] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2020-06-03 11:43:23,544] INFO [Controller id=0] Current list of topics in the cluster: Set(test, __consumer_offsets) (kafka.controller.KafkaController)
[2020-06-03 11:43:23,545] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-06-03 11:43:23,563] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-06-03 11:43:23,579] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-06-03 11:43:23,580] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2020-06-03 11:43:23,580] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-06-03 11:43:23,581] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2020-06-03 11:43:23,581] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2020-06-03 11:43:23,616] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-06-03 11:43:23,617] INFO [RequestSendThread controllerId=0] Controller 0 connected to BOKIE-SURFACE:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-06-03 11:43:23,628] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-06-03 11:43:23,820] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-06-03 11:43:23,821] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> Map([Topic=__consumer_offsets,Partition=21,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=42,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=46,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=39,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=7,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=13,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=49,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=48,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=15,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=38,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=2,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=28,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=23,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=32,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=10,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=18,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=33,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=5,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=17,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=8,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=19,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=37,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=43,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=6,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=9,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=3,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=30,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=25,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=47,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=36,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=11,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=34,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=27,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=12,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=44,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=1,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=45,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=24,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=22,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=31,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=14,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=40,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=4,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=20,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=41,Replica=0] -> OnlineReplica, [Topic=test,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=26,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=29,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=16,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=35,Replica=0] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2020-06-03 11:43:23,822] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-06-03 11:43:23,833] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-06-03 11:43:23,839] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> Map(__consumer_offsets-49 -> OnlinePartition, __consumer_offsets-38 -> OnlinePartition, __consumer_offsets-16 -> OnlinePartition, __consumer_offsets-27 -> OnlinePartition, __consumer_offsets-8 -> OnlinePartition, __consumer_offsets-19 -> OnlinePartition, __consumer_offsets-13 -> OnlinePartition, __consumer_offsets-2 -> OnlinePartition, __consumer_offsets-46 -> OnlinePartition, __consumer_offsets-35 -> OnlinePartition, __consumer_offsets-24 -> OnlinePartition, __consumer_offsets-5 -> OnlinePartition, __consumer_offsets-43 -> OnlinePartition, __consumer_offsets-32 -> OnlinePartition, __consumer_offsets-21 -> OnlinePartition, __consumer_offsets-10 -> OnlinePartition, __consumer_offsets-37 -> OnlinePartition, __consumer_offsets-48 -> OnlinePartition, __consumer_offsets-40 -> OnlinePartition, __consumer_offsets-18 -> OnlinePartition, __consumer_offsets-29 -> OnlinePartition, __consumer_offsets-7 -> OnlinePartition, __consumer_offsets-23 -> OnlinePartition, __consumer_offsets-45 -> OnlinePartition, __consumer_offsets-34 -> OnlinePartition, __consumer_offsets-26 -> OnlinePartition, __consumer_offsets-4 -> OnlinePartition, __consumer_offsets-15 -> OnlinePartition, __consumer_offsets-42 -> OnlinePartition, __consumer_offsets-31 -> OnlinePartition, __consumer_offsets-9 -> OnlinePartition, __consumer_offsets-20 -> OnlinePartition, test-0 -> OnlinePartition, __consumer_offsets-12 -> OnlinePartition, __consumer_offsets-1 -> OnlinePartition, __consumer_offsets-28 -> OnlinePartition, __consumer_offsets-17 -> OnlinePartition, __consumer_offsets-6 -> OnlinePartition, __consumer_offsets-39 -> OnlinePartition, __consumer_offsets-44 -> OnlinePartition, __consumer_offsets-36 -> OnlinePartition, __consumer_offsets-47 -> OnlinePartition, __consumer_offsets-3 -> OnlinePartition, __consumer_offsets-25 -> OnlinePartition, __consumer_offsets-14 -> OnlinePartition, __consumer_offsets-30 -> OnlinePartition, __consumer_offsets-41 -> OnlinePartition, __consumer_offsets-22 -> OnlinePartition, __consumer_offsets-33 -> OnlinePartition, __consumer_offsets-11 -> OnlinePartition, __consumer_offsets-0 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2020-06-03 11:43:23,840] INFO [Controller id=0] Ready to serve as the new controller with epoch 3 (kafka.controller.KafkaController)
[2020-06-03 11:43:23,854] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-06-03 11:43:23,855] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-06-03 11:43:23,855] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-06-03 11:43:23,856] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-06-03 11:43:23,858] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-06-03 11:43:23,878] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-06-03 11:43:28,881] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-03 11:43:28,881] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-03 11:43:28,887] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-03 11:43:28,888] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-03 11:48:28,897] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-03 11:48:28,897] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-03 11:48:28,897] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-03 11:48:28,897] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-03 11:49:38,697] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2020-06-03 11:50:25,200] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2020-06-03 11:50:25,201] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2020-06-03 11:50:25,201] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2020-06-03 11:50:25,206] TRACE [Controller id=0] All leaders = __consumer_offsets-49 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-38 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-16 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-27 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-8 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-19 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-13 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-2 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-46 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-35 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-24 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-5 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-43 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-32 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-21 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-10 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-37 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-48 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-40 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-18 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-29 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-7 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-23 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-45 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-34 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-26 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-4 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-15 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-42 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-31 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-9 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-20 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),test-0 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-12 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-1 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-28 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-17 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-6 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-39 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-44 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-36 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-47 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-3 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-25 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-14 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-30 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-41 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-22 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-33 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-11 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-0 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) (kafka.controller.KafkaController)
[2020-06-03 11:50:26,144] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-06-03 11:50:26,145] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-06-03 11:50:26,145] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-06-03 11:50:26,145] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2020-06-03 11:50:26,146] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2020-06-03 11:50:26,147] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-06-03 11:50:26,147] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-06-03 11:50:26,148] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2020-06-03 11:50:26,148] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2020-06-03 11:50:26,148] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2020-06-03 11:50:26,150] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2020-06-03 11:55:55,524] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-06-03 11:55:55,559] INFO [Controller id=1] 1 successfully elected as the controller. Epoch incremented to 4 and epoch zk version is now 4 (kafka.controller.KafkaController)
[2020-06-03 11:55:55,560] INFO [Controller id=1] Registering handlers (kafka.controller.KafkaController)
[2020-06-03 11:55:55,568] INFO [Controller id=1] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-06-03 11:55:55,575] INFO [Controller id=1] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-06-03 11:55:55,581] INFO [Controller id=1] Initializing controller context (kafka.controller.KafkaController)
[2020-06-03 11:55:55,601] INFO [Controller id=1] Initialized broker epochs cache: Map(1 -> 297) (kafka.controller.KafkaController)
[2020-06-03 11:55:55,618] DEBUG [Controller id=1] Register BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2020-06-03 11:55:55,675] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2020-06-03 11:55:55,703] INFO [Controller id=1] Currently active brokers in the cluster: Set(1) (kafka.controller.KafkaController)
[2020-06-03 11:55:55,703] INFO [Controller id=1] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2020-06-03 11:55:55,704] INFO [Controller id=1] Current list of topics in the cluster: Set(test, __consumer_offsets) (kafka.controller.KafkaController)
[2020-06-03 11:55:55,705] INFO [Controller id=1] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-06-03 11:55:55,706] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2020-06-03 11:55:55,717] INFO [Controller id=1] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-06-03 11:55:55,718] INFO [Controller id=1] List of topics ineligible for deletion: test,__consumer_offsets (kafka.controller.KafkaController)
[2020-06-03 11:55:55,718] INFO [Controller id=1] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-06-03 11:55:55,720] INFO [Topic Deletion Manager 1] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set(test, __consumer_offsets) (kafka.controller.TopicDeletionManager)
[2020-06-03 11:55:55,720] INFO [Controller id=1] Sending update metadata request (kafka.controller.KafkaController)
[2020-06-03 11:55:55,790] INFO [RequestSendThread controllerId=1] Controller 1 connected to BOKIE-SURFACE:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-06-03 11:55:55,809] INFO [ReplicaStateMachine controllerId=1] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-06-03 11:55:55,866] INFO [ReplicaStateMachine controllerId=1] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-06-03 11:55:55,876] INFO [ReplicaStateMachine controllerId=1] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-06-03 11:55:56,251] DEBUG [ReplicaStateMachine controllerId=1] Started replica state machine with initial state -> Map([Topic=__consumer_offsets,Partition=21,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=42,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=46,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=39,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=7,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=13,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=49,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=48,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=15,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=38,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=2,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=28,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=23,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=32,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=10,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=18,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=33,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=5,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=17,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=8,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=19,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=37,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=43,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=6,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=9,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=3,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=30,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=25,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=47,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=36,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=11,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=34,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=27,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=12,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=44,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=1,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=45,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=24,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=22,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=0,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=31,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=14,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=40,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=4,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=20,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=41,Replica=0] -> OfflineReplica, [Topic=test,Partition=0,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=26,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=29,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=16,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=35,Replica=0] -> OfflineReplica) (kafka.controller.ZkReplicaStateMachine)
[2020-06-03 11:55:56,252] INFO [PartitionStateMachine controllerId=1] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-06-03 11:55:56,288] INFO [PartitionStateMachine controllerId=1] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-06-03 11:55:56,403] DEBUG [PartitionStateMachine controllerId=1] Started partition state machine with initial state -> Map(__consumer_offsets-49 -> OfflinePartition, __consumer_offsets-38 -> OfflinePartition, __consumer_offsets-16 -> OfflinePartition, __consumer_offsets-27 -> OfflinePartition, __consumer_offsets-8 -> OfflinePartition, __consumer_offsets-19 -> OfflinePartition, __consumer_offsets-13 -> OfflinePartition, __consumer_offsets-2 -> OfflinePartition, __consumer_offsets-46 -> OfflinePartition, __consumer_offsets-35 -> OfflinePartition, __consumer_offsets-24 -> OfflinePartition, __consumer_offsets-5 -> OfflinePartition, __consumer_offsets-43 -> OfflinePartition, __consumer_offsets-32 -> OfflinePartition, __consumer_offsets-21 -> OfflinePartition, __consumer_offsets-10 -> OfflinePartition, __consumer_offsets-37 -> OfflinePartition, __consumer_offsets-48 -> OfflinePartition, __consumer_offsets-40 -> OfflinePartition, __consumer_offsets-18 -> OfflinePartition, __consumer_offsets-29 -> OfflinePartition, __consumer_offsets-7 -> OfflinePartition, __consumer_offsets-23 -> OfflinePartition, __consumer_offsets-45 -> OfflinePartition, __consumer_offsets-34 -> OfflinePartition, __consumer_offsets-26 -> OfflinePartition, __consumer_offsets-4 -> OfflinePartition, __consumer_offsets-15 -> OfflinePartition, __consumer_offsets-42 -> OfflinePartition, __consumer_offsets-31 -> OfflinePartition, __consumer_offsets-9 -> OfflinePartition, __consumer_offsets-20 -> OfflinePartition, test-0 -> OfflinePartition, __consumer_offsets-12 -> OfflinePartition, __consumer_offsets-1 -> OfflinePartition, __consumer_offsets-28 -> OfflinePartition, __consumer_offsets-17 -> OfflinePartition, __consumer_offsets-6 -> OfflinePartition, __consumer_offsets-39 -> OfflinePartition, __consumer_offsets-44 -> OfflinePartition, __consumer_offsets-36 -> OfflinePartition, __consumer_offsets-47 -> OfflinePartition, __consumer_offsets-3 -> OfflinePartition, __consumer_offsets-25 -> OfflinePartition, __consumer_offsets-14 -> OfflinePartition, __consumer_offsets-30 -> OfflinePartition, __consumer_offsets-41 -> OfflinePartition, __consumer_offsets-22 -> OfflinePartition, __consumer_offsets-33 -> OfflinePartition, __consumer_offsets-11 -> OfflinePartition, __consumer_offsets-0 -> OfflinePartition) (kafka.controller.ZkPartitionStateMachine)
[2020-06-03 11:55:56,408] INFO [Controller id=1] Ready to serve as the new controller with epoch 4 (kafka.controller.KafkaController)
[2020-06-03 11:55:56,418] INFO [Controller id=1] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-06-03 11:55:56,418] INFO [Controller id=1] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-06-03 11:55:56,419] INFO [Controller id=1] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-06-03 11:55:56,419] INFO [Controller id=1] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-06-03 11:55:56,421] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-06-03 11:55:56,436] INFO [Controller id=1] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-06-03 11:56:01,437] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-03 11:56:01,438] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-03 11:56:01,453] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map(__consumer_offsets-22 -> Vector(0), __consumer_offsets-30 -> Vector(0), __consumer_offsets-8 -> Vector(0), __consumer_offsets-21 -> Vector(0), __consumer_offsets-4 -> Vector(0), __consumer_offsets-27 -> Vector(0), __consumer_offsets-7 -> Vector(0), __consumer_offsets-9 -> Vector(0), __consumer_offsets-46 -> Vector(0), __consumer_offsets-25 -> Vector(0), __consumer_offsets-35 -> Vector(0), __consumer_offsets-41 -> Vector(0), __consumer_offsets-33 -> Vector(0), __consumer_offsets-23 -> Vector(0), __consumer_offsets-49 -> Vector(0), __consumer_offsets-47 -> Vector(0), __consumer_offsets-16 -> Vector(0), test-0 -> Vector(0), __consumer_offsets-28 -> Vector(0), __consumer_offsets-31 -> Vector(0), __consumer_offsets-36 -> Vector(0), __consumer_offsets-42 -> Vector(0), __consumer_offsets-3 -> Vector(0), __consumer_offsets-18 -> Vector(0), __consumer_offsets-37 -> Vector(0), __consumer_offsets-15 -> Vector(0), __consumer_offsets-24 -> Vector(0), __consumer_offsets-38 -> Vector(0), __consumer_offsets-17 -> Vector(0), __consumer_offsets-48 -> Vector(0), __consumer_offsets-19 -> Vector(0), __consumer_offsets-11 -> Vector(0), __consumer_offsets-13 -> Vector(0), __consumer_offsets-2 -> Vector(0), __consumer_offsets-43 -> Vector(0), __consumer_offsets-6 -> Vector(0), __consumer_offsets-14 -> Vector(0), __consumer_offsets-20 -> Vector(0), __consumer_offsets-0 -> Vector(0), __consumer_offsets-44 -> Vector(0), __consumer_offsets-39 -> Vector(0), __consumer_offsets-12 -> Vector(0), __consumer_offsets-45 -> Vector(0), __consumer_offsets-1 -> Vector(0), __consumer_offsets-5 -> Vector(0), __consumer_offsets-26 -> Vector(0), __consumer_offsets-29 -> Vector(0), __consumer_offsets-34 -> Vector(0), __consumer_offsets-10 -> Vector(0), __consumer_offsets-32 -> Vector(0), __consumer_offsets-40 -> Vector(0)) (kafka.controller.KafkaController)
[2020-06-03 11:56:01,456] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 1.0 (kafka.controller.KafkaController)
[2020-06-03 11:56:01,457] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2020-06-03 11:56:18,547] INFO [Controller id=1] Newly added brokers: 0, deleted brokers: , bounced brokers: , all live brokers: 0,1 (kafka.controller.KafkaController)
[2020-06-03 11:56:18,548] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2020-06-03 11:56:18,555] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2020-06-03 11:56:18,557] INFO [Controller id=1] New broker startup callback for 0 (kafka.controller.KafkaController)
[2020-06-03 11:56:18,570] INFO [RequestSendThread controllerId=1] Controller 1 connected to BOKIE-SURFACE:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-06-03 11:56:18,755] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-06-03 11:56:18,794] DEBUG [Controller id=0] Broker 1 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-06-03 11:56:18,865] DEBUG [Controller id=1] Register BrokerModifications handler for Vector(0) (kafka.controller.KafkaController)
[2020-06-03 11:56:18,871] INFO [Controller id=1] Updated broker epochs cache: Map(1 -> 297, 0 -> 366) (kafka.controller.KafkaController)
[2020-06-03 11:57:14,737] INFO [Controller id=1] Newly added brokers: 2, deleted brokers: , bounced brokers: , all live brokers: 0,1,2 (kafka.controller.KafkaController)
[2020-06-03 11:57:14,737] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2020-06-03 11:57:14,744] INFO [Controller id=1] New broker startup callback for 2 (kafka.controller.KafkaController)
[2020-06-03 11:57:14,753] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2020-06-03 11:57:14,754] DEBUG [Controller id=1] Register BrokerModifications handler for Vector(2) (kafka.controller.KafkaController)
[2020-06-03 11:57:14,756] INFO [RequestSendThread controllerId=1] Controller 1 connected to BOKIE-SURFACE:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-06-03 11:57:14,762] INFO [Controller id=1] Updated broker epochs cache: Map(1 -> 297, 0 -> 366, 2 -> 433) (kafka.controller.KafkaController)
[2020-06-03 11:57:14,821] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-06-03 11:57:14,836] DEBUG [Controller id=2] Broker 1 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-06-03 11:58:26,125] INFO [Controller id=1] New topics: [Set(my-replicated-topic)], deleted topics: [Set()], new partition replica assignment [Map(my-replicated-topic-0 -> ReplicaAssignment(replicas=0,2,1, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-06-03 11:58:26,125] INFO [Controller id=1] New partition creation callback for my-replicated-topic-0 (kafka.controller.KafkaController)
[2020-06-03 12:01:01,458] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-03 12:01:01,462] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-03 12:01:01,464] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-03 12:01:01,464] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-03 12:06:01,464] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-03 12:06:01,464] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-03 12:06:01,465] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-03 12:06:01,465] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-03 12:11:01,467] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-03 12:11:01,467] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-03 12:11:01,468] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-03 12:11:01,468] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-03 12:16:01,470] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-03 12:16:01,470] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-03 12:16:01,470] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-03 12:16:01,470] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-03 12:16:27,441] INFO [Controller id=1] Shutting down broker 0 (kafka.controller.KafkaController)
[2020-06-03 12:16:27,443] DEBUG [Controller id=1] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2020-06-03 12:16:27,443] DEBUG [Controller id=1] Live brokers: 1,2 (kafka.controller.KafkaController)
[2020-06-03 12:16:27,473] INFO [RequestSendThread controllerId=1] Controller 1 connected to BOKIE-SURFACE:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-06-03 12:16:27,474] INFO [RequestSendThread controllerId=1] Controller 1 connected to BOKIE-SURFACE:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-06-03 12:16:27,475] TRACE [Controller id=1] All leaders = __consumer_offsets-49 -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:4),__consumer_offsets-38 -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:4),__consumer_offsets-16 -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:4),__consumer_offsets-27 -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:4),__consumer_offsets-8 -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:4),__consumer_offsets-19 -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:4),__consumer_offsets-13 -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:4),__consumer_offsets-2 -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:4),__consumer_offsets-46 -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:4),__consumer_offsets-35 -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:4),__consumer_offsets-24 -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:4),__consumer_offsets-5 -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:4),__consumer_offsets-43 -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:4),__consumer_offsets-32 -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:4),__consumer_offsets-21 -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:4),__consumer_offsets-10 -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:4),__consumer_offsets-37 -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:4),my-replicated-topic-0 -> (Leader:2,ISR:2,1,LeaderEpoch:1,ControllerEpoch:4),__consumer_offsets-48 -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:4),__consumer_offsets-40 -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:4),__consumer_offsets-18 -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:4),__consumer_offsets-29 -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:4),__consumer_offsets-7 -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:4),__consumer_offsets-23 -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:4),__consumer_offsets-45 -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:4),__consumer_offsets-34 -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:4),__consumer_offsets-26 -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:4),__consumer_offsets-4 -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:4),__consumer_offsets-15 -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:4),__consumer_offsets-42 -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:4),__consumer_offsets-31 -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:4),__consumer_offsets-9 -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:4),__consumer_offsets-20 -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:4),test-0 -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:4),__consumer_offsets-12 -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:4),__consumer_offsets-1 -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:4),__consumer_offsets-28 -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:4),__consumer_offsets-17 -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:4),__consumer_offsets-6 -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:4),__consumer_offsets-39 -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:4),__consumer_offsets-44 -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:4),__consumer_offsets-36 -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:4),__consumer_offsets-47 -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:4),__consumer_offsets-3 -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:4),__consumer_offsets-25 -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:4),__consumer_offsets-14 -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:4),__consumer_offsets-30 -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:4),__consumer_offsets-41 -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:4),__consumer_offsets-22 -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:4),__consumer_offsets-33 -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:4),__consumer_offsets-11 -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:4),__consumer_offsets-0 -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:4) (kafka.controller.KafkaController)
[2020-06-03 12:16:27,477] INFO [RequestSendThread controllerId=1] Controller 1 connected to BOKIE-SURFACE:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-06-03 12:16:27,524] WARN [RequestSendThread controllerId=1] Controller 1 epoch 4 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=4, brokerEpoch=366, partitionStates=[LeaderAndIsrPartitionState(topicName='my-replicated-topic', partitionIndex=0, controllerEpoch=4, leader=2, leaderEpoch=1, isr=[2, 1], zkVersion=1, replicas=[0, 2, 1], addingReplicas=[], removingReplicas=[], isNew=false)], liveLeaders=(BOKIE-SURFACE:9094 (id: 2 rack: null))) to broker BOKIE-SURFACE:9092 (id: 0 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 0 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:100)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:249)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-03 12:16:28,458] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-06-03 12:16:28,460] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-06-03 12:16:28,460] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-06-03 12:16:28,461] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2020-06-03 12:16:28,462] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2020-06-03 12:16:28,463] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-06-03 12:16:28,464] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-06-03 12:16:28,465] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2020-06-03 12:16:28,472] INFO [Controller id=1] Newly added brokers: , deleted brokers: 0, bounced brokers: , all live brokers: 1,2 (kafka.controller.KafkaController)
[2020-06-03 12:16:28,472] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2020-06-03 12:16:28,473] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker BOKIE-SURFACE:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
org.apache.kafka.common.errors.DisconnectException: NetworkClient is no longer active, state is CLOSING
[2020-06-03 12:16:28,474] WARN [RequestSendThread controllerId=1] Controller 1 epoch 4 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=4, brokerEpoch=366, partitionStates=[LeaderAndIsrPartitionState(topicName='my-replicated-topic', partitionIndex=0, controllerEpoch=4, leader=2, leaderEpoch=1, isr=[2, 1], zkVersion=1, replicas=[0, 2, 1], addingReplicas=[], removingReplicas=[], isNew=false)], liveLeaders=(BOKIE-SURFACE:9094 (id: 2 rack: null))) to broker BOKIE-SURFACE:9092 (id: 0 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.lang.InterruptedException
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(Unknown Source)
	at java.util.concurrent.CountDownLatch.await(Unknown Source)
	at kafka.utils.ShutdownableThread.pause(ShutdownableThread.scala:82)
	at kafka.controller.RequestSendThread.backoff$1(ControllerChannelManager.scala:230)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:244)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-03 12:16:28,474] TRACE [RequestSendThread controllerId=1] shutdownInitiated latch count reached zero. Shutdown called. (kafka.controller.RequestSendThread)
[2020-06-03 12:16:28,474] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2020-06-03 12:16:28,475] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2020-06-03 12:16:28,481] INFO [Controller id=1] Broker failure callback for 0 (kafka.controller.KafkaController)
[2020-06-03 12:16:28,482] INFO [Controller id=1] Removed 0 from list of shutting down brokers. (kafka.controller.KafkaController)
[2020-06-03 12:16:28,591] DEBUG [Controller id=1] Unregister BrokerModifications handler for Vector(0) (kafka.controller.KafkaController)
[2020-06-03 12:16:28,592] INFO [Controller id=1] Updated broker epochs cache: Map(1 -> 297, 2 -> 433) (kafka.controller.KafkaController)
[2020-06-03 12:20:30,017] INFO [Controller id=1] Newly added brokers: 0, deleted brokers: , bounced brokers: , all live brokers: 0,1,2 (kafka.controller.KafkaController)
[2020-06-03 12:20:30,017] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2020-06-03 12:20:30,024] INFO [Controller id=1] New broker startup callback for 0 (kafka.controller.KafkaController)
[2020-06-03 12:20:30,174] DEBUG [Controller id=1] Register BrokerModifications handler for Vector(0) (kafka.controller.KafkaController)
[2020-06-03 12:20:30,180] INFO [Controller id=1] Updated broker epochs cache: Map(1 -> 297, 2 -> 433, 0 -> 508) (kafka.controller.KafkaController)
[2020-06-03 12:20:30,201] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2020-06-03 12:20:30,208] INFO [RequestSendThread controllerId=1] Controller 1 connected to BOKIE-SURFACE:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-06-03 12:20:30,273] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-06-03 12:20:30,295] DEBUG [Controller id=0] Broker 1 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-06-03 12:20:34,647] DEBUG [Controller id=1] Sending MetadataRequest to Brokers: Vector(1, 2, 0) for TopicPartitions: ArrayBuffer(my-replicated-topic-0) (kafka.controller.KafkaController)
[2020-06-03 12:21:01,471] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-03 12:21:01,471] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-03 12:21:01,472] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map(my-replicated-topic-0 -> Vector(0, 2, 1)) (kafka.controller.KafkaController)
[2020-06-03 12:21:01,472] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.019230769230769232 (kafka.controller.KafkaController)
[2020-06-03 12:23:41,420] INFO [Controller id=2] 2 successfully elected as the controller. Epoch incremented to 5 and epoch zk version is now 5 (kafka.controller.KafkaController)
[2020-06-03 12:23:41,421] INFO [Controller id=2] Registering handlers (kafka.controller.KafkaController)
[2020-06-03 12:23:41,425] INFO [Controller id=2] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-06-03 12:23:41,429] INFO [Controller id=2] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-06-03 12:23:41,427] DEBUG [Controller id=0] Broker 2 was elected as controller instead of broker 0 (kafka.controller.KafkaController)
org.apache.kafka.common.errors.ControllerMovedException: Controller moved to another broker. Aborting controller startup procedure
[2020-06-03 12:23:41,432] INFO [Controller id=2] Initializing controller context (kafka.controller.KafkaController)
[2020-06-03 12:23:41,440] INFO [Controller id=2] Initialized broker epochs cache: Map(0 -> 508, 2 -> 433) (kafka.controller.KafkaController)
[2020-06-03 12:23:41,451] DEBUG [Controller id=2] Register BrokerModifications handler for Set(0, 2) (kafka.controller.KafkaController)
[2020-06-03 12:23:41,481] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2020-06-03 12:23:41,488] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2020-06-03 12:23:41,493] INFO [Controller id=2] Currently active brokers in the cluster: Set(0, 2) (kafka.controller.KafkaController)
[2020-06-03 12:23:41,493] INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread)
[2020-06-03 12:23:41,494] INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread)
[2020-06-03 12:23:41,494] INFO [Controller id=2] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2020-06-03 12:23:41,495] INFO [Controller id=2] Current list of topics in the cluster: Set(test, my-replicated-topic, __consumer_offsets) (kafka.controller.KafkaController)
[2020-06-03 12:23:41,495] INFO [Controller id=2] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-06-03 12:23:41,503] INFO [Controller id=2] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-06-03 12:23:41,503] INFO [Controller id=2] List of topics ineligible for deletion: my-replicated-topic (kafka.controller.KafkaController)
[2020-06-03 12:23:41,503] INFO [Controller id=2] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-06-03 12:23:41,504] INFO [Topic Deletion Manager 2] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set(my-replicated-topic) (kafka.controller.TopicDeletionManager)
[2020-06-03 12:23:41,504] INFO [Controller id=2] Sending update metadata request (kafka.controller.KafkaController)
[2020-06-03 12:23:41,515] INFO [ReplicaStateMachine controllerId=2] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-06-03 12:23:41,515] INFO [RequestSendThread controllerId=2] Controller 2 connected to BOKIE-SURFACE:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-06-03 12:23:41,516] INFO [RequestSendThread controllerId=2] Controller 2 connected to BOKIE-SURFACE:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-06-03 12:23:41,523] INFO [ReplicaStateMachine controllerId=2] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-06-03 12:23:41,554] INFO [ReplicaStateMachine controllerId=2] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-06-03 12:23:41,578] DEBUG [ReplicaStateMachine controllerId=2] Started replica state machine with initial state -> Map([Topic=__consumer_offsets,Partition=21,Replica=0] -> OnlineReplica, [Topic=my-replicated-topic,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=42,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=46,Replica=0] -> OnlineReplica, [Topic=my-replicated-topic,Partition=0,Replica=2] -> OnlineReplica, [Topic=my-replicated-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=39,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=7,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=13,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=49,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=48,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=15,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=38,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=2,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=28,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=23,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=32,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=10,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=18,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=33,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=5,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=17,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=8,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=19,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=37,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=43,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=6,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=9,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=30,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=3,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=25,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=47,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=36,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=11,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=34,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=27,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=12,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=44,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=1,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=45,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=24,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=22,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=31,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=14,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=40,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=4,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=20,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=41,Replica=0] -> OnlineReplica, [Topic=test,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=26,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=29,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=16,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=35,Replica=0] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2020-06-03 12:23:41,579] INFO [PartitionStateMachine controllerId=2] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-06-03 12:23:41,586] INFO [PartitionStateMachine controllerId=2] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-06-03 12:23:41,590] DEBUG [PartitionStateMachine controllerId=2] Started partition state machine with initial state -> Map(__consumer_offsets-49 -> OnlinePartition, __consumer_offsets-38 -> OnlinePartition, __consumer_offsets-16 -> OnlinePartition, __consumer_offsets-27 -> OnlinePartition, __consumer_offsets-8 -> OnlinePartition, __consumer_offsets-19 -> OnlinePartition, __consumer_offsets-13 -> OnlinePartition, __consumer_offsets-2 -> OnlinePartition, __consumer_offsets-46 -> OnlinePartition, __consumer_offsets-35 -> OnlinePartition, __consumer_offsets-24 -> OnlinePartition, __consumer_offsets-5 -> OnlinePartition, __consumer_offsets-43 -> OnlinePartition, __consumer_offsets-32 -> OnlinePartition, __consumer_offsets-21 -> OnlinePartition, __consumer_offsets-10 -> OnlinePartition, __consumer_offsets-37 -> OnlinePartition, my-replicated-topic-0 -> OnlinePartition, __consumer_offsets-48 -> OnlinePartition, __consumer_offsets-40 -> OnlinePartition, __consumer_offsets-18 -> OnlinePartition, __consumer_offsets-29 -> OnlinePartition, __consumer_offsets-7 -> OnlinePartition, __consumer_offsets-23 -> OnlinePartition, __consumer_offsets-45 -> OnlinePartition, __consumer_offsets-34 -> OnlinePartition, __consumer_offsets-26 -> OnlinePartition, __consumer_offsets-4 -> OnlinePartition, __consumer_offsets-15 -> OnlinePartition, __consumer_offsets-42 -> OnlinePartition, __consumer_offsets-31 -> OnlinePartition, __consumer_offsets-9 -> OnlinePartition, __consumer_offsets-20 -> OnlinePartition, test-0 -> OnlinePartition, __consumer_offsets-12 -> OnlinePartition, __consumer_offsets-1 -> OnlinePartition, __consumer_offsets-28 -> OnlinePartition, __consumer_offsets-17 -> OnlinePartition, __consumer_offsets-6 -> OnlinePartition, __consumer_offsets-39 -> OnlinePartition, __consumer_offsets-44 -> OnlinePartition, __consumer_offsets-36 -> OnlinePartition, __consumer_offsets-47 -> OnlinePartition, __consumer_offsets-3 -> OnlinePartition, __consumer_offsets-25 -> OnlinePartition, __consumer_offsets-14 -> OnlinePartition, __consumer_offsets-30 -> OnlinePartition, __consumer_offsets-41 -> OnlinePartition, __consumer_offsets-33 -> OnlinePartition, __consumer_offsets-22 -> OnlinePartition, __consumer_offsets-11 -> OnlinePartition, __consumer_offsets-0 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2020-06-03 12:23:41,590] INFO [Controller id=2] Ready to serve as the new controller with epoch 5 (kafka.controller.KafkaController)
[2020-06-03 12:23:41,594] INFO [Controller id=2] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-06-03 12:23:41,594] INFO [Controller id=2] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-06-03 12:23:41,595] INFO [Controller id=2] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-06-03 12:23:41,595] INFO [Controller id=2] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-06-03 12:23:41,596] INFO [Controller id=2] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-06-03 12:23:41,608] INFO [Controller id=2] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-06-03 12:23:46,612] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-03 12:23:46,612] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-03 12:23:46,616] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map(my-replicated-topic-0 -> Vector(0, 2, 1)) (kafka.controller.KafkaController)
[2020-06-03 12:23:46,617] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.019230769230769232 (kafka.controller.KafkaController)
[2020-06-03 12:28:46,619] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-03 12:28:46,619] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-03 12:28:46,620] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map(my-replicated-topic-0 -> Vector(0, 2, 1)) (kafka.controller.KafkaController)
[2020-06-03 12:28:46,620] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.019230769230769232 (kafka.controller.KafkaController)
[2020-06-03 12:33:46,621] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-03 12:33:46,621] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-03 12:33:46,622] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map(my-replicated-topic-0 -> Vector(0, 2, 1)) (kafka.controller.KafkaController)
[2020-06-03 12:33:46,622] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.019230769230769232 (kafka.controller.KafkaController)
[2020-06-03 12:38:46,623] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-03 12:38:46,623] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-03 12:38:46,623] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map(my-replicated-topic-0 -> Vector(0, 2, 1)) (kafka.controller.KafkaController)
[2020-06-03 12:38:46,623] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.019230769230769232 (kafka.controller.KafkaController)
[2020-06-03 12:43:46,625] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-03 12:43:46,625] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-03 12:43:46,626] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map(my-replicated-topic-0 -> Vector(0, 2, 1)) (kafka.controller.KafkaController)
[2020-06-03 12:43:46,626] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.019230769230769232 (kafka.controller.KafkaController)
[2020-06-03 12:48:46,627] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-03 12:48:46,627] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-03 12:48:46,628] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map(my-replicated-topic-0 -> Vector(0, 2, 1)) (kafka.controller.KafkaController)
[2020-06-03 12:48:46,628] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.019230769230769232 (kafka.controller.KafkaController)
[2020-06-03 12:53:46,629] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-03 12:53:46,629] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-03 12:53:46,630] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map(my-replicated-topic-0 -> Vector(0, 2, 1)) (kafka.controller.KafkaController)
[2020-06-03 12:53:46,630] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.019230769230769232 (kafka.controller.KafkaController)
[2020-06-03 12:58:02,571] INFO [Controller id=2] Shutting down broker 2 (kafka.controller.KafkaController)
[2020-06-03 12:58:02,571] DEBUG [Controller id=2] All shutting down brokers: 2 (kafka.controller.KafkaController)
[2020-06-03 12:58:02,572] DEBUG [Controller id=2] Live brokers: 0 (kafka.controller.KafkaController)
[2020-06-03 12:58:02,604] INFO [RequestSendThread controllerId=2] Controller 2 connected to BOKIE-SURFACE:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-06-03 12:58:02,605] INFO [RequestSendThread controllerId=2] Controller 2 connected to BOKIE-SURFACE:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-06-03 12:58:02,608] TRACE [Controller id=2] All leaders = __consumer_offsets-49 -> (Leader:0,ISR:0,LeaderEpoch:4,ControllerEpoch:4),__consumer_offsets-38 -> (Leader:0,ISR:0,LeaderEpoch:4,ControllerEpoch:4),__consumer_offsets-16 -> (Leader:0,ISR:0,LeaderEpoch:4,ControllerEpoch:4),__consumer_offsets-27 -> (Leader:0,ISR:0,LeaderEpoch:4,ControllerEpoch:4),__consumer_offsets-8 -> (Leader:0,ISR:0,LeaderEpoch:4,ControllerEpoch:4),__consumer_offsets-19 -> (Leader:0,ISR:0,LeaderEpoch:4,ControllerEpoch:4),__consumer_offsets-13 -> (Leader:0,ISR:0,LeaderEpoch:4,ControllerEpoch:4),__consumer_offsets-2 -> (Leader:0,ISR:0,LeaderEpoch:4,ControllerEpoch:4),__consumer_offsets-46 -> (Leader:0,ISR:0,LeaderEpoch:4,ControllerEpoch:4),__consumer_offsets-35 -> (Leader:0,ISR:0,LeaderEpoch:4,ControllerEpoch:4),__consumer_offsets-24 -> (Leader:0,ISR:0,LeaderEpoch:4,ControllerEpoch:4),__consumer_offsets-5 -> (Leader:0,ISR:0,LeaderEpoch:4,ControllerEpoch:4),__consumer_offsets-43 -> (Leader:0,ISR:0,LeaderEpoch:4,ControllerEpoch:4),__consumer_offsets-32 -> (Leader:0,ISR:0,LeaderEpoch:4,ControllerEpoch:4),__consumer_offsets-21 -> (Leader:0,ISR:0,LeaderEpoch:4,ControllerEpoch:4),__consumer_offsets-10 -> (Leader:0,ISR:0,LeaderEpoch:4,ControllerEpoch:4),__consumer_offsets-37 -> (Leader:0,ISR:0,LeaderEpoch:4,ControllerEpoch:4),my-replicated-topic-0 -> (Leader:0,ISR:0,LeaderEpoch:3,ControllerEpoch:5),__consumer_offsets-48 -> (Leader:0,ISR:0,LeaderEpoch:4,ControllerEpoch:4),__consumer_offsets-40 -> (Leader:0,ISR:0,LeaderEpoch:4,ControllerEpoch:4),__consumer_offsets-18 -> (Leader:0,ISR:0,LeaderEpoch:4,ControllerEpoch:4),__consumer_offsets-29 -> (Leader:0,ISR:0,LeaderEpoch:4,ControllerEpoch:4),__consumer_offsets-7 -> (Leader:0,ISR:0,LeaderEpoch:4,ControllerEpoch:4),__consumer_offsets-23 -> (Leader:0,ISR:0,LeaderEpoch:4,ControllerEpoch:4),__consumer_offsets-45 -> (Leader:0,ISR:0,LeaderEpoch:4,ControllerEpoch:4),__consumer_offsets-34 -> (Leader:0,ISR:0,LeaderEpoch:4,ControllerEpoch:4),__consumer_offsets-26 -> (Leader:0,ISR:0,LeaderEpoch:4,ControllerEpoch:4),__consumer_offsets-4 -> (Leader:0,ISR:0,LeaderEpoch:4,ControllerEpoch:4),__consumer_offsets-15 -> (Leader:0,ISR:0,LeaderEpoch:4,ControllerEpoch:4),__consumer_offsets-42 -> (Leader:0,ISR:0,LeaderEpoch:4,ControllerEpoch:4),__consumer_offsets-31 -> (Leader:0,ISR:0,LeaderEpoch:4,ControllerEpoch:4),__consumer_offsets-9 -> (Leader:0,ISR:0,LeaderEpoch:4,ControllerEpoch:4),__consumer_offsets-20 -> (Leader:0,ISR:0,LeaderEpoch:4,ControllerEpoch:4),test-0 -> (Leader:0,ISR:0,LeaderEpoch:4,ControllerEpoch:4),__consumer_offsets-12 -> (Leader:0,ISR:0,LeaderEpoch:4,ControllerEpoch:4),__consumer_offsets-1 -> (Leader:0,ISR:0,LeaderEpoch:4,ControllerEpoch:4),__consumer_offsets-28 -> (Leader:0,ISR:0,LeaderEpoch:4,ControllerEpoch:4),__consumer_offsets-17 -> (Leader:0,ISR:0,LeaderEpoch:4,ControllerEpoch:4),__consumer_offsets-6 -> (Leader:0,ISR:0,LeaderEpoch:4,ControllerEpoch:4),__consumer_offsets-39 -> (Leader:0,ISR:0,LeaderEpoch:4,ControllerEpoch:4),__consumer_offsets-44 -> (Leader:0,ISR:0,LeaderEpoch:4,ControllerEpoch:4),__consumer_offsets-36 -> (Leader:0,ISR:0,LeaderEpoch:4,ControllerEpoch:4),__consumer_offsets-47 -> (Leader:0,ISR:0,LeaderEpoch:4,ControllerEpoch:4),__consumer_offsets-3 -> (Leader:0,ISR:0,LeaderEpoch:4,ControllerEpoch:4),__consumer_offsets-25 -> (Leader:0,ISR:0,LeaderEpoch:4,ControllerEpoch:4),__consumer_offsets-14 -> (Leader:0,ISR:0,LeaderEpoch:4,ControllerEpoch:4),__consumer_offsets-30 -> (Leader:0,ISR:0,LeaderEpoch:4,ControllerEpoch:4),__consumer_offsets-41 -> (Leader:0,ISR:0,LeaderEpoch:4,ControllerEpoch:4),__consumer_offsets-33 -> (Leader:0,ISR:0,LeaderEpoch:4,ControllerEpoch:4),__consumer_offsets-22 -> (Leader:0,ISR:0,LeaderEpoch:4,ControllerEpoch:4),__consumer_offsets-11 -> (Leader:0,ISR:0,LeaderEpoch:4,ControllerEpoch:4),__consumer_offsets-0 -> (Leader:0,ISR:0,LeaderEpoch:4,ControllerEpoch:4) (kafka.controller.KafkaController)
[2020-06-03 12:58:02,627] WARN [RequestSendThread controllerId=2] Controller 2 epoch 5 fails to send request (type=LeaderAndIsRequest, controllerId=2, controllerEpoch=5, brokerEpoch=433, partitionStates=[LeaderAndIsrPartitionState(topicName='my-replicated-topic', partitionIndex=0, controllerEpoch=5, leader=0, leaderEpoch=3, isr=[0], zkVersion=4, replicas=[0, 2, 1], addingReplicas=[], removingReplicas=[], isNew=false)], liveLeaders=(BOKIE-SURFACE:9092 (id: 0 rack: null))) to broker BOKIE-SURFACE:9094 (id: 2 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 2 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:100)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:249)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-03 12:58:03,627] INFO [ControllerEventThread controllerId=2] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-06-03 12:58:03,629] INFO [ControllerEventThread controllerId=2] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-06-03 12:58:03,629] INFO [ControllerEventThread controllerId=2] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-06-03 12:58:03,630] DEBUG [Controller id=2] Resigning (kafka.controller.KafkaController)
[2020-06-03 12:58:03,631] DEBUG [Controller id=2] Unregister BrokerModifications handler for Set(2, 0) (kafka.controller.KafkaController)
[2020-06-03 12:58:03,633] INFO [PartitionStateMachine controllerId=2] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-06-03 12:58:03,634] INFO [ReplicaStateMachine controllerId=2] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-06-03 12:58:03,634] INFO [RequestSendThread controllerId=2] Shutting down (kafka.controller.RequestSendThread)
[2020-06-03 12:58:03,635] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker BOKIE-SURFACE:9094 (id: 2 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
org.apache.kafka.common.errors.DisconnectException: NetworkClient is no longer active, state is CLOSING
[2020-06-03 12:58:03,635] WARN [RequestSendThread controllerId=2] Controller 2 epoch 5 fails to send request (type=LeaderAndIsRequest, controllerId=2, controllerEpoch=5, brokerEpoch=433, partitionStates=[LeaderAndIsrPartitionState(topicName='my-replicated-topic', partitionIndex=0, controllerEpoch=5, leader=0, leaderEpoch=3, isr=[0], zkVersion=4, replicas=[0, 2, 1], addingReplicas=[], removingReplicas=[], isNew=false)], liveLeaders=(BOKIE-SURFACE:9092 (id: 0 rack: null))) to broker BOKIE-SURFACE:9094 (id: 2 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.lang.InterruptedException
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(Unknown Source)
	at java.util.concurrent.CountDownLatch.await(Unknown Source)
	at kafka.utils.ShutdownableThread.pause(ShutdownableThread.scala:82)
	at kafka.controller.RequestSendThread.backoff$1(ControllerChannelManager.scala:230)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:244)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-03 12:58:03,635] TRACE [RequestSendThread controllerId=2] shutdownInitiated latch count reached zero. Shutdown called. (kafka.controller.RequestSendThread)
[2020-06-03 12:58:03,635] INFO [RequestSendThread controllerId=2] Stopped (kafka.controller.RequestSendThread)
[2020-06-03 12:58:03,636] INFO [RequestSendThread controllerId=2] Shutdown completed (kafka.controller.RequestSendThread)
[2020-06-03 12:58:03,638] INFO [RequestSendThread controllerId=2] Shutting down (kafka.controller.RequestSendThread)
[2020-06-03 12:58:03,639] INFO [RequestSendThread controllerId=2] Stopped (kafka.controller.RequestSendThread)
[2020-06-03 12:58:03,639] INFO [RequestSendThread controllerId=2] Shutdown completed (kafka.controller.RequestSendThread)
[2020-06-03 12:58:03,642] INFO [Controller id=2] Resigned (kafka.controller.KafkaController)
[2020-06-03 12:58:03,653] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 6 and epoch zk version is now 6 (kafka.controller.KafkaController)
[2020-06-03 12:58:03,653] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2020-06-03 12:58:03,656] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-06-03 12:58:03,665] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-06-03 12:58:03,667] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2020-06-03 12:58:03,672] INFO [Controller id=0] Initialized broker epochs cache: Map(0 -> 508) (kafka.controller.KafkaController)
[2020-06-03 12:58:03,681] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2020-06-03 12:58:03,711] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2020-06-03 12:58:03,720] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-06-03 12:58:03,720] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2020-06-03 12:58:03,720] INFO [Controller id=0] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2020-06-03 12:58:03,720] INFO [Controller id=0] Current list of topics in the cluster: Set(test, my-replicated-topic, __consumer_offsets) (kafka.controller.KafkaController)
[2020-06-03 12:58:03,721] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-06-03 12:58:03,727] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-06-03 12:58:03,727] INFO [Controller id=0] List of topics ineligible for deletion: my-replicated-topic (kafka.controller.KafkaController)
[2020-06-03 12:58:03,727] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-06-03 12:58:03,727] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set(my-replicated-topic) (kafka.controller.TopicDeletionManager)
[2020-06-03 12:58:03,728] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2020-06-03 12:58:03,738] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-06-03 12:58:03,738] INFO [RequestSendThread controllerId=0] Controller 0 connected to BOKIE-SURFACE:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-06-03 12:58:03,744] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-06-03 12:58:03,789] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-06-03 12:58:03,802] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> Map([Topic=__consumer_offsets,Partition=21,Replica=0] -> OnlineReplica, [Topic=my-replicated-topic,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=42,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=46,Replica=0] -> OnlineReplica, [Topic=my-replicated-topic,Partition=0,Replica=2] -> OfflineReplica, [Topic=my-replicated-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=39,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=7,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=13,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=49,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=48,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=15,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=38,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=2,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=28,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=23,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=32,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=10,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=18,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=33,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=5,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=17,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=8,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=19,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=37,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=43,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=6,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=9,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=30,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=3,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=25,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=47,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=36,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=11,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=34,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=27,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=12,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=44,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=1,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=45,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=24,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=22,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=31,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=14,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=40,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=4,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=20,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=41,Replica=0] -> OnlineReplica, [Topic=test,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=26,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=29,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=16,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=35,Replica=0] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2020-06-03 12:58:03,803] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-06-03 12:58:03,809] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-06-03 12:58:03,813] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> Map(__consumer_offsets-49 -> OnlinePartition, __consumer_offsets-38 -> OnlinePartition, __consumer_offsets-16 -> OnlinePartition, __consumer_offsets-27 -> OnlinePartition, __consumer_offsets-8 -> OnlinePartition, __consumer_offsets-19 -> OnlinePartition, __consumer_offsets-13 -> OnlinePartition, __consumer_offsets-2 -> OnlinePartition, __consumer_offsets-46 -> OnlinePartition, __consumer_offsets-35 -> OnlinePartition, __consumer_offsets-24 -> OnlinePartition, __consumer_offsets-5 -> OnlinePartition, __consumer_offsets-43 -> OnlinePartition, __consumer_offsets-32 -> OnlinePartition, __consumer_offsets-21 -> OnlinePartition, __consumer_offsets-10 -> OnlinePartition, __consumer_offsets-37 -> OnlinePartition, my-replicated-topic-0 -> OnlinePartition, __consumer_offsets-48 -> OnlinePartition, __consumer_offsets-40 -> OnlinePartition, __consumer_offsets-18 -> OnlinePartition, __consumer_offsets-29 -> OnlinePartition, __consumer_offsets-7 -> OnlinePartition, __consumer_offsets-23 -> OnlinePartition, __consumer_offsets-45 -> OnlinePartition, __consumer_offsets-34 -> OnlinePartition, __consumer_offsets-26 -> OnlinePartition, __consumer_offsets-4 -> OnlinePartition, __consumer_offsets-15 -> OnlinePartition, __consumer_offsets-42 -> OnlinePartition, __consumer_offsets-31 -> OnlinePartition, __consumer_offsets-9 -> OnlinePartition, __consumer_offsets-20 -> OnlinePartition, test-0 -> OnlinePartition, __consumer_offsets-12 -> OnlinePartition, __consumer_offsets-1 -> OnlinePartition, __consumer_offsets-28 -> OnlinePartition, __consumer_offsets-17 -> OnlinePartition, __consumer_offsets-6 -> OnlinePartition, __consumer_offsets-39 -> OnlinePartition, __consumer_offsets-44 -> OnlinePartition, __consumer_offsets-36 -> OnlinePartition, __consumer_offsets-47 -> OnlinePartition, __consumer_offsets-3 -> OnlinePartition, __consumer_offsets-25 -> OnlinePartition, __consumer_offsets-14 -> OnlinePartition, __consumer_offsets-30 -> OnlinePartition, __consumer_offsets-41 -> OnlinePartition, __consumer_offsets-33 -> OnlinePartition, __consumer_offsets-22 -> OnlinePartition, __consumer_offsets-11 -> OnlinePartition, __consumer_offsets-0 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2020-06-03 12:58:03,813] INFO [Controller id=0] Ready to serve as the new controller with epoch 6 (kafka.controller.KafkaController)
[2020-06-03 12:58:03,818] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-06-03 12:58:03,818] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-06-03 12:58:03,819] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-06-03 12:58:03,819] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-06-03 12:58:03,820] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-06-03 12:58:03,829] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-06-03 12:58:08,831] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-03 12:58:08,831] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-03 12:58:08,834] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-03 12:58:08,835] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-03 12:58:14,999] INFO [Controller id=0] Newly added brokers: 2, deleted brokers: , bounced brokers: , all live brokers: 0,2 (kafka.controller.KafkaController)
[2020-06-03 12:58:15,000] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2020-06-03 12:58:15,012] INFO [Controller id=0] New broker startup callback for 2 (kafka.controller.KafkaController)
[2020-06-03 12:58:15,012] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-06-03 12:58:15,017] INFO [RequestSendThread controllerId=0] Controller 0 connected to BOKIE-SURFACE:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-06-03 12:58:15,022] DEBUG [Controller id=0] Register BrokerModifications handler for Vector(2) (kafka.controller.KafkaController)
[2020-06-03 12:58:15,024] INFO [Controller id=0] Updated broker epochs cache: Map(0 -> 508, 2 -> 587) (kafka.controller.KafkaController)
[2020-06-03 12:58:15,079] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-06-03 12:58:15,098] DEBUG [Controller id=2] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-06-03 12:58:17,275] DEBUG [Controller id=0] Sending MetadataRequest to Brokers: Vector(0, 2) for TopicPartitions: ArrayBuffer(my-replicated-topic-0) (kafka.controller.KafkaController)
[2020-06-03 12:58:32,661] INFO [Controller id=0] Newly added brokers: 1, deleted brokers: , bounced brokers: , all live brokers: 0,1,2 (kafka.controller.KafkaController)
[2020-06-03 12:58:32,661] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2020-06-03 12:58:32,665] INFO [Controller id=0] New broker startup callback for 1 (kafka.controller.KafkaController)
[2020-06-03 12:58:32,670] DEBUG [Controller id=0] Register BrokerModifications handler for Vector(1) (kafka.controller.KafkaController)
[2020-06-03 12:58:32,679] INFO [Controller id=0] Updated broker epochs cache: Map(0 -> 508, 2 -> 587, 1 -> 606) (kafka.controller.KafkaController)
[2020-06-03 12:58:32,694] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-06-03 12:58:32,699] INFO [RequestSendThread controllerId=0] Controller 0 connected to BOKIE-SURFACE:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-06-03 12:58:32,736] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-06-03 12:58:32,753] DEBUG [Controller id=1] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-06-03 12:58:39,748] DEBUG [Controller id=0] Sending MetadataRequest to Brokers: Vector(0, 2, 1) for TopicPartitions: ArrayBuffer(my-replicated-topic-0) (kafka.controller.KafkaController)
[2020-06-03 13:00:20,416] INFO [Controller id=2] 2 successfully elected as the controller. Epoch incremented to 7 and epoch zk version is now 7 (kafka.controller.KafkaController)
[2020-06-03 13:00:20,416] INFO [Controller id=2] Registering handlers (kafka.controller.KafkaController)
[2020-06-03 13:00:20,431] INFO [Controller id=2] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-06-03 13:00:20,431] DEBUG [Controller id=1] Broker 2 was elected as controller instead of broker 1 (kafka.controller.KafkaController)
org.apache.kafka.common.errors.ControllerMovedException: Controller moved to another broker. Aborting controller startup procedure
[2020-06-03 13:00:20,431] INFO [Controller id=2] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-06-03 13:00:20,431] INFO [Controller id=2] Initializing controller context (kafka.controller.KafkaController)
[2020-06-03 13:00:20,447] INFO [Controller id=2] Initialized broker epochs cache: Map(1 -> 606, 2 -> 587) (kafka.controller.KafkaController)
[2020-06-03 13:00:20,447] DEBUG [Controller id=2] Register BrokerModifications handler for Set(1, 2) (kafka.controller.KafkaController)
[2020-06-03 13:00:20,525] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2020-06-03 13:00:20,525] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2020-06-03 13:00:20,541] INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread)
[2020-06-03 13:00:20,541] INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread)
[2020-06-03 13:00:20,541] INFO [Controller id=2] Currently active brokers in the cluster: Set(1, 2) (kafka.controller.KafkaController)
[2020-06-03 13:00:20,541] INFO [Controller id=2] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2020-06-03 13:00:20,541] INFO [Controller id=2] Current list of topics in the cluster: Set(test, my-replicated-topic, __consumer_offsets) (kafka.controller.KafkaController)
[2020-06-03 13:00:20,541] INFO [Controller id=2] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-06-03 13:00:20,556] INFO [Controller id=2] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-06-03 13:00:20,556] INFO [Controller id=2] List of topics ineligible for deletion: test,my-replicated-topic,__consumer_offsets (kafka.controller.KafkaController)
[2020-06-03 13:00:20,556] INFO [Controller id=2] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-06-03 13:00:20,556] INFO [Topic Deletion Manager 2] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set(test, my-replicated-topic, __consumer_offsets) (kafka.controller.TopicDeletionManager)
[2020-06-03 13:00:20,556] INFO [Controller id=2] Sending update metadata request (kafka.controller.KafkaController)
[2020-06-03 13:00:20,572] INFO [RequestSendThread controllerId=2] Controller 2 connected to BOKIE-SURFACE:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-06-03 13:00:20,572] INFO [RequestSendThread controllerId=2] Controller 2 connected to BOKIE-SURFACE:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-06-03 13:00:20,588] INFO [ReplicaStateMachine controllerId=2] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-06-03 13:00:20,588] INFO [ReplicaStateMachine controllerId=2] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-06-03 13:00:20,634] INFO [ReplicaStateMachine controllerId=2] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-06-03 13:00:20,791] DEBUG [ReplicaStateMachine controllerId=2] Started replica state machine with initial state -> Map([Topic=__consumer_offsets,Partition=21,Replica=0] -> OfflineReplica, [Topic=my-replicated-topic,Partition=0,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=42,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=46,Replica=0] -> OfflineReplica, [Topic=my-replicated-topic,Partition=0,Replica=2] -> OnlineReplica, [Topic=my-replicated-topic,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=39,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=7,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=13,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=49,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=48,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=15,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=38,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=2,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=28,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=23,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=32,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=10,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=18,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=33,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=5,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=17,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=8,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=19,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=37,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=43,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=6,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=9,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=30,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=3,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=25,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=47,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=36,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=11,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=34,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=27,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=12,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=44,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=1,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=45,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=24,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=22,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=0,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=31,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=14,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=40,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=4,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=20,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=41,Replica=0] -> OfflineReplica, [Topic=test,Partition=0,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=26,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=29,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=16,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=35,Replica=0] -> OfflineReplica) (kafka.controller.ZkReplicaStateMachine)
[2020-06-03 13:00:20,791] INFO [PartitionStateMachine controllerId=2] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-06-03 13:00:20,806] INFO [PartitionStateMachine controllerId=2] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-06-03 13:00:20,900] DEBUG [PartitionStateMachine controllerId=2] Started partition state machine with initial state -> Map(__consumer_offsets-49 -> OfflinePartition, __consumer_offsets-38 -> OfflinePartition, __consumer_offsets-16 -> OfflinePartition, __consumer_offsets-27 -> OfflinePartition, __consumer_offsets-8 -> OfflinePartition, __consumer_offsets-19 -> OfflinePartition, __consumer_offsets-13 -> OfflinePartition, __consumer_offsets-2 -> OfflinePartition, __consumer_offsets-46 -> OfflinePartition, __consumer_offsets-35 -> OfflinePartition, __consumer_offsets-24 -> OfflinePartition, __consumer_offsets-5 -> OfflinePartition, __consumer_offsets-43 -> OfflinePartition, __consumer_offsets-32 -> OfflinePartition, __consumer_offsets-21 -> OfflinePartition, __consumer_offsets-10 -> OfflinePartition, __consumer_offsets-37 -> OfflinePartition, my-replicated-topic-0 -> OnlinePartition, __consumer_offsets-48 -> OfflinePartition, __consumer_offsets-40 -> OfflinePartition, __consumer_offsets-18 -> OfflinePartition, __consumer_offsets-29 -> OfflinePartition, __consumer_offsets-7 -> OfflinePartition, __consumer_offsets-23 -> OfflinePartition, __consumer_offsets-45 -> OfflinePartition, __consumer_offsets-34 -> OfflinePartition, __consumer_offsets-26 -> OfflinePartition, __consumer_offsets-4 -> OfflinePartition, __consumer_offsets-15 -> OfflinePartition, __consumer_offsets-42 -> OfflinePartition, __consumer_offsets-31 -> OfflinePartition, __consumer_offsets-9 -> OfflinePartition, __consumer_offsets-20 -> OfflinePartition, test-0 -> OfflinePartition, __consumer_offsets-12 -> OfflinePartition, __consumer_offsets-1 -> OfflinePartition, __consumer_offsets-28 -> OfflinePartition, __consumer_offsets-17 -> OfflinePartition, __consumer_offsets-6 -> OfflinePartition, __consumer_offsets-39 -> OfflinePartition, __consumer_offsets-44 -> OfflinePartition, __consumer_offsets-36 -> OfflinePartition, __consumer_offsets-47 -> OfflinePartition, __consumer_offsets-3 -> OfflinePartition, __consumer_offsets-25 -> OfflinePartition, __consumer_offsets-14 -> OfflinePartition, __consumer_offsets-30 -> OfflinePartition, __consumer_offsets-41 -> OfflinePartition, __consumer_offsets-33 -> OfflinePartition, __consumer_offsets-22 -> OfflinePartition, __consumer_offsets-11 -> OfflinePartition, __consumer_offsets-0 -> OfflinePartition) (kafka.controller.ZkPartitionStateMachine)
[2020-06-03 13:00:20,900] INFO [Controller id=2] Ready to serve as the new controller with epoch 7 (kafka.controller.KafkaController)
[2020-06-03 13:00:20,931] INFO [Controller id=2] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-06-03 13:00:20,931] INFO [Controller id=2] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-06-03 13:00:20,931] INFO [Controller id=2] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-06-03 13:00:20,931] INFO [Controller id=2] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-06-03 13:00:20,931] INFO [Controller id=2] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-06-03 13:00:20,947] INFO [Controller id=2] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-06-03 13:00:25,961] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-03 13:00:25,961] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-03 13:00:25,961] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map(__consumer_offsets-22 -> Vector(0), __consumer_offsets-30 -> Vector(0), __consumer_offsets-8 -> Vector(0), __consumer_offsets-21 -> Vector(0), __consumer_offsets-4 -> Vector(0), __consumer_offsets-27 -> Vector(0), __consumer_offsets-7 -> Vector(0), __consumer_offsets-9 -> Vector(0), __consumer_offsets-46 -> Vector(0), my-replicated-topic-0 -> Vector(0, 2, 1), __consumer_offsets-25 -> Vector(0), __consumer_offsets-35 -> Vector(0), __consumer_offsets-41 -> Vector(0), __consumer_offsets-33 -> Vector(0), __consumer_offsets-23 -> Vector(0), __consumer_offsets-49 -> Vector(0), __consumer_offsets-47 -> Vector(0), __consumer_offsets-16 -> Vector(0), test-0 -> Vector(0), __consumer_offsets-28 -> Vector(0), __consumer_offsets-31 -> Vector(0), __consumer_offsets-36 -> Vector(0), __consumer_offsets-42 -> Vector(0), __consumer_offsets-3 -> Vector(0), __consumer_offsets-18 -> Vector(0), __consumer_offsets-37 -> Vector(0), __consumer_offsets-15 -> Vector(0), __consumer_offsets-24 -> Vector(0), __consumer_offsets-38 -> Vector(0), __consumer_offsets-17 -> Vector(0), __consumer_offsets-48 -> Vector(0), __consumer_offsets-19 -> Vector(0), __consumer_offsets-11 -> Vector(0), __consumer_offsets-13 -> Vector(0), __consumer_offsets-2 -> Vector(0), __consumer_offsets-43 -> Vector(0), __consumer_offsets-6 -> Vector(0), __consumer_offsets-14 -> Vector(0), __consumer_offsets-20 -> Vector(0), __consumer_offsets-0 -> Vector(0), __consumer_offsets-44 -> Vector(0), __consumer_offsets-39 -> Vector(0), __consumer_offsets-12 -> Vector(0), __consumer_offsets-45 -> Vector(0), __consumer_offsets-1 -> Vector(0), __consumer_offsets-5 -> Vector(0), __consumer_offsets-26 -> Vector(0), __consumer_offsets-29 -> Vector(0), __consumer_offsets-34 -> Vector(0), __consumer_offsets-10 -> Vector(0), __consumer_offsets-32 -> Vector(0), __consumer_offsets-40 -> Vector(0)) (kafka.controller.KafkaController)
[2020-06-03 13:00:25,961] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 1.0 (kafka.controller.KafkaController)
[2020-06-03 13:00:25,961] INFO [Controller id=2] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2020-06-03 13:01:54,301] INFO [Controller id=2] Newly added brokers: 0, deleted brokers: , bounced brokers: , all live brokers: 0,1,2 (kafka.controller.KafkaController)
[2020-06-03 13:01:54,303] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2020-06-03 13:01:54,310] INFO [Controller id=2] New broker startup callback for 0 (kafka.controller.KafkaController)
[2020-06-03 13:01:54,460] INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread)
[2020-06-03 13:01:54,462] INFO [RequestSendThread controllerId=2] Controller 2 connected to BOKIE-SURFACE:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-06-03 13:01:54,465] DEBUG [Controller id=2] Register BrokerModifications handler for Vector(0) (kafka.controller.KafkaController)
[2020-06-03 13:01:54,467] INFO [Controller id=2] Updated broker epochs cache: Map(1 -> 606, 2 -> 587, 0 -> 682) (kafka.controller.KafkaController)
[2020-06-03 13:01:54,526] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-06-03 13:01:54,547] DEBUG [Controller id=0] Broker 2 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-06-03 13:01:57,414] DEBUG [Controller id=2] Sending MetadataRequest to Brokers: Vector(1, 2, 0) for TopicPartitions: ArrayBuffer(my-replicated-topic-0) (kafka.controller.KafkaController)
[2020-06-03 13:05:25,974] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-03 13:05:25,974] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-03 13:05:25,974] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map(my-replicated-topic-0 -> Vector(0, 2, 1)) (kafka.controller.KafkaController)
[2020-06-03 13:05:25,974] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.019230769230769232 (kafka.controller.KafkaController)
[2020-06-03 13:10:25,977] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-03 13:10:25,977] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-03 13:10:25,977] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map(my-replicated-topic-0 -> Vector(0, 2, 1)) (kafka.controller.KafkaController)
[2020-06-03 13:10:25,977] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.019230769230769232 (kafka.controller.KafkaController)
[2020-06-03 13:15:08,414] INFO [Controller id=2] Newly added brokers: , deleted brokers: 0, bounced brokers: , all live brokers: 1,2 (kafka.controller.KafkaController)
[2020-06-03 13:15:08,414] INFO [RequestSendThread controllerId=2] Shutting down (kafka.controller.RequestSendThread)
[2020-06-03 13:15:08,414] INFO [RequestSendThread controllerId=2] Stopped (kafka.controller.RequestSendThread)
[2020-06-03 13:15:08,414] INFO [RequestSendThread controllerId=2] Shutdown completed (kafka.controller.RequestSendThread)
[2020-06-03 13:15:08,419] INFO [Controller id=2] Broker failure callback for 0 (kafka.controller.KafkaController)
[2020-06-03 13:15:08,509] INFO [RequestSendThread controllerId=2] Controller 2 connected to BOKIE-SURFACE:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-06-03 13:15:08,511] INFO [RequestSendThread controllerId=2] Controller 2 connected to BOKIE-SURFACE:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-06-03 13:15:08,511] DEBUG [Controller id=2] Unregister BrokerModifications handler for Vector(0) (kafka.controller.KafkaController)
[2020-06-03 13:15:08,512] INFO [Controller id=2] Updated broker epochs cache: Map(1 -> 606, 2 -> 587) (kafka.controller.KafkaController)
[2020-06-03 13:15:25,979] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-03 13:15:25,979] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-03 13:15:25,981] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map(__consumer_offsets-22 -> Vector(0), __consumer_offsets-30 -> Vector(0), __consumer_offsets-8 -> Vector(0), __consumer_offsets-21 -> Vector(0), __consumer_offsets-4 -> Vector(0), __consumer_offsets-27 -> Vector(0), __consumer_offsets-7 -> Vector(0), __consumer_offsets-9 -> Vector(0), __consumer_offsets-46 -> Vector(0), my-replicated-topic-0 -> Vector(0, 2, 1), __consumer_offsets-25 -> Vector(0), __consumer_offsets-35 -> Vector(0), __consumer_offsets-41 -> Vector(0), __consumer_offsets-33 -> Vector(0), __consumer_offsets-23 -> Vector(0), __consumer_offsets-49 -> Vector(0), __consumer_offsets-47 -> Vector(0), __consumer_offsets-16 -> Vector(0), test-0 -> Vector(0), __consumer_offsets-28 -> Vector(0), __consumer_offsets-31 -> Vector(0), __consumer_offsets-36 -> Vector(0), __consumer_offsets-42 -> Vector(0), __consumer_offsets-3 -> Vector(0), __consumer_offsets-18 -> Vector(0), __consumer_offsets-37 -> Vector(0), __consumer_offsets-15 -> Vector(0), __consumer_offsets-24 -> Vector(0), __consumer_offsets-38 -> Vector(0), __consumer_offsets-17 -> Vector(0), __consumer_offsets-48 -> Vector(0), __consumer_offsets-19 -> Vector(0), __consumer_offsets-11 -> Vector(0), __consumer_offsets-13 -> Vector(0), __consumer_offsets-2 -> Vector(0), __consumer_offsets-43 -> Vector(0), __consumer_offsets-6 -> Vector(0), __consumer_offsets-14 -> Vector(0), __consumer_offsets-20 -> Vector(0), __consumer_offsets-0 -> Vector(0), __consumer_offsets-44 -> Vector(0), __consumer_offsets-39 -> Vector(0), __consumer_offsets-12 -> Vector(0), __consumer_offsets-45 -> Vector(0), __consumer_offsets-1 -> Vector(0), __consumer_offsets-5 -> Vector(0), __consumer_offsets-26 -> Vector(0), __consumer_offsets-29 -> Vector(0), __consumer_offsets-34 -> Vector(0), __consumer_offsets-10 -> Vector(0), __consumer_offsets-32 -> Vector(0), __consumer_offsets-40 -> Vector(0)) (kafka.controller.KafkaController)
[2020-06-03 13:15:25,981] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 1.0 (kafka.controller.KafkaController)
[2020-06-03 13:15:25,981] INFO [Controller id=2] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2020-06-03 13:19:47,302] INFO [Controller id=2] Newly added brokers: 0, deleted brokers: , bounced brokers: , all live brokers: 0,1,2 (kafka.controller.KafkaController)
[2020-06-03 13:19:47,302] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2020-06-03 13:19:47,307] INFO [Controller id=2] New broker startup callback for 0 (kafka.controller.KafkaController)
[2020-06-03 13:19:47,337] INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread)
[2020-06-03 13:19:47,347] INFO [RequestSendThread controllerId=2] Controller 2 connected to BOKIE-SURFACE:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-06-03 13:19:47,405] DEBUG [Controller id=2] Register BrokerModifications handler for Vector(0) (kafka.controller.KafkaController)
[2020-06-03 13:19:47,409] INFO [Controller id=2] Updated broker epochs cache: Map(1 -> 606, 2 -> 587, 0 -> 805) (kafka.controller.KafkaController)
[2020-06-03 13:19:47,448] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-06-03 13:19:47,472] DEBUG [Controller id=0] Broker 2 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-06-03 13:19:49,920] DEBUG [Controller id=2] Sending MetadataRequest to Brokers: Vector(1, 2, 0) for TopicPartitions: ArrayBuffer(my-replicated-topic-0) (kafka.controller.KafkaController)
[2020-06-03 13:20:25,983] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-03 13:20:25,983] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-03 13:20:25,983] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map(my-replicated-topic-0 -> Vector(0, 2, 1)) (kafka.controller.KafkaController)
[2020-06-03 13:20:25,983] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.019230769230769232 (kafka.controller.KafkaController)
[2020-06-03 13:25:25,986] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-03 13:25:25,986] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-03 13:25:25,986] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map(my-replicated-topic-0 -> Vector(0, 2, 1)) (kafka.controller.KafkaController)
[2020-06-03 13:25:25,986] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.019230769230769232 (kafka.controller.KafkaController)
[2020-06-03 13:30:25,987] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-03 13:30:25,987] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-03 13:30:25,987] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map(my-replicated-topic-0 -> Vector(0, 2, 1)) (kafka.controller.KafkaController)
[2020-06-03 13:30:25,987] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.019230769230769232 (kafka.controller.KafkaController)
[2020-06-03 13:35:25,988] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-03 13:35:25,988] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-03 13:35:25,988] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map(my-replicated-topic-0 -> Vector(0, 2, 1)) (kafka.controller.KafkaController)
[2020-06-03 13:35:25,989] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.019230769230769232 (kafka.controller.KafkaController)
[2020-06-03 13:40:25,990] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-03 13:40:25,990] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-03 13:40:25,990] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map(my-replicated-topic-0 -> Vector(0, 2, 1)) (kafka.controller.KafkaController)
[2020-06-03 13:40:25,990] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.019230769230769232 (kafka.controller.KafkaController)
[2020-06-03 13:45:25,993] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-03 13:45:25,993] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-03 13:45:25,993] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map(my-replicated-topic-0 -> Vector(0, 2, 1)) (kafka.controller.KafkaController)
[2020-06-03 13:45:25,993] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.019230769230769232 (kafka.controller.KafkaController)
[2020-06-03 13:50:25,994] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-03 13:50:25,994] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-03 13:50:25,994] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map(my-replicated-topic-0 -> Vector(0, 2, 1)) (kafka.controller.KafkaController)
[2020-06-03 13:50:25,994] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.019230769230769232 (kafka.controller.KafkaController)
[2020-06-03 13:55:25,996] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-03 13:55:25,996] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-03 13:55:25,997] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map(my-replicated-topic-0 -> Vector(0, 2, 1)) (kafka.controller.KafkaController)
[2020-06-03 13:55:25,997] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.019230769230769232 (kafka.controller.KafkaController)
[2020-06-03 14:00:25,997] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-03 14:00:25,998] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-03 14:00:25,999] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map(my-replicated-topic-0 -> Vector(0, 2, 1)) (kafka.controller.KafkaController)
[2020-06-03 14:00:25,999] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.019230769230769232 (kafka.controller.KafkaController)
[2020-06-03 14:05:26,009] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-03 14:05:26,009] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-03 14:05:26,009] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map(my-replicated-topic-0 -> Vector(0, 2, 1)) (kafka.controller.KafkaController)
[2020-06-03 14:05:26,009] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.019230769230769232 (kafka.controller.KafkaController)
[2020-06-03 14:10:26,011] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-03 14:10:26,011] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-03 14:10:26,011] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map(my-replicated-topic-0 -> Vector(0, 2, 1)) (kafka.controller.KafkaController)
[2020-06-03 14:10:26,011] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.019230769230769232 (kafka.controller.KafkaController)
[2020-06-03 14:15:26,013] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-03 14:15:26,013] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-03 14:15:26,013] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map(my-replicated-topic-0 -> Vector(0, 2, 1)) (kafka.controller.KafkaController)
[2020-06-03 14:15:26,013] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.019230769230769232 (kafka.controller.KafkaController)
[2020-06-03 14:20:26,015] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-03 14:20:26,015] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-03 14:20:26,016] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map(my-replicated-topic-0 -> Vector(0, 2, 1)) (kafka.controller.KafkaController)
[2020-06-03 14:20:26,016] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.019230769230769232 (kafka.controller.KafkaController)
[2020-06-03 14:25:26,016] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-03 14:25:26,016] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-03 14:25:26,016] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map(my-replicated-topic-0 -> Vector(0, 2, 1)) (kafka.controller.KafkaController)
[2020-06-03 14:25:26,016] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.019230769230769232 (kafka.controller.KafkaController)
[2020-06-03 14:30:26,017] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-03 14:30:26,017] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-03 14:30:26,018] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map(my-replicated-topic-0 -> Vector(0, 2, 1)) (kafka.controller.KafkaController)
[2020-06-03 14:30:26,018] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.019230769230769232 (kafka.controller.KafkaController)
[2020-06-03 14:35:26,019] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-03 14:35:26,019] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-03 14:35:26,020] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map(my-replicated-topic-0 -> Vector(0, 2, 1)) (kafka.controller.KafkaController)
[2020-06-03 14:35:26,020] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.019230769230769232 (kafka.controller.KafkaController)
[2020-06-03 14:40:26,020] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-03 14:40:26,020] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-03 14:40:26,020] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map(my-replicated-topic-0 -> Vector(0, 2, 1)) (kafka.controller.KafkaController)
[2020-06-03 14:40:26,020] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.019230769230769232 (kafka.controller.KafkaController)
[2020-06-03 14:45:26,022] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-03 14:45:26,022] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-03 14:45:26,022] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map(my-replicated-topic-0 -> Vector(0, 2, 1)) (kafka.controller.KafkaController)
[2020-06-03 14:45:26,022] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.019230769230769232 (kafka.controller.KafkaController)
[2020-06-03 14:50:26,023] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-03 14:50:26,023] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-03 14:50:26,023] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map(my-replicated-topic-0 -> Vector(0, 2, 1)) (kafka.controller.KafkaController)
[2020-06-03 14:50:26,023] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.019230769230769232 (kafka.controller.KafkaController)
[2020-06-03 14:55:26,025] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-03 14:55:26,025] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-03 14:55:26,025] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map(my-replicated-topic-0 -> Vector(0, 2, 1)) (kafka.controller.KafkaController)
[2020-06-03 14:55:26,025] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.019230769230769232 (kafka.controller.KafkaController)
[2020-06-03 15:00:26,028] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-03 15:00:26,029] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-03 15:00:26,029] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map(my-replicated-topic-0 -> Vector(0, 2, 1)) (kafka.controller.KafkaController)
[2020-06-03 15:00:26,029] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.019230769230769232 (kafka.controller.KafkaController)
[2020-06-03 15:05:26,032] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-03 15:05:26,032] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-03 15:05:26,032] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map(my-replicated-topic-0 -> Vector(0, 2, 1)) (kafka.controller.KafkaController)
[2020-06-03 15:05:26,032] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.019230769230769232 (kafka.controller.KafkaController)
[2020-06-03 15:10:26,033] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-03 15:10:26,033] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-03 15:10:26,034] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map(my-replicated-topic-0 -> Vector(0, 2, 1)) (kafka.controller.KafkaController)
[2020-06-03 15:10:26,034] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.019230769230769232 (kafka.controller.KafkaController)
[2020-06-03 15:15:26,049] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-03 15:15:26,049] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-03 15:15:26,049] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map(my-replicated-topic-0 -> Vector(0, 2, 1)) (kafka.controller.KafkaController)
[2020-06-03 15:15:26,049] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.019230769230769232 (kafka.controller.KafkaController)
[2020-06-03 15:20:26,055] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-03 15:20:26,055] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-03 15:20:26,055] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map(my-replicated-topic-0 -> Vector(0, 2, 1)) (kafka.controller.KafkaController)
[2020-06-03 15:20:26,055] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.019230769230769232 (kafka.controller.KafkaController)
[2020-06-03 15:25:26,057] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-03 15:25:26,057] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-03 15:25:26,058] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map(my-replicated-topic-0 -> Vector(0, 2, 1)) (kafka.controller.KafkaController)
[2020-06-03 15:25:26,058] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.019230769230769232 (kafka.controller.KafkaController)
[2020-06-03 15:30:26,060] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-03 15:30:26,060] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-03 15:30:26,060] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map(my-replicated-topic-0 -> Vector(0, 2, 1)) (kafka.controller.KafkaController)
[2020-06-03 15:30:26,060] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.019230769230769232 (kafka.controller.KafkaController)
[2020-06-03 15:35:26,061] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-03 15:35:26,061] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-03 15:35:26,062] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map(my-replicated-topic-0 -> Vector(0, 2, 1)) (kafka.controller.KafkaController)
[2020-06-03 15:35:26,062] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.019230769230769232 (kafka.controller.KafkaController)
[2020-06-03 15:40:26,063] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-03 15:40:26,063] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-03 15:40:26,067] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map(my-replicated-topic-0 -> Vector(0, 2, 1)) (kafka.controller.KafkaController)
[2020-06-03 15:40:26,067] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.019230769230769232 (kafka.controller.KafkaController)
[2020-06-03 15:45:26,068] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-03 15:45:26,068] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-03 15:45:26,069] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map(my-replicated-topic-0 -> Vector(0, 2, 1)) (kafka.controller.KafkaController)
[2020-06-03 15:45:26,069] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.019230769230769232 (kafka.controller.KafkaController)
[2020-06-03 15:50:26,070] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-03 15:50:26,070] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-03 15:50:26,071] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map(my-replicated-topic-0 -> Vector(0, 2, 1)) (kafka.controller.KafkaController)
[2020-06-03 15:50:26,071] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.019230769230769232 (kafka.controller.KafkaController)
[2020-06-03 15:55:26,072] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-03 15:55:26,072] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-03 15:55:26,073] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map(my-replicated-topic-0 -> Vector(0, 2, 1)) (kafka.controller.KafkaController)
[2020-06-03 15:55:26,073] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.019230769230769232 (kafka.controller.KafkaController)
[2020-06-03 16:00:26,076] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-03 16:00:26,079] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-03 16:00:26,080] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map(my-replicated-topic-0 -> Vector(0, 2, 1)) (kafka.controller.KafkaController)
[2020-06-03 16:00:26,080] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.019230769230769232 (kafka.controller.KafkaController)
[2020-06-03 16:05:26,081] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-03 16:05:26,081] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-03 16:05:26,083] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map(my-replicated-topic-0 -> Vector(0, 2, 1)) (kafka.controller.KafkaController)
[2020-06-03 16:05:26,083] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.019230769230769232 (kafka.controller.KafkaController)
[2020-06-03 16:10:26,084] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-03 16:10:26,084] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-03 16:10:26,085] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map(my-replicated-topic-0 -> Vector(0, 2, 1)) (kafka.controller.KafkaController)
[2020-06-03 16:10:26,085] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.019230769230769232 (kafka.controller.KafkaController)
[2020-06-03 16:15:26,086] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-03 16:15:26,086] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-03 16:15:26,087] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map(my-replicated-topic-0 -> Vector(0, 2, 1)) (kafka.controller.KafkaController)
[2020-06-03 16:15:26,087] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.019230769230769232 (kafka.controller.KafkaController)
[2020-06-03 16:20:26,089] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-03 16:20:26,089] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-03 16:20:26,090] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map(my-replicated-topic-0 -> Vector(0, 2, 1)) (kafka.controller.KafkaController)
[2020-06-03 16:20:26,090] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.019230769230769232 (kafka.controller.KafkaController)
[2020-06-03 16:25:26,091] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-03 16:25:26,092] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-03 16:25:26,093] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map(my-replicated-topic-0 -> Vector(0, 2, 1)) (kafka.controller.KafkaController)
[2020-06-03 16:25:26,093] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.019230769230769232 (kafka.controller.KafkaController)
[2020-06-03 16:30:26,095] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-03 16:30:26,095] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-03 16:30:26,097] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map(my-replicated-topic-0 -> Vector(0, 2, 1)) (kafka.controller.KafkaController)
[2020-06-03 16:30:26,097] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.019230769230769232 (kafka.controller.KafkaController)
[2020-06-03 16:35:26,097] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-03 16:35:26,098] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-03 16:35:26,099] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map(my-replicated-topic-0 -> Vector(0, 2, 1)) (kafka.controller.KafkaController)
[2020-06-03 16:35:26,100] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.019230769230769232 (kafka.controller.KafkaController)
[2020-06-03 16:40:26,101] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-03 16:40:26,102] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-03 16:40:26,103] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map(my-replicated-topic-0 -> Vector(0, 2, 1)) (kafka.controller.KafkaController)
[2020-06-03 16:40:26,103] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.019230769230769232 (kafka.controller.KafkaController)
[2020-06-03 16:45:26,104] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-03 16:45:26,105] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-03 16:45:26,106] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map(my-replicated-topic-0 -> Vector(0, 2, 1)) (kafka.controller.KafkaController)
[2020-06-03 16:45:26,106] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.019230769230769232 (kafka.controller.KafkaController)
[2020-06-03 16:50:26,109] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-03 16:50:26,109] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-03 16:50:26,109] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map(my-replicated-topic-0 -> Vector(0, 2, 1)) (kafka.controller.KafkaController)
[2020-06-03 16:50:26,110] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.019230769230769232 (kafka.controller.KafkaController)
[2020-06-03 16:55:26,111] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-03 16:55:26,112] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-03 16:55:26,113] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map(my-replicated-topic-0 -> Vector(0, 2, 1)) (kafka.controller.KafkaController)
[2020-06-03 16:55:26,113] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.019230769230769232 (kafka.controller.KafkaController)
[2020-06-03 17:00:26,114] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-03 17:00:26,117] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-03 17:00:26,118] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map(my-replicated-topic-0 -> Vector(0, 2, 1)) (kafka.controller.KafkaController)
[2020-06-03 17:00:26,118] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.019230769230769232 (kafka.controller.KafkaController)
[2020-06-03 17:05:26,120] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-03 17:05:26,120] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-03 17:05:26,121] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map(my-replicated-topic-0 -> Vector(0, 2, 1)) (kafka.controller.KafkaController)
[2020-06-03 17:05:26,122] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.019230769230769232 (kafka.controller.KafkaController)
[2020-06-03 17:10:26,122] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-03 17:10:26,123] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-03 17:10:26,124] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map(my-replicated-topic-0 -> Vector(0, 2, 1)) (kafka.controller.KafkaController)
[2020-06-03 17:10:26,124] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.019230769230769232 (kafka.controller.KafkaController)
[2020-06-03 17:15:26,125] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-03 17:15:26,125] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-03 17:15:26,170] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map(my-replicated-topic-0 -> Vector(0, 2, 1)) (kafka.controller.KafkaController)
[2020-06-03 17:15:26,172] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.019230769230769232 (kafka.controller.KafkaController)
[2020-06-03 17:20:26,174] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-03 17:20:26,174] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-03 17:20:26,176] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map(my-replicated-topic-0 -> Vector(0, 2, 1)) (kafka.controller.KafkaController)
[2020-06-03 17:20:26,176] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.019230769230769232 (kafka.controller.KafkaController)
[2020-06-03 17:25:26,178] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-03 17:25:26,178] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-03 17:25:26,178] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map(my-replicated-topic-0 -> Vector(0, 2, 1)) (kafka.controller.KafkaController)
[2020-06-03 17:25:26,178] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.019230769230769232 (kafka.controller.KafkaController)
[2020-06-03 17:30:26,180] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-03 17:30:26,180] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-03 17:30:26,181] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map(my-replicated-topic-0 -> Vector(0, 2, 1)) (kafka.controller.KafkaController)
[2020-06-03 17:30:26,182] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.019230769230769232 (kafka.controller.KafkaController)
[2020-06-03 17:35:26,183] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-03 17:35:26,183] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-03 17:35:26,185] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map(my-replicated-topic-0 -> Vector(0, 2, 1)) (kafka.controller.KafkaController)
[2020-06-03 17:35:26,185] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.019230769230769232 (kafka.controller.KafkaController)
[2020-06-03 23:38:36,614] DEBUG [Controller id=0] Broker 1 was elected as controller instead of broker 0 (kafka.controller.KafkaController)
org.apache.kafka.common.errors.ControllerMovedException: Controller moved to another broker. Aborting controller startup procedure
[2020-06-03 23:38:36,596] INFO [Controller id=1] 1 successfully elected as the controller. Epoch incremented to 8 and epoch zk version is now 8 (kafka.controller.KafkaController)
[2020-06-03 23:38:36,627] INFO [Controller id=1] Registering handlers (kafka.controller.KafkaController)
[2020-06-03 23:38:36,639] INFO [Controller id=1] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-06-03 23:38:36,646] INFO [Controller id=1] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-06-03 23:38:36,650] INFO [Controller id=1] Initializing controller context (kafka.controller.KafkaController)
[2020-06-03 23:38:36,665] INFO [Controller id=1] Initialized broker epochs cache: Map(0 -> 805, 1 -> 606) (kafka.controller.KafkaController)
[2020-06-03 23:38:36,706] DEBUG [Controller id=1] Register BrokerModifications handler for Set(0, 1) (kafka.controller.KafkaController)
[2020-06-03 23:38:36,786] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2020-06-03 23:38:36,799] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2020-06-03 23:38:36,806] INFO [Controller id=1] Currently active brokers in the cluster: Set(0, 1) (kafka.controller.KafkaController)
[2020-06-03 23:38:36,807] INFO [Controller id=1] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2020-06-03 23:38:36,807] INFO [Controller id=1] Current list of topics in the cluster: Set(test, my-replicated-topic, __consumer_offsets) (kafka.controller.KafkaController)
[2020-06-03 23:38:36,808] INFO [Controller id=1] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-06-03 23:38:36,819] INFO [Controller id=1] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-06-03 23:38:36,820] INFO [Controller id=1] List of topics ineligible for deletion: my-replicated-topic (kafka.controller.KafkaController)
[2020-06-03 23:38:36,821] INFO [Controller id=1] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-06-03 23:38:36,822] INFO [Topic Deletion Manager 1] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set(my-replicated-topic) (kafka.controller.TopicDeletionManager)
[2020-06-03 23:38:36,823] INFO [Controller id=1] Sending update metadata request (kafka.controller.KafkaController)
[2020-06-03 23:38:36,831] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2020-06-03 23:38:36,831] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2020-06-03 23:38:36,847] INFO [RequestSendThread controllerId=1] Controller 1 connected to BOKIE-SURFACE:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-06-03 23:38:36,847] INFO [RequestSendThread controllerId=1] Controller 1 connected to BOKIE-SURFACE:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-06-03 23:38:36,849] INFO [ReplicaStateMachine controllerId=1] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-06-03 23:38:36,869] INFO [ReplicaStateMachine controllerId=1] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-06-03 23:38:36,958] INFO [ReplicaStateMachine controllerId=1] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-06-03 23:38:36,947] DEBUG [Controller id=2] Resigning (kafka.controller.KafkaController)
[2020-06-03 23:38:37,016] DEBUG [Controller id=2] Unregister BrokerModifications handler for Set(2, 1, 0) (kafka.controller.KafkaController)
[2020-06-03 23:38:37,020] INFO [PartitionStateMachine controllerId=2] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-06-03 23:38:37,022] INFO [ReplicaStateMachine controllerId=2] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-06-03 23:38:37,022] INFO [RequestSendThread controllerId=2] Shutting down (kafka.controller.RequestSendThread)
[2020-06-03 23:38:37,023] INFO [RequestSendThread controllerId=2] Stopped (kafka.controller.RequestSendThread)
[2020-06-03 23:38:37,024] INFO [RequestSendThread controllerId=2] Shutdown completed (kafka.controller.RequestSendThread)
[2020-06-03 23:38:37,030] INFO [RequestSendThread controllerId=2] Shutting down (kafka.controller.RequestSendThread)
[2020-06-03 23:38:37,030] INFO [RequestSendThread controllerId=2] Stopped (kafka.controller.RequestSendThread)
[2020-06-03 23:38:37,030] INFO [RequestSendThread controllerId=2] Shutdown completed (kafka.controller.RequestSendThread)
[2020-06-03 23:38:37,035] INFO [RequestSendThread controllerId=2] Shutting down (kafka.controller.RequestSendThread)
[2020-06-03 23:38:37,037] INFO [RequestSendThread controllerId=2] Stopped (kafka.controller.RequestSendThread)
[2020-06-03 23:38:37,040] INFO [RequestSendThread controllerId=2] Shutdown completed (kafka.controller.RequestSendThread)
[2020-06-03 23:38:37,044] INFO [Controller id=2] Resigned (kafka.controller.KafkaController)
[2020-06-03 23:38:37,058] DEBUG [Controller id=2] Broker 1 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-06-03 23:38:37,079] DEBUG [ReplicaStateMachine controllerId=1] Started replica state machine with initial state -> Map([Topic=__consumer_offsets,Partition=21,Replica=0] -> OnlineReplica, [Topic=my-replicated-topic,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=42,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=46,Replica=0] -> OnlineReplica, [Topic=my-replicated-topic,Partition=0,Replica=2] -> OfflineReplica, [Topic=my-replicated-topic,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=39,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=7,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=13,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=49,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=48,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=15,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=38,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=2,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=28,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=23,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=32,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=10,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=18,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=33,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=5,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=17,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=8,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=19,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=37,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=43,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=6,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=9,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=30,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=3,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=25,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=47,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=36,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=11,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=34,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=27,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=12,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=44,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=1,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=45,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=24,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=22,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=31,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=14,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=40,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=4,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=20,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=41,Replica=0] -> OnlineReplica, [Topic=test,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=26,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=29,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=16,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=35,Replica=0] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2020-06-03 23:38:37,080] INFO [PartitionStateMachine controllerId=1] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-06-03 23:38:37,086] INFO [PartitionStateMachine controllerId=1] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-06-03 23:38:37,131] DEBUG [PartitionStateMachine controllerId=1] Started partition state machine with initial state -> Map(__consumer_offsets-49 -> OnlinePartition, __consumer_offsets-38 -> OnlinePartition, __consumer_offsets-16 -> OnlinePartition, __consumer_offsets-27 -> OnlinePartition, __consumer_offsets-8 -> OnlinePartition, __consumer_offsets-19 -> OnlinePartition, __consumer_offsets-13 -> OnlinePartition, __consumer_offsets-2 -> OnlinePartition, __consumer_offsets-46 -> OnlinePartition, __consumer_offsets-35 -> OnlinePartition, __consumer_offsets-24 -> OnlinePartition, __consumer_offsets-5 -> OnlinePartition, __consumer_offsets-43 -> OnlinePartition, __consumer_offsets-32 -> OnlinePartition, __consumer_offsets-21 -> OnlinePartition, __consumer_offsets-10 -> OnlinePartition, __consumer_offsets-37 -> OnlinePartition, my-replicated-topic-0 -> OnlinePartition, __consumer_offsets-48 -> OnlinePartition, __consumer_offsets-40 -> OnlinePartition, __consumer_offsets-18 -> OnlinePartition, __consumer_offsets-29 -> OnlinePartition, __consumer_offsets-7 -> OnlinePartition, __consumer_offsets-23 -> OnlinePartition, __consumer_offsets-45 -> OnlinePartition, __consumer_offsets-34 -> OnlinePartition, __consumer_offsets-26 -> OnlinePartition, __consumer_offsets-4 -> OnlinePartition, __consumer_offsets-15 -> OnlinePartition, __consumer_offsets-42 -> OnlinePartition, __consumer_offsets-31 -> OnlinePartition, __consumer_offsets-9 -> OnlinePartition, __consumer_offsets-20 -> OnlinePartition, test-0 -> OnlinePartition, __consumer_offsets-12 -> OnlinePartition, __consumer_offsets-1 -> OnlinePartition, __consumer_offsets-28 -> OnlinePartition, __consumer_offsets-17 -> OnlinePartition, __consumer_offsets-6 -> OnlinePartition, __consumer_offsets-39 -> OnlinePartition, __consumer_offsets-44 -> OnlinePartition, __consumer_offsets-36 -> OnlinePartition, __consumer_offsets-47 -> OnlinePartition, __consumer_offsets-3 -> OnlinePartition, __consumer_offsets-25 -> OnlinePartition, __consumer_offsets-14 -> OnlinePartition, __consumer_offsets-30 -> OnlinePartition, __consumer_offsets-41 -> OnlinePartition, __consumer_offsets-33 -> OnlinePartition, __consumer_offsets-22 -> OnlinePartition, __consumer_offsets-11 -> OnlinePartition, __consumer_offsets-0 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2020-06-03 23:38:37,131] INFO [Controller id=1] Ready to serve as the new controller with epoch 8 (kafka.controller.KafkaController)
[2020-06-03 23:38:37,149] INFO [Controller id=1] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-06-03 23:38:37,152] INFO [Controller id=1] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-06-03 23:38:37,155] INFO [Controller id=1] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-06-03 23:38:37,156] INFO [Controller id=1] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-06-03 23:38:37,159] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-06-03 23:38:37,171] INFO [Controller id=1] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-06-03 23:38:37,319] INFO [Controller id=1] Newly added brokers: 2, deleted brokers: , bounced brokers: , all live brokers: 0,1,2 (kafka.controller.KafkaController)
[2020-06-03 23:38:37,320] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2020-06-03 23:38:37,328] INFO [Controller id=1] New broker startup callback for 2 (kafka.controller.KafkaController)
[2020-06-03 23:38:37,373] DEBUG [Controller id=1] Register BrokerModifications handler for Vector(2) (kafka.controller.KafkaController)
[2020-06-03 23:38:37,376] INFO [Controller id=1] Updated broker epochs cache: Map(0 -> 805, 1 -> 606, 2 -> 865) (kafka.controller.KafkaController)
[2020-06-03 23:38:37,417] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2020-06-03 23:38:37,418] INFO [RequestSendThread controllerId=1] Controller 1 connected to BOKIE-SURFACE:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-06-03 23:38:39,620] DEBUG [Controller id=1] Sending MetadataRequest to Brokers: Vector(0, 1, 2) for TopicPartitions: ArrayBuffer(my-replicated-topic-0) (kafka.controller.KafkaController)
[2020-06-04 08:34:56,441] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 08:34:56,824] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 08:34:56,840] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 08:34:56,842] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 08:34:58,398] DEBUG [Controller id=2] Resigning (kafka.controller.KafkaController)
[2020-06-04 08:34:58,521] DEBUG [Controller id=2] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2020-06-04 08:34:58,521] INFO [PartitionStateMachine controllerId=2] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-06-04 08:34:58,522] INFO [ReplicaStateMachine controllerId=2] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-06-04 08:34:58,523] INFO [Controller id=2] Resigned (kafka.controller.KafkaController)
[2020-06-04 08:34:58,318] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2020-06-04 08:34:58,612] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2020-06-04 08:34:58,621] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-06-04 08:34:58,623] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-06-04 08:34:58,631] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2020-06-04 08:34:58,649] INFO [Controller id=2] 2 successfully elected as the controller. Epoch incremented to 9 and epoch zk version is now 9 (kafka.controller.KafkaController)
[2020-06-04 08:34:58,649] INFO [Controller id=2] Registering handlers (kafka.controller.KafkaController)
[2020-06-04 08:34:58,654] INFO [Controller id=2] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-06-04 08:34:58,654] DEBUG [Controller id=0] Broker 2 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-06-04 08:34:58,655] INFO [Controller id=2] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-06-04 08:34:58,657] INFO [Controller id=2] Initializing controller context (kafka.controller.KafkaController)
[2020-06-04 08:34:58,668] INFO [Controller id=2] Initialized broker epochs cache: Map(0 -> 878, 2 -> 876) (kafka.controller.KafkaController)
[2020-06-04 08:34:58,670] DEBUG [Controller id=1] Resigning (kafka.controller.KafkaController)
[2020-06-04 08:34:58,672] DEBUG [Controller id=1] Unregister BrokerModifications handler for Set(2, 1, 0) (kafka.controller.KafkaController)
[2020-06-04 08:34:58,678] DEBUG [Controller id=2] Register BrokerModifications handler for Set(0, 2) (kafka.controller.KafkaController)
[2020-06-04 08:34:58,705] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2020-06-04 08:34:58,711] INFO [PartitionStateMachine controllerId=1] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-06-04 08:34:58,717] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2020-06-04 08:34:58,728] INFO [ReplicaStateMachine controllerId=1] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-06-04 08:34:58,728] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2020-06-04 08:34:58,731] INFO [Controller id=2] Currently active brokers in the cluster: Set(0, 2) (kafka.controller.KafkaController)
[2020-06-04 08:34:58,731] INFO [Controller id=2] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2020-06-04 08:34:58,731] INFO [Controller id=2] Current list of topics in the cluster: Set(test, my-replicated-topic, __consumer_offsets) (kafka.controller.KafkaController)
[2020-06-04 08:34:58,731] INFO [Controller id=2] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-06-04 08:34:58,734] INFO [Controller id=2] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-06-04 08:34:58,734] INFO [Controller id=2] List of topics ineligible for deletion: my-replicated-topic (kafka.controller.KafkaController)
[2020-06-04 08:34:58,734] INFO [Controller id=2] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-06-04 08:34:58,734] INFO [Topic Deletion Manager 2] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set(my-replicated-topic) (kafka.controller.TopicDeletionManager)
[2020-06-04 08:34:58,735] INFO [Controller id=2] Sending update metadata request (kafka.controller.KafkaController)
[2020-06-04 08:34:59,065] INFO [ReplicaStateMachine controllerId=2] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-06-04 08:34:59,067] INFO [ReplicaStateMachine controllerId=2] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-06-04 08:34:58,728] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2020-06-04 08:34:59,183] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2020-06-04 08:34:59,188] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2020-06-04 08:34:59,188] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2020-06-04 08:34:59,189] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2020-06-04 08:34:59,202] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2020-06-04 08:34:59,203] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2020-06-04 08:34:59,204] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2020-06-04 08:34:59,219] INFO [Controller id=1] Resigned (kafka.controller.KafkaController)
[2020-06-04 08:34:59,233] INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread)
[2020-06-04 08:34:59,234] INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread)
[2020-06-04 08:34:59,237] INFO [RequestSendThread controllerId=2] Controller 2 connected to BOKIE-SURFACE:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-06-04 08:34:59,237] INFO [RequestSendThread controllerId=2] Controller 2 connected to BOKIE-SURFACE:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-06-04 08:34:59,241] DEBUG [Controller id=1] Broker 2 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-06-04 08:34:59,635] INFO [ReplicaStateMachine controllerId=2] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-06-04 08:34:59,651] DEBUG [ReplicaStateMachine controllerId=2] Started replica state machine with initial state -> Map([Topic=__consumer_offsets,Partition=21,Replica=0] -> OnlineReplica, [Topic=my-replicated-topic,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=42,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=46,Replica=0] -> OnlineReplica, [Topic=my-replicated-topic,Partition=0,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=39,Replica=0] -> OnlineReplica, [Topic=my-replicated-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=7,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=13,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=48,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=49,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=15,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=2,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=38,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=28,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=23,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=32,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=10,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=18,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=33,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=5,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=17,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=8,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=19,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=37,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=43,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=6,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=9,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=3,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=30,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=25,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=47,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=36,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=11,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=34,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=12,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=27,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=44,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=1,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=45,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=24,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=22,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=31,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=14,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=40,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=20,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=4,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=41,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=26,Replica=0] -> OnlineReplica, [Topic=test,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=29,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=16,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=35,Replica=0] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2020-06-04 08:34:59,651] INFO [PartitionStateMachine controllerId=2] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-06-04 08:34:59,652] INFO [PartitionStateMachine controllerId=2] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-06-04 08:34:59,652] DEBUG [PartitionStateMachine controllerId=2] Started partition state machine with initial state -> Map(__consumer_offsets-49 -> OnlinePartition, __consumer_offsets-38 -> OnlinePartition, __consumer_offsets-16 -> OnlinePartition, __consumer_offsets-27 -> OnlinePartition, __consumer_offsets-19 -> OnlinePartition, __consumer_offsets-8 -> OnlinePartition, __consumer_offsets-2 -> OnlinePartition, __consumer_offsets-13 -> OnlinePartition, __consumer_offsets-24 -> OnlinePartition, __consumer_offsets-35 -> OnlinePartition, __consumer_offsets-46 -> OnlinePartition, __consumer_offsets-5 -> OnlinePartition, __consumer_offsets-43 -> OnlinePartition, __consumer_offsets-32 -> OnlinePartition, __consumer_offsets-21 -> OnlinePartition, __consumer_offsets-10 -> OnlinePartition, __consumer_offsets-37 -> OnlinePartition, my-replicated-topic-0 -> OnlinePartition, __consumer_offsets-48 -> OnlinePartition, __consumer_offsets-40 -> OnlinePartition, __consumer_offsets-29 -> OnlinePartition, __consumer_offsets-18 -> OnlinePartition, __consumer_offsets-7 -> OnlinePartition, __consumer_offsets-34 -> OnlinePartition, __consumer_offsets-45 -> OnlinePartition, __consumer_offsets-23 -> OnlinePartition, __consumer_offsets-26 -> OnlinePartition, __consumer_offsets-15 -> OnlinePartition, __consumer_offsets-4 -> OnlinePartition, __consumer_offsets-42 -> OnlinePartition, __consumer_offsets-20 -> OnlinePartition, __consumer_offsets-31 -> OnlinePartition, __consumer_offsets-9 -> OnlinePartition, test-0 -> OnlinePartition, __consumer_offsets-1 -> OnlinePartition, __consumer_offsets-12 -> OnlinePartition, __consumer_offsets-17 -> OnlinePartition, __consumer_offsets-28 -> OnlinePartition, __consumer_offsets-6 -> OnlinePartition, __consumer_offsets-39 -> OnlinePartition, __consumer_offsets-44 -> OnlinePartition, __consumer_offsets-36 -> OnlinePartition, __consumer_offsets-47 -> OnlinePartition, __consumer_offsets-14 -> OnlinePartition, __consumer_offsets-3 -> OnlinePartition, __consumer_offsets-25 -> OnlinePartition, __consumer_offsets-41 -> OnlinePartition, __consumer_offsets-30 -> OnlinePartition, __consumer_offsets-11 -> OnlinePartition, __consumer_offsets-33 -> OnlinePartition, __consumer_offsets-22 -> OnlinePartition, __consumer_offsets-0 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2020-06-04 08:34:59,653] INFO [Controller id=2] Ready to serve as the new controller with epoch 9 (kafka.controller.KafkaController)
[2020-06-04 08:34:59,656] INFO [Controller id=2] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-06-04 08:34:59,656] INFO [Controller id=2] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-06-04 08:34:59,656] INFO [Controller id=2] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-06-04 08:34:59,656] INFO [Controller id=2] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-06-04 08:34:59,656] INFO [Controller id=2] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-06-04 08:34:59,665] INFO [Controller id=2] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-06-04 08:34:59,953] INFO [Controller id=2] Newly added brokers: 1, deleted brokers: , bounced brokers: , all live brokers: 0,1,2 (kafka.controller.KafkaController)
[2020-06-04 08:34:59,953] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2020-06-04 08:34:59,959] INFO [Controller id=2] New broker startup callback for 1 (kafka.controller.KafkaController)
[2020-06-04 08:34:59,971] DEBUG [Controller id=2] Register BrokerModifications handler for Vector(1) (kafka.controller.KafkaController)
[2020-06-04 08:34:59,985] INFO [Controller id=2] Updated broker epochs cache: Map(0 -> 878, 2 -> 876, 1 -> 881) (kafka.controller.KafkaController)
[2020-06-04 08:35:00,703] INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread)
[2020-06-04 08:35:00,706] INFO [RequestSendThread controllerId=2] Controller 2 connected to BOKIE-SURFACE:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-06-04 08:35:01,857] DEBUG [Controller id=2] Sending MetadataRequest to Brokers: Vector(0, 2, 1) for TopicPartitions: ArrayBuffer(my-replicated-topic-0) (kafka.controller.KafkaController)
[2020-06-04 08:35:04,667] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 08:35:04,667] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 08:35:04,668] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 08:35:04,668] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 08:40:04,671] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 08:40:04,671] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 08:40:04,671] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 08:40:04,671] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 08:45:04,673] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 08:45:04,674] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 08:45:04,675] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 08:45:04,675] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 08:50:04,676] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 08:50:04,676] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 08:50:04,677] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 08:50:04,677] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 08:55:04,681] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 08:55:04,681] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 08:55:04,683] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 08:55:04,683] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 09:00:04,684] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 09:00:04,687] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 09:00:04,689] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 09:00:04,689] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 09:05:04,691] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 09:05:04,691] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 09:05:04,693] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 09:05:04,693] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 09:10:04,696] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 09:10:04,698] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 09:10:04,700] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 09:10:04,700] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 09:15:04,702] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 09:15:04,703] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 09:15:04,704] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 09:15:04,704] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 09:20:04,705] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 09:20:04,705] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 09:20:04,707] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 09:20:04,707] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 09:25:04,708] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 09:25:04,708] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 09:25:04,711] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 09:25:04,712] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 09:30:04,714] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 09:30:04,714] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 09:30:04,715] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 09:30:04,715] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 09:35:04,718] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 09:35:04,718] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 09:35:04,723] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 09:35:04,723] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 09:40:04,725] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 09:40:04,725] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 09:40:04,726] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 09:40:04,727] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 09:45:04,727] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 09:45:04,727] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 09:45:04,727] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 09:45:04,727] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 09:50:04,730] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 09:50:04,730] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 09:50:04,730] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 09:50:04,730] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 09:55:04,732] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 09:55:04,732] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 09:55:04,732] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 09:55:04,733] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 10:00:04,733] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 10:00:04,736] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 10:00:04,737] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 10:00:04,737] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 10:05:04,738] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 10:05:04,738] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 10:05:04,739] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 10:05:04,739] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 10:10:04,740] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 10:10:04,740] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 10:10:04,741] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 10:10:04,741] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 10:15:04,743] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 10:15:04,743] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 10:15:04,743] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 10:15:04,743] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 10:20:04,745] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 10:20:04,745] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 10:20:04,745] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 10:20:04,745] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 10:25:04,746] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 10:25:04,746] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 10:25:04,747] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 10:25:04,747] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 10:43:19,144] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2020-06-04 10:43:19,157] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2020-06-04 10:43:19,158] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-06-04 10:43:19,158] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-06-04 10:43:19,158] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2020-06-04 10:43:19,496] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 10 and epoch zk version is now 10 (kafka.controller.KafkaController)
[2020-06-04 10:43:19,497] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2020-06-04 10:43:19,507] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-06-04 10:43:19,514] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-06-04 10:43:19,522] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2020-06-04 10:43:19,529] INFO [Controller id=0] Initialized broker epochs cache: Map(0 -> 891) (kafka.controller.KafkaController)
[2020-06-04 10:43:19,652] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2020-06-04 10:43:19,682] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2020-06-04 10:43:19,682] DEBUG [Controller id=2] Resigning (kafka.controller.KafkaController)
[2020-06-04 10:43:19,683] DEBUG [Controller id=2] Unregister BrokerModifications handler for Set(2, 1, 0) (kafka.controller.KafkaController)
[2020-06-04 10:43:19,684] INFO [PartitionStateMachine controllerId=2] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-06-04 10:43:19,684] INFO [ReplicaStateMachine controllerId=2] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-06-04 10:43:19,685] INFO [RequestSendThread controllerId=2] Shutting down (kafka.controller.RequestSendThread)
[2020-06-04 10:43:19,685] INFO [RequestSendThread controllerId=2] Stopped (kafka.controller.RequestSendThread)
[2020-06-04 10:43:19,686] INFO [RequestSendThread controllerId=2] Shutdown completed (kafka.controller.RequestSendThread)
[2020-06-04 10:43:19,691] INFO [RequestSendThread controllerId=2] Shutting down (kafka.controller.RequestSendThread)
[2020-06-04 10:43:19,691] INFO [RequestSendThread controllerId=2] Stopped (kafka.controller.RequestSendThread)
[2020-06-04 10:43:19,691] INFO [RequestSendThread controllerId=2] Shutdown completed (kafka.controller.RequestSendThread)
[2020-06-04 10:43:19,699] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2020-06-04 10:43:19,700] INFO [Controller id=0] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2020-06-04 10:43:19,700] INFO [Controller id=0] Current list of topics in the cluster: Set(test, my-replicated-topic, __consumer_offsets) (kafka.controller.KafkaController)
[2020-06-04 10:43:19,701] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-06-04 10:43:19,711] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-06-04 10:43:19,711] INFO [Controller id=0] List of topics ineligible for deletion: my-replicated-topic (kafka.controller.KafkaController)
[2020-06-04 10:43:19,712] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-06-04 10:43:19,713] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set(my-replicated-topic) (kafka.controller.TopicDeletionManager)
[2020-06-04 10:43:19,714] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2020-06-04 10:43:19,700] DEBUG [Controller id=1] Resigning (kafka.controller.KafkaController)
[2020-06-04 10:43:19,845] DEBUG [Controller id=1] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2020-06-04 10:43:19,846] INFO [PartitionStateMachine controllerId=1] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-06-04 10:43:19,846] INFO [ReplicaStateMachine controllerId=1] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-06-04 10:43:19,924] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-06-04 10:43:19,938] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-06-04 10:43:19,942] INFO [RequestSendThread controllerId=0] Controller 0 connected to BOKIE-SURFACE:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-06-04 10:43:19,956] INFO [RequestSendThread controllerId=2] Shutting down (kafka.controller.RequestSendThread)
[2020-06-04 10:43:19,958] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-06-04 10:43:19,959] INFO [RequestSendThread controllerId=2] Stopped (kafka.controller.RequestSendThread)
[2020-06-04 10:43:19,960] INFO [RequestSendThread controllerId=2] Shutdown completed (kafka.controller.RequestSendThread)
[2020-06-04 10:43:19,964] INFO [Controller id=2] Resigned (kafka.controller.KafkaController)
[2020-06-04 10:43:19,980] DEBUG [Controller id=2] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-06-04 10:43:20,001] INFO [Controller id=1] Resigned (kafka.controller.KafkaController)
[2020-06-04 10:43:20,019] DEBUG [Controller id=1] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-06-04 10:43:20,153] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-06-04 10:43:20,310] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> Map([Topic=__consumer_offsets,Partition=21,Replica=0] -> OnlineReplica, [Topic=my-replicated-topic,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=42,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=46,Replica=0] -> OnlineReplica, [Topic=my-replicated-topic,Partition=0,Replica=2] -> OfflineReplica, [Topic=my-replicated-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=39,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=7,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=13,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=49,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=48,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=15,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=38,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=2,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=28,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=23,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=32,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=10,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=18,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=33,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=5,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=17,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=8,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=19,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=37,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=43,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=6,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=9,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=30,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=3,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=25,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=47,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=36,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=11,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=34,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=27,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=12,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=44,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=1,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=45,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=24,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=22,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=31,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=14,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=40,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=4,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=20,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=41,Replica=0] -> OnlineReplica, [Topic=test,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=26,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=29,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=16,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=35,Replica=0] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2020-06-04 10:43:20,310] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-06-04 10:43:20,317] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-06-04 10:43:20,322] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> Map(__consumer_offsets-49 -> OnlinePartition, __consumer_offsets-38 -> OnlinePartition, __consumer_offsets-16 -> OnlinePartition, __consumer_offsets-27 -> OnlinePartition, __consumer_offsets-8 -> OnlinePartition, __consumer_offsets-19 -> OnlinePartition, __consumer_offsets-13 -> OnlinePartition, __consumer_offsets-2 -> OnlinePartition, __consumer_offsets-46 -> OnlinePartition, __consumer_offsets-35 -> OnlinePartition, __consumer_offsets-24 -> OnlinePartition, __consumer_offsets-5 -> OnlinePartition, __consumer_offsets-43 -> OnlinePartition, __consumer_offsets-32 -> OnlinePartition, __consumer_offsets-21 -> OnlinePartition, __consumer_offsets-10 -> OnlinePartition, __consumer_offsets-37 -> OnlinePartition, my-replicated-topic-0 -> OnlinePartition, __consumer_offsets-48 -> OnlinePartition, __consumer_offsets-40 -> OnlinePartition, __consumer_offsets-18 -> OnlinePartition, __consumer_offsets-29 -> OnlinePartition, __consumer_offsets-7 -> OnlinePartition, __consumer_offsets-23 -> OnlinePartition, __consumer_offsets-45 -> OnlinePartition, __consumer_offsets-34 -> OnlinePartition, __consumer_offsets-26 -> OnlinePartition, __consumer_offsets-4 -> OnlinePartition, __consumer_offsets-15 -> OnlinePartition, __consumer_offsets-42 -> OnlinePartition, __consumer_offsets-31 -> OnlinePartition, __consumer_offsets-9 -> OnlinePartition, __consumer_offsets-20 -> OnlinePartition, test-0 -> OnlinePartition, __consumer_offsets-12 -> OnlinePartition, __consumer_offsets-1 -> OnlinePartition, __consumer_offsets-28 -> OnlinePartition, __consumer_offsets-17 -> OnlinePartition, __consumer_offsets-6 -> OnlinePartition, __consumer_offsets-39 -> OnlinePartition, __consumer_offsets-44 -> OnlinePartition, __consumer_offsets-36 -> OnlinePartition, __consumer_offsets-47 -> OnlinePartition, __consumer_offsets-3 -> OnlinePartition, __consumer_offsets-25 -> OnlinePartition, __consumer_offsets-14 -> OnlinePartition, __consumer_offsets-30 -> OnlinePartition, __consumer_offsets-41 -> OnlinePartition, __consumer_offsets-33 -> OnlinePartition, __consumer_offsets-22 -> OnlinePartition, __consumer_offsets-11 -> OnlinePartition, __consumer_offsets-0 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2020-06-04 10:43:20,323] INFO [Controller id=0] Ready to serve as the new controller with epoch 10 (kafka.controller.KafkaController)
[2020-06-04 10:43:20,328] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-06-04 10:43:20,329] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-06-04 10:43:20,329] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-06-04 10:43:20,330] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-06-04 10:43:20,398] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-06-04 10:43:20,423] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-06-04 10:43:20,441] INFO [Controller id=0] Newly added brokers: 1,2, deleted brokers: , bounced brokers: , all live brokers: 0,1,2 (kafka.controller.KafkaController)
[2020-06-04 10:43:20,442] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2020-06-04 10:43:20,448] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2020-06-04 10:43:20,477] INFO [Controller id=0] New broker startup callback for 1,2 (kafka.controller.KafkaController)
[2020-06-04 10:43:20,608] DEBUG [Controller id=0] Register BrokerModifications handler for Vector(1, 2) (kafka.controller.KafkaController)
[2020-06-04 10:43:20,612] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-06-04 10:43:20,626] INFO [RequestSendThread controllerId=0] Controller 0 connected to BOKIE-SURFACE:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-06-04 10:43:20,611] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-06-04 10:43:20,630] INFO [RequestSendThread controllerId=0] Controller 0 connected to BOKIE-SURFACE:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-06-04 10:43:20,643] INFO [Controller id=0] Updated broker epochs cache: Map(0 -> 891, 1 -> 896, 2 -> 895) (kafka.controller.KafkaController)
[2020-06-04 10:43:21,848] DEBUG [Controller id=0] Sending MetadataRequest to Brokers: Vector(0, 1, 2) for TopicPartitions: ArrayBuffer(my-replicated-topic-0) (kafka.controller.KafkaController)
[2020-06-04 10:43:25,428] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 10:43:25,430] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 10:43:25,479] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 10:43:25,482] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 10:48:25,484] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 10:48:25,485] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 10:48:25,489] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 10:48:25,490] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 10:55:00,506] INFO [Controller id=0] Newly added brokers: , deleted brokers: 2, bounced brokers: , all live brokers: 0,1 (kafka.controller.KafkaController)
[2020-06-04 10:55:00,506] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2020-06-04 10:55:00,507] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2020-06-04 10:55:00,507] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2020-06-04 10:55:00,518] INFO [Controller id=0] Broker failure callback for 2 (kafka.controller.KafkaController)
[2020-06-04 10:55:00,536] INFO [RequestSendThread controllerId=0] Controller 0 connected to BOKIE-SURFACE:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-06-04 10:55:00,537] DEBUG [Controller id=0] Unregister BrokerModifications handler for Vector(2) (kafka.controller.KafkaController)
[2020-06-04 10:55:00,537] INFO [Controller id=0] Updated broker epochs cache: Map(0 -> 891, 1 -> 896) (kafka.controller.KafkaController)
[2020-06-04 10:55:00,539] INFO [RequestSendThread controllerId=0] Controller 0 connected to BOKIE-SURFACE:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-06-04 10:55:00,757] DEBUG [Controller id=2] Resigning (kafka.controller.KafkaController)
[2020-06-04 10:55:00,757] DEBUG [Controller id=2] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2020-06-04 10:55:00,757] INFO [PartitionStateMachine controllerId=2] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-06-04 10:55:00,757] INFO [ReplicaStateMachine controllerId=2] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-06-04 10:55:00,757] INFO [Controller id=2] Resigned (kafka.controller.KafkaController)
[2020-06-04 10:55:01,655] INFO [Controller id=0] Newly added brokers: 2, deleted brokers: , bounced brokers: , all live brokers: 0,1,2 (kafka.controller.KafkaController)
[2020-06-04 10:55:01,655] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2020-06-04 10:55:01,660] INFO [Controller id=0] New broker startup callback for 2 (kafka.controller.KafkaController)
[2020-06-04 10:55:01,668] DEBUG [Controller id=0] Register BrokerModifications handler for Vector(2) (kafka.controller.KafkaController)
[2020-06-04 10:55:01,673] DEBUG [Controller id=2] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-06-04 10:55:01,676] INFO [Controller id=0] Updated broker epochs cache: Map(0 -> 891, 1 -> 896, 2 -> 907) (kafka.controller.KafkaController)
[2020-06-04 10:55:01,892] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-06-04 10:55:01,893] INFO [RequestSendThread controllerId=0] Controller 0 connected to BOKIE-SURFACE:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-06-04 10:55:04,367] DEBUG [Controller id=0] Sending MetadataRequest to Brokers: Vector(0, 1, 2) for TopicPartitions: ArrayBuffer(my-replicated-topic-0) (kafka.controller.KafkaController)
[2020-06-04 10:57:51,461] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 10:57:51,461] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 10:57:51,467] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 10:57:51,467] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 11:02:51,468] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 11:02:51,472] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 11:02:51,476] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 11:02:51,476] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 11:08:16,685] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2020-06-04 11:08:16,685] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(2, 1, 0) (kafka.controller.KafkaController)
[2020-06-04 11:08:16,686] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-06-04 11:08:16,686] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-06-04 11:08:16,687] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2020-06-04 11:08:16,687] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2020-06-04 11:08:16,688] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2020-06-04 11:08:16,690] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2020-06-04 11:08:16,691] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2020-06-04 11:08:16,691] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2020-06-04 11:08:16,742] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2020-06-04 11:08:16,745] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2020-06-04 11:08:16,745] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2020-06-04 11:08:16,750] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2020-06-04 11:08:16,770] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 11 and epoch zk version is now 11 (kafka.controller.KafkaController)
[2020-06-04 11:08:16,770] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2020-06-04 11:08:16,773] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-06-04 11:08:16,774] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-06-04 11:08:16,775] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2020-06-04 11:08:16,779] INFO [Controller id=0] Initialized broker epochs cache: Map(0 -> 915) (kafka.controller.KafkaController)
[2020-06-04 11:08:16,787] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2020-06-04 11:08:16,839] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2020-06-04 11:08:16,847] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2020-06-04 11:08:16,847] INFO [Controller id=0] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2020-06-04 11:08:16,847] INFO [Controller id=0] Current list of topics in the cluster: Set(test, my-replicated-topic, __consumer_offsets) (kafka.controller.KafkaController)
[2020-06-04 11:08:16,847] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-06-04 11:08:16,853] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-06-04 11:08:16,853] INFO [Controller id=0] List of topics ineligible for deletion: my-replicated-topic (kafka.controller.KafkaController)
[2020-06-04 11:08:16,854] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-06-04 11:08:16,854] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set(my-replicated-topic) (kafka.controller.TopicDeletionManager)
[2020-06-04 11:08:16,855] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2020-06-04 11:08:16,856] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-06-04 11:08:16,859] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-06-04 11:08:16,892] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-06-04 11:08:16,893] INFO [RequestSendThread controllerId=0] Controller 0 connected to BOKIE-SURFACE:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-06-04 11:08:16,923] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-06-04 11:08:16,922] DEBUG [Controller id=2] Resigning (kafka.controller.KafkaController)
[2020-06-04 11:08:16,928] DEBUG [Controller id=2] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2020-06-04 11:08:16,928] INFO [PartitionStateMachine controllerId=2] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-06-04 11:08:16,928] INFO [ReplicaStateMachine controllerId=2] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-06-04 11:08:16,928] INFO [Controller id=2] Resigned (kafka.controller.KafkaController)
[2020-06-04 11:08:16,959] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> Map([Topic=__consumer_offsets,Partition=21,Replica=0] -> OnlineReplica, [Topic=my-replicated-topic,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=42,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=46,Replica=0] -> OnlineReplica, [Topic=my-replicated-topic,Partition=0,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=39,Replica=0] -> OnlineReplica, [Topic=my-replicated-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=7,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=13,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=48,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=49,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=15,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=2,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=38,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=28,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=23,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=32,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=10,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=18,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=33,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=5,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=17,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=8,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=19,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=37,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=43,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=6,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=9,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=3,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=30,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=25,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=47,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=36,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=11,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=34,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=12,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=27,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=44,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=1,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=45,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=24,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=22,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=31,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=14,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=40,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=20,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=4,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=41,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=26,Replica=0] -> OnlineReplica, [Topic=test,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=29,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=16,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=35,Replica=0] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2020-06-04 11:08:16,960] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-06-04 11:08:16,962] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-06-04 11:08:16,963] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> Map(__consumer_offsets-49 -> OnlinePartition, __consumer_offsets-38 -> OnlinePartition, __consumer_offsets-16 -> OnlinePartition, __consumer_offsets-27 -> OnlinePartition, __consumer_offsets-19 -> OnlinePartition, __consumer_offsets-8 -> OnlinePartition, __consumer_offsets-2 -> OnlinePartition, __consumer_offsets-13 -> OnlinePartition, __consumer_offsets-24 -> OnlinePartition, __consumer_offsets-35 -> OnlinePartition, __consumer_offsets-46 -> OnlinePartition, __consumer_offsets-5 -> OnlinePartition, __consumer_offsets-43 -> OnlinePartition, __consumer_offsets-32 -> OnlinePartition, __consumer_offsets-21 -> OnlinePartition, __consumer_offsets-10 -> OnlinePartition, __consumer_offsets-37 -> OnlinePartition, my-replicated-topic-0 -> OnlinePartition, __consumer_offsets-48 -> OnlinePartition, __consumer_offsets-40 -> OnlinePartition, __consumer_offsets-29 -> OnlinePartition, __consumer_offsets-18 -> OnlinePartition, __consumer_offsets-7 -> OnlinePartition, __consumer_offsets-34 -> OnlinePartition, __consumer_offsets-45 -> OnlinePartition, __consumer_offsets-23 -> OnlinePartition, __consumer_offsets-26 -> OnlinePartition, __consumer_offsets-15 -> OnlinePartition, __consumer_offsets-4 -> OnlinePartition, __consumer_offsets-42 -> OnlinePartition, __consumer_offsets-20 -> OnlinePartition, __consumer_offsets-31 -> OnlinePartition, __consumer_offsets-9 -> OnlinePartition, test-0 -> OnlinePartition, __consumer_offsets-1 -> OnlinePartition, __consumer_offsets-12 -> OnlinePartition, __consumer_offsets-17 -> OnlinePartition, __consumer_offsets-28 -> OnlinePartition, __consumer_offsets-6 -> OnlinePartition, __consumer_offsets-39 -> OnlinePartition, __consumer_offsets-44 -> OnlinePartition, __consumer_offsets-36 -> OnlinePartition, __consumer_offsets-47 -> OnlinePartition, __consumer_offsets-14 -> OnlinePartition, __consumer_offsets-3 -> OnlinePartition, __consumer_offsets-25 -> OnlinePartition, __consumer_offsets-41 -> OnlinePartition, __consumer_offsets-30 -> OnlinePartition, __consumer_offsets-11 -> OnlinePartition, __consumer_offsets-33 -> OnlinePartition, __consumer_offsets-22 -> OnlinePartition, __consumer_offsets-0 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2020-06-04 11:08:16,963] INFO [Controller id=0] Ready to serve as the new controller with epoch 11 (kafka.controller.KafkaController)
[2020-06-04 11:08:16,964] DEBUG [Controller id=2] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-06-04 11:08:16,970] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-06-04 11:08:16,970] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-06-04 11:08:16,970] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-06-04 11:08:16,970] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-06-04 11:08:16,970] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-06-04 11:08:16,973] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-06-04 11:08:16,986] INFO [Controller id=0] Newly added brokers: 2, deleted brokers: , bounced brokers: , all live brokers: 0,2 (kafka.controller.KafkaController)
[2020-06-04 11:08:16,986] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2020-06-04 11:08:16,992] INFO [Controller id=0] New broker startup callback for 2 (kafka.controller.KafkaController)
[2020-06-04 11:08:17,003] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-06-04 11:08:17,012] INFO [RequestSendThread controllerId=0] Controller 0 connected to BOKIE-SURFACE:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-06-04 11:08:17,019] DEBUG [Controller id=0] Register BrokerModifications handler for Vector(2) (kafka.controller.KafkaController)
[2020-06-04 11:08:17,023] INFO [Controller id=0] Updated broker epochs cache: Map(0 -> 915, 2 -> 919) (kafka.controller.KafkaController)
[2020-06-04 11:08:17,293] DEBUG [Controller id=1] Resigning (kafka.controller.KafkaController)
[2020-06-04 11:08:17,298] DEBUG [Controller id=1] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2020-06-04 11:08:17,298] INFO [PartitionStateMachine controllerId=1] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-06-04 11:08:17,298] INFO [ReplicaStateMachine controllerId=1] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-06-04 11:08:17,298] INFO [Controller id=1] Resigned (kafka.controller.KafkaController)
[2020-06-04 11:08:17,317] INFO [Controller id=0] Newly added brokers: 1, deleted brokers: , bounced brokers: , all live brokers: 0,1,2 (kafka.controller.KafkaController)
[2020-06-04 11:08:17,317] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2020-06-04 11:08:17,322] INFO [Controller id=0] New broker startup callback for 1 (kafka.controller.KafkaController)
[2020-06-04 11:08:17,333] DEBUG [Controller id=0] Register BrokerModifications handler for Vector(1) (kafka.controller.KafkaController)
[2020-06-04 11:08:17,337] DEBUG [Controller id=1] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-06-04 11:08:17,343] INFO [Controller id=0] Updated broker epochs cache: Map(0 -> 915, 2 -> 919, 1 -> 924) (kafka.controller.KafkaController)
[2020-06-04 11:08:17,566] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-06-04 11:08:17,569] INFO [RequestSendThread controllerId=0] Controller 0 connected to BOKIE-SURFACE:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-06-04 11:08:19,345] DEBUG [Controller id=0] Sending MetadataRequest to Brokers: Vector(0, 2, 1) for TopicPartitions: ArrayBuffer(my-replicated-topic-0) (kafka.controller.KafkaController)
[2020-06-04 11:08:21,975] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 11:08:21,976] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 11:08:21,980] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 11:08:21,980] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 11:13:21,980] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 11:13:21,980] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 11:13:21,981] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 11:13:21,981] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 11:18:21,982] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 11:18:21,982] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 11:18:21,984] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 11:18:21,984] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 11:23:21,985] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 11:23:21,985] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 11:23:21,987] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 11:23:21,987] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 11:28:21,990] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 11:28:21,991] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 11:28:21,993] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 11:28:21,994] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 11:33:21,994] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 11:33:21,995] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 11:33:21,998] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 11:33:21,998] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 11:38:22,000] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 11:38:22,001] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 11:38:22,004] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 11:38:22,004] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 11:43:22,007] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 11:43:22,007] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 11:43:22,009] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 11:43:22,010] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 11:48:22,011] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 11:48:22,011] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 11:48:22,011] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 11:48:22,012] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 11:53:22,013] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 11:53:22,013] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 11:53:22,015] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 11:53:22,015] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 11:58:22,017] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 11:58:22,017] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 11:58:22,019] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 11:58:22,020] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 12:03:22,022] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 12:03:22,025] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 12:03:22,025] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 12:03:22,025] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 12:08:22,027] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 12:08:22,028] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 12:08:22,029] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 12:08:22,030] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 12:13:22,037] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 12:13:22,038] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 12:13:22,043] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 12:13:22,043] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 12:18:22,044] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 12:18:22,044] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 12:18:22,046] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 12:18:22,046] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 12:23:22,050] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 12:23:22,050] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 12:23:22,056] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 12:23:22,057] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 12:28:22,058] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 12:28:22,058] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 12:28:22,059] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 12:28:22,059] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 13:00:26,031] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 13:00:26,035] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 13:00:26,036] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 13:00:26,036] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 13:05:26,037] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 13:05:26,037] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 13:05:26,037] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 13:05:26,037] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 13:10:26,039] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 13:10:26,039] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 13:10:26,039] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 13:10:26,039] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 13:15:26,041] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 13:15:26,041] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 13:15:26,041] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 13:15:26,041] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 13:20:26,043] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 13:20:26,043] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 13:20:26,043] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 13:20:26,043] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 13:25:26,043] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 13:25:26,043] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 13:25:26,044] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 13:25:26,044] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 13:30:26,054] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 13:30:26,054] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 13:30:26,055] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 13:30:26,056] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 13:35:26,057] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 13:35:26,057] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 13:35:26,058] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 13:35:26,058] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 13:40:26,059] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 13:40:26,059] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 13:40:26,059] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 13:40:26,059] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 13:45:26,060] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 13:45:26,060] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 13:45:26,061] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 13:45:26,061] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 13:50:26,062] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 13:50:26,062] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 13:50:26,063] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 13:50:26,063] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 13:55:26,063] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 13:55:26,063] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 13:55:26,063] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 13:55:26,063] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 14:00:26,095] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 14:00:26,110] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 14:00:26,111] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 14:00:26,111] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 14:05:26,114] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 14:05:26,114] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 14:05:26,115] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 14:05:26,116] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 14:10:26,117] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 14:10:26,118] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 14:10:26,119] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 14:10:26,119] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 14:15:26,127] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 14:15:26,127] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 14:15:26,128] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 14:15:26,128] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 14:20:26,128] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 14:20:26,128] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 14:20:26,128] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 14:20:26,128] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 14:25:26,131] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 14:25:26,132] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 14:25:26,132] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 14:25:26,132] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 14:30:26,134] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 14:30:26,134] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 14:30:26,134] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 14:30:26,134] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 14:35:26,136] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 14:35:26,137] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 14:35:26,138] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 14:35:26,138] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 14:40:26,138] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 14:40:26,138] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 14:40:26,139] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 14:40:26,139] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 14:45:26,141] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 14:45:26,141] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 14:45:26,141] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 14:45:26,142] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 14:50:26,144] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 14:50:26,144] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 14:50:26,145] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 14:50:26,145] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 14:55:26,147] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 14:55:26,147] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 14:55:26,148] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 14:55:26,148] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 15:00:26,161] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 15:00:26,178] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 15:00:26,180] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 15:00:26,180] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 15:05:26,183] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 15:05:26,183] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 15:05:26,184] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 15:05:26,184] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 15:10:26,185] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 15:10:26,185] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 15:10:26,186] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 15:10:26,186] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 15:15:26,187] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 15:15:26,187] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 15:15:26,189] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 15:15:26,189] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 15:20:26,214] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 15:20:26,215] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 15:20:26,217] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 15:20:26,218] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 15:25:26,220] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 15:25:26,221] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 15:25:26,223] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 15:25:26,223] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 15:30:26,225] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 15:30:26,225] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 15:30:26,225] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 15:30:26,225] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 15:35:26,253] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 15:35:26,253] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 15:35:26,255] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 15:35:26,255] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 15:40:26,256] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 15:40:26,256] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 15:40:26,260] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 15:40:26,261] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 15:45:26,263] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 15:45:26,263] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 15:45:26,263] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 15:45:26,264] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 15:50:26,266] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 15:50:26,266] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 15:50:26,267] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 15:50:26,267] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 15:55:26,267] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 15:55:26,267] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 15:55:26,268] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 15:55:26,268] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 16:00:26,270] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 16:00:26,276] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 16:00:26,277] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 16:00:26,278] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 16:05:26,309] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 16:05:26,309] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 16:05:26,311] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 16:05:26,311] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 16:10:26,313] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 16:10:26,313] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 16:10:26,315] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 16:10:26,315] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 16:15:26,316] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 16:15:26,317] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 16:15:26,319] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 16:15:26,319] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 16:20:26,320] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 16:20:26,320] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 16:20:26,322] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 16:20:26,322] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 16:25:26,323] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 16:25:26,324] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 16:25:26,326] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 16:25:26,326] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 16:30:26,328] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 16:30:26,328] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 16:30:26,328] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 16:30:26,328] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 16:35:26,330] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 16:35:26,330] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 16:35:26,330] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 16:35:26,330] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 16:40:26,331] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 16:40:26,331] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 16:40:26,332] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 16:40:26,332] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 16:45:26,332] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 16:45:26,332] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 16:45:26,332] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 16:45:26,332] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 16:50:26,334] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 16:50:26,334] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 16:50:26,335] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 16:50:26,335] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 16:55:26,337] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 16:55:26,337] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 16:55:26,338] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 16:55:26,338] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 17:00:26,341] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 17:00:26,347] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 17:00:26,348] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 17:00:26,348] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 17:05:26,351] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 17:05:26,351] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 17:05:26,352] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 17:05:26,352] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 18:09:25,697] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2020-06-04 18:09:25,702] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(2, 1, 0) (kafka.controller.KafkaController)
[2020-06-04 18:09:25,707] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-06-04 18:09:25,708] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-06-04 18:09:25,709] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2020-06-04 18:09:25,709] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2020-06-04 18:09:25,711] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2020-06-04 18:09:25,732] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2020-06-04 18:09:25,732] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2020-06-04 18:09:25,733] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2020-06-04 18:09:25,860] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2020-06-04 18:09:25,862] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2020-06-04 18:09:25,862] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2020-06-04 18:09:25,867] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2020-06-04 18:09:25,924] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 12 and epoch zk version is now 12 (kafka.controller.KafkaController)
[2020-06-04 18:09:25,925] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2020-06-04 18:09:25,928] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-06-04 18:09:25,929] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-06-04 18:09:25,931] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2020-06-04 18:09:25,960] INFO [Controller id=0] Initialized broker epochs cache: Map(0 -> 932) (kafka.controller.KafkaController)
[2020-06-04 18:09:25,967] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2020-06-04 18:09:25,972] DEBUG [Controller id=1] Resigning (kafka.controller.KafkaController)
[2020-06-04 18:09:25,986] DEBUG [Controller id=1] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2020-06-04 18:09:25,986] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2020-06-04 18:09:25,986] INFO [PartitionStateMachine controllerId=1] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-06-04 18:09:25,986] INFO [ReplicaStateMachine controllerId=1] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-06-04 18:09:25,988] INFO [Controller id=1] Resigned (kafka.controller.KafkaController)
[2020-06-04 18:09:26,009] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2020-06-04 18:09:26,009] INFO [Controller id=0] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2020-06-04 18:09:26,009] INFO [Controller id=0] Current list of topics in the cluster: Set(test, my-replicated-topic, __consumer_offsets) (kafka.controller.KafkaController)
[2020-06-04 18:09:26,012] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-06-04 18:09:26,015] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-06-04 18:09:26,025] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-06-04 18:09:26,025] INFO [Controller id=0] List of topics ineligible for deletion: my-replicated-topic (kafka.controller.KafkaController)
[2020-06-04 18:09:26,025] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-06-04 18:09:26,025] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set(my-replicated-topic) (kafka.controller.TopicDeletionManager)
[2020-06-04 18:09:26,025] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2020-06-04 18:09:26,032] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-06-04 18:09:26,032] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-06-04 18:09:26,035] INFO [RequestSendThread controllerId=0] Controller 0 connected to BOKIE-SURFACE:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-06-04 18:09:26,040] DEBUG [Controller id=1] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-06-04 18:09:26,054] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-06-04 18:09:26,076] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> Map([Topic=__consumer_offsets,Partition=21,Replica=0] -> OnlineReplica, [Topic=my-replicated-topic,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=42,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=46,Replica=0] -> OnlineReplica, [Topic=my-replicated-topic,Partition=0,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=39,Replica=0] -> OnlineReplica, [Topic=my-replicated-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=7,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=13,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=48,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=49,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=15,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=2,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=38,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=28,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=23,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=32,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=10,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=18,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=33,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=5,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=17,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=8,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=19,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=37,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=43,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=6,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=9,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=3,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=30,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=25,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=47,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=36,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=11,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=34,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=12,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=27,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=44,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=1,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=45,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=24,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=22,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=31,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=14,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=40,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=20,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=4,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=41,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=26,Replica=0] -> OnlineReplica, [Topic=test,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=29,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=16,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=35,Replica=0] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2020-06-04 18:09:26,076] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-06-04 18:09:26,076] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-06-04 18:09:26,077] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> Map(__consumer_offsets-49 -> OnlinePartition, __consumer_offsets-38 -> OnlinePartition, __consumer_offsets-16 -> OnlinePartition, __consumer_offsets-27 -> OnlinePartition, __consumer_offsets-19 -> OnlinePartition, __consumer_offsets-8 -> OnlinePartition, __consumer_offsets-2 -> OnlinePartition, __consumer_offsets-13 -> OnlinePartition, __consumer_offsets-24 -> OnlinePartition, __consumer_offsets-35 -> OnlinePartition, __consumer_offsets-46 -> OnlinePartition, __consumer_offsets-5 -> OnlinePartition, __consumer_offsets-43 -> OnlinePartition, __consumer_offsets-32 -> OnlinePartition, __consumer_offsets-21 -> OnlinePartition, __consumer_offsets-10 -> OnlinePartition, __consumer_offsets-37 -> OnlinePartition, my-replicated-topic-0 -> OnlinePartition, __consumer_offsets-48 -> OnlinePartition, __consumer_offsets-40 -> OnlinePartition, __consumer_offsets-29 -> OnlinePartition, __consumer_offsets-18 -> OnlinePartition, __consumer_offsets-7 -> OnlinePartition, __consumer_offsets-34 -> OnlinePartition, __consumer_offsets-45 -> OnlinePartition, __consumer_offsets-23 -> OnlinePartition, __consumer_offsets-26 -> OnlinePartition, __consumer_offsets-15 -> OnlinePartition, __consumer_offsets-4 -> OnlinePartition, __consumer_offsets-42 -> OnlinePartition, __consumer_offsets-20 -> OnlinePartition, __consumer_offsets-31 -> OnlinePartition, __consumer_offsets-9 -> OnlinePartition, test-0 -> OnlinePartition, __consumer_offsets-1 -> OnlinePartition, __consumer_offsets-12 -> OnlinePartition, __consumer_offsets-17 -> OnlinePartition, __consumer_offsets-28 -> OnlinePartition, __consumer_offsets-6 -> OnlinePartition, __consumer_offsets-39 -> OnlinePartition, __consumer_offsets-44 -> OnlinePartition, __consumer_offsets-36 -> OnlinePartition, __consumer_offsets-47 -> OnlinePartition, __consumer_offsets-14 -> OnlinePartition, __consumer_offsets-3 -> OnlinePartition, __consumer_offsets-25 -> OnlinePartition, __consumer_offsets-41 -> OnlinePartition, __consumer_offsets-30 -> OnlinePartition, __consumer_offsets-11 -> OnlinePartition, __consumer_offsets-33 -> OnlinePartition, __consumer_offsets-22 -> OnlinePartition, __consumer_offsets-0 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2020-06-04 18:09:26,077] INFO [Controller id=0] Ready to serve as the new controller with epoch 12 (kafka.controller.KafkaController)
[2020-06-04 18:09:26,078] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-06-04 18:09:26,078] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-06-04 18:09:26,078] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-06-04 18:09:26,078] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-06-04 18:09:26,078] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-06-04 18:09:26,083] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-06-04 18:09:26,095] INFO [Controller id=0] Newly added brokers: 1, deleted brokers: , bounced brokers: , all live brokers: 0,1 (kafka.controller.KafkaController)
[2020-06-04 18:09:26,095] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2020-06-04 18:09:26,106] INFO [Controller id=0] New broker startup callback for 1 (kafka.controller.KafkaController)
[2020-06-04 18:09:26,112] DEBUG [Controller id=0] Register BrokerModifications handler for Vector(1) (kafka.controller.KafkaController)
[2020-06-04 18:09:26,113] INFO [Controller id=0] Updated broker epochs cache: Map(0 -> 932, 1 -> 935) (kafka.controller.KafkaController)
[2020-06-04 18:09:26,121] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-06-04 18:09:26,123] INFO [RequestSendThread controllerId=0] Controller 0 connected to BOKIE-SURFACE:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-06-04 18:09:26,486] DEBUG [Controller id=2] Resigning (kafka.controller.KafkaController)
[2020-06-04 18:09:26,575] DEBUG [Controller id=2] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2020-06-04 18:09:26,575] INFO [PartitionStateMachine controllerId=2] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-06-04 18:09:26,578] INFO [ReplicaStateMachine controllerId=2] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-06-04 18:09:26,582] INFO [Controller id=2] Resigned (kafka.controller.KafkaController)
[2020-06-04 18:09:26,603] INFO [Controller id=0] Newly added brokers: 2, deleted brokers: , bounced brokers: , all live brokers: 0,1,2 (kafka.controller.KafkaController)
[2020-06-04 18:09:26,603] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2020-06-04 18:09:26,607] INFO [Controller id=0] New broker startup callback for 2 (kafka.controller.KafkaController)
[2020-06-04 18:09:26,611] DEBUG [Controller id=0] Register BrokerModifications handler for Vector(2) (kafka.controller.KafkaController)
[2020-06-04 18:09:26,611] DEBUG [Controller id=2] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-06-04 18:09:26,613] INFO [Controller id=0] Updated broker epochs cache: Map(0 -> 932, 1 -> 935, 2 -> 941) (kafka.controller.KafkaController)
[2020-06-04 18:09:26,659] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-06-04 18:09:26,662] INFO [RequestSendThread controllerId=0] Controller 0 connected to BOKIE-SURFACE:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-06-04 18:09:26,846] DEBUG [Controller id=0] Sending MetadataRequest to Brokers: Vector(0, 1, 2) for TopicPartitions: ArrayBuffer(my-replicated-topic-0) (kafka.controller.KafkaController)
[2020-06-04 18:09:31,085] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 18:09:31,085] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 18:09:31,085] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 18:09:31,085] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 20:55:45,039] DEBUG [Controller id=2] Resigning (kafka.controller.KafkaController)
[2020-06-04 20:55:45,044] DEBUG [Controller id=2] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2020-06-04 20:55:45,044] INFO [PartitionStateMachine controllerId=2] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-06-04 20:55:45,044] INFO [ReplicaStateMachine controllerId=2] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-06-04 20:55:45,044] INFO [Controller id=2] Resigned (kafka.controller.KafkaController)
[2020-06-04 20:55:45,275] INFO [Controller id=2] 2 successfully elected as the controller. Epoch incremented to 13 and epoch zk version is now 13 (kafka.controller.KafkaController)
[2020-06-04 20:55:45,275] INFO [Controller id=2] Registering handlers (kafka.controller.KafkaController)
[2020-06-04 20:55:45,280] INFO [Controller id=2] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-06-04 20:55:45,282] INFO [Controller id=2] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-06-04 20:55:45,285] INFO [Controller id=2] Initializing controller context (kafka.controller.KafkaController)
[2020-06-04 20:55:45,294] INFO [Controller id=2] Initialized broker epochs cache: Map(2 -> 949) (kafka.controller.KafkaController)
[2020-06-04 20:55:45,311] DEBUG [Controller id=2] Register BrokerModifications handler for Set(2) (kafka.controller.KafkaController)
[2020-06-04 20:55:45,398] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2020-06-04 20:55:45,421] INFO [Controller id=2] Currently active brokers in the cluster: Set(2) (kafka.controller.KafkaController)
[2020-06-04 20:55:45,421] INFO [Controller id=2] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2020-06-04 20:55:45,421] INFO [Controller id=2] Current list of topics in the cluster: Set(test, my-replicated-topic, __consumer_offsets) (kafka.controller.KafkaController)
[2020-06-04 20:55:45,421] INFO [Controller id=2] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-06-04 20:55:45,424] INFO [Controller id=2] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-06-04 20:55:45,425] INFO [Controller id=2] List of topics ineligible for deletion: test,my-replicated-topic,__consumer_offsets (kafka.controller.KafkaController)
[2020-06-04 20:55:45,425] INFO [Controller id=2] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-06-04 20:55:45,425] INFO [Topic Deletion Manager 2] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set(test, my-replicated-topic, __consumer_offsets) (kafka.controller.TopicDeletionManager)
[2020-06-04 20:55:45,425] INFO [Controller id=2] Sending update metadata request (kafka.controller.KafkaController)
[2020-06-04 20:55:45,683] INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread)
[2020-06-04 20:55:45,686] INFO [ReplicaStateMachine controllerId=2] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-06-04 20:55:45,688] INFO [ReplicaStateMachine controllerId=2] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-06-04 20:55:45,689] INFO [RequestSendThread controllerId=2] Controller 2 connected to BOKIE-SURFACE:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-06-04 20:55:45,703] INFO [ReplicaStateMachine controllerId=2] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-06-04 20:55:45,713] DEBUG [Controller id=1] Resigning (kafka.controller.KafkaController)
[2020-06-04 20:55:45,717] DEBUG [Controller id=1] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2020-06-04 20:55:45,717] INFO [PartitionStateMachine controllerId=1] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-06-04 20:55:45,717] INFO [ReplicaStateMachine controllerId=1] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-06-04 20:55:45,717] INFO [Controller id=1] Resigned (kafka.controller.KafkaController)
[2020-06-04 20:55:45,978] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2020-06-04 20:55:45,980] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(2, 1, 0) (kafka.controller.KafkaController)
[2020-06-04 20:55:45,983] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-06-04 20:55:45,983] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-06-04 20:55:45,983] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2020-06-04 20:55:45,983] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2020-06-04 20:55:45,983] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2020-06-04 20:55:45,994] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2020-06-04 20:55:45,994] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2020-06-04 20:55:45,995] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2020-06-04 20:55:46,076] DEBUG [ReplicaStateMachine controllerId=2] Started replica state machine with initial state -> Map([Topic=__consumer_offsets,Partition=21,Replica=0] -> OfflineReplica, [Topic=my-replicated-topic,Partition=0,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=42,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=46,Replica=0] -> OfflineReplica, [Topic=my-replicated-topic,Partition=0,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=39,Replica=0] -> OfflineReplica, [Topic=my-replicated-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=7,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=13,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=48,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=49,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=15,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=2,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=38,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=28,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=23,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=32,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=10,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=18,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=33,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=5,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=17,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=8,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=19,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=37,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=43,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=6,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=9,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=3,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=30,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=25,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=47,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=36,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=11,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=34,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=12,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=27,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=44,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=1,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=45,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=24,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=0,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=22,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=31,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=14,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=40,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=20,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=4,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=41,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=26,Replica=0] -> OfflineReplica, [Topic=test,Partition=0,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=29,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=16,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=35,Replica=0] -> OfflineReplica) (kafka.controller.ZkReplicaStateMachine)
[2020-06-04 20:55:46,077] INFO [PartitionStateMachine controllerId=2] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-06-04 20:55:46,077] INFO [PartitionStateMachine controllerId=2] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-06-04 20:55:46,428] DEBUG [Controller id=1] Broker 2 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-06-04 20:55:46,566] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2020-06-04 20:55:46,570] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2020-06-04 20:55:46,573] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2020-06-04 20:55:46,586] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2020-06-04 20:55:46,624] DEBUG [PartitionStateMachine controllerId=2] Started partition state machine with initial state -> Map(__consumer_offsets-49 -> OfflinePartition, __consumer_offsets-38 -> OfflinePartition, __consumer_offsets-16 -> OfflinePartition, __consumer_offsets-27 -> OfflinePartition, __consumer_offsets-19 -> OfflinePartition, __consumer_offsets-8 -> OfflinePartition, __consumer_offsets-2 -> OfflinePartition, __consumer_offsets-13 -> OfflinePartition, __consumer_offsets-24 -> OfflinePartition, __consumer_offsets-35 -> OfflinePartition, __consumer_offsets-46 -> OfflinePartition, __consumer_offsets-5 -> OfflinePartition, __consumer_offsets-43 -> OfflinePartition, __consumer_offsets-32 -> OfflinePartition, __consumer_offsets-21 -> OfflinePartition, __consumer_offsets-10 -> OfflinePartition, __consumer_offsets-37 -> OfflinePartition, my-replicated-topic-0 -> OnlinePartition, __consumer_offsets-48 -> OfflinePartition, __consumer_offsets-40 -> OfflinePartition, __consumer_offsets-29 -> OfflinePartition, __consumer_offsets-18 -> OfflinePartition, __consumer_offsets-7 -> OfflinePartition, __consumer_offsets-34 -> OfflinePartition, __consumer_offsets-45 -> OfflinePartition, __consumer_offsets-23 -> OfflinePartition, __consumer_offsets-26 -> OfflinePartition, __consumer_offsets-15 -> OfflinePartition, __consumer_offsets-4 -> OfflinePartition, __consumer_offsets-42 -> OfflinePartition, __consumer_offsets-20 -> OfflinePartition, __consumer_offsets-31 -> OfflinePartition, __consumer_offsets-9 -> OfflinePartition, test-0 -> OfflinePartition, __consumer_offsets-1 -> OfflinePartition, __consumer_offsets-12 -> OfflinePartition, __consumer_offsets-17 -> OfflinePartition, __consumer_offsets-28 -> OfflinePartition, __consumer_offsets-6 -> OfflinePartition, __consumer_offsets-39 -> OfflinePartition, __consumer_offsets-44 -> OfflinePartition, __consumer_offsets-36 -> OfflinePartition, __consumer_offsets-47 -> OfflinePartition, __consumer_offsets-14 -> OfflinePartition, __consumer_offsets-3 -> OfflinePartition, __consumer_offsets-25 -> OfflinePartition, __consumer_offsets-41 -> OfflinePartition, __consumer_offsets-30 -> OfflinePartition, __consumer_offsets-11 -> OfflinePartition, __consumer_offsets-33 -> OfflinePartition, __consumer_offsets-22 -> OfflinePartition, __consumer_offsets-0 -> OfflinePartition) (kafka.controller.ZkPartitionStateMachine)
[2020-06-04 20:55:46,624] INFO [Controller id=2] Ready to serve as the new controller with epoch 13 (kafka.controller.KafkaController)
[2020-06-04 20:55:46,659] INFO [Controller id=2] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-06-04 20:55:46,659] INFO [Controller id=2] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-06-04 20:55:46,659] INFO [Controller id=2] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-06-04 20:55:46,660] INFO [Controller id=2] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-06-04 20:55:46,660] INFO [Controller id=2] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-06-04 20:55:46,668] INFO [Controller id=2] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-06-04 20:55:46,675] DEBUG [Controller id=0] Broker 2 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-06-04 20:55:46,930] INFO [Controller id=2] Newly added brokers: 0,1, deleted brokers: , bounced brokers: , all live brokers: 0,1,2 (kafka.controller.KafkaController)
[2020-06-04 20:55:46,931] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2020-06-04 20:55:46,945] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2020-06-04 20:55:46,957] INFO [Controller id=2] New broker startup callback for 0,1 (kafka.controller.KafkaController)
[2020-06-04 20:55:47,402] DEBUG [Controller id=2] Register BrokerModifications handler for Vector(0, 1) (kafka.controller.KafkaController)
[2020-06-04 20:55:47,405] INFO [Controller id=2] Updated broker epochs cache: Map(2 -> 949, 0 -> 1008, 1 -> 1005) (kafka.controller.KafkaController)
[2020-06-04 20:55:47,555] INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread)
[2020-06-04 20:55:47,559] INFO [RequestSendThread controllerId=2] Controller 2 connected to BOKIE-SURFACE:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-06-04 20:55:47,563] INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread)
[2020-06-04 20:55:47,566] INFO [RequestSendThread controllerId=2] Controller 2 connected to BOKIE-SURFACE:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-06-04 20:55:49,660] DEBUG [Controller id=2] Sending MetadataRequest to Brokers: Vector(2, 0, 1) for TopicPartitions: ArrayBuffer(my-replicated-topic-0) (kafka.controller.KafkaController)
[2020-06-04 20:55:51,711] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 20:55:51,711] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 20:55:51,712] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map(my-replicated-topic-0 -> Vector(0, 2, 1)) (kafka.controller.KafkaController)
[2020-06-04 20:55:51,713] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.019230769230769232 (kafka.controller.KafkaController)
[2020-06-04 21:06:55,452] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2020-06-04 21:06:55,453] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2020-06-04 21:06:55,453] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-06-04 21:06:55,453] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-06-04 21:06:55,453] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2020-06-04 21:06:55,560] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 14 and epoch zk version is now 14 (kafka.controller.KafkaController)
[2020-06-04 21:06:55,560] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2020-06-04 21:06:55,563] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-06-04 21:06:55,564] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-06-04 21:06:55,565] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2020-06-04 21:06:55,567] INFO [Controller id=0] Initialized broker epochs cache: Map(0 -> 1069) (kafka.controller.KafkaController)
[2020-06-04 21:06:55,571] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2020-06-04 21:06:55,586] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2020-06-04 21:06:55,592] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2020-06-04 21:06:55,592] INFO [Controller id=0] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2020-06-04 21:06:55,592] INFO [Controller id=0] Current list of topics in the cluster: Set(test, my-replicated-topic, __consumer_offsets) (kafka.controller.KafkaController)
[2020-06-04 21:06:55,592] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-06-04 21:06:55,593] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-06-04 21:06:55,594] INFO [Controller id=0] List of topics ineligible for deletion: my-replicated-topic (kafka.controller.KafkaController)
[2020-06-04 21:06:55,594] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-06-04 21:06:55,594] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set(my-replicated-topic) (kafka.controller.TopicDeletionManager)
[2020-06-04 21:06:55,594] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2020-06-04 21:06:55,594] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-06-04 21:06:55,595] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-06-04 21:06:55,654] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-06-04 21:06:55,656] INFO [RequestSendThread controllerId=0] Controller 0 connected to BOKIE-SURFACE:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-06-04 21:06:55,716] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-06-04 21:06:55,751] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> Map([Topic=__consumer_offsets,Partition=21,Replica=0] -> OnlineReplica, [Topic=my-replicated-topic,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=42,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=46,Replica=0] -> OnlineReplica, [Topic=my-replicated-topic,Partition=0,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=39,Replica=0] -> OnlineReplica, [Topic=my-replicated-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=7,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=13,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=48,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=49,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=15,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=2,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=38,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=28,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=23,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=32,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=10,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=18,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=33,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=5,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=17,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=8,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=19,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=37,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=43,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=6,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=9,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=3,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=30,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=25,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=47,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=36,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=11,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=34,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=12,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=27,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=44,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=1,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=45,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=24,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=22,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=31,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=14,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=40,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=20,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=4,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=41,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=26,Replica=0] -> OnlineReplica, [Topic=test,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=29,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=16,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=35,Replica=0] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2020-06-04 21:06:55,751] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-06-04 21:06:55,751] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-06-04 21:06:55,918] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> Map(__consumer_offsets-49 -> OnlinePartition, __consumer_offsets-38 -> OnlinePartition, __consumer_offsets-16 -> OnlinePartition, __consumer_offsets-27 -> OnlinePartition, __consumer_offsets-19 -> OnlinePartition, __consumer_offsets-8 -> OnlinePartition, __consumer_offsets-2 -> OnlinePartition, __consumer_offsets-13 -> OnlinePartition, __consumer_offsets-24 -> OnlinePartition, __consumer_offsets-35 -> OnlinePartition, __consumer_offsets-46 -> OnlinePartition, __consumer_offsets-5 -> OnlinePartition, __consumer_offsets-43 -> OnlinePartition, __consumer_offsets-32 -> OnlinePartition, __consumer_offsets-21 -> OnlinePartition, __consumer_offsets-10 -> OnlinePartition, __consumer_offsets-37 -> OnlinePartition, my-replicated-topic-0 -> OnlinePartition, __consumer_offsets-48 -> OnlinePartition, __consumer_offsets-40 -> OnlinePartition, __consumer_offsets-29 -> OnlinePartition, __consumer_offsets-18 -> OnlinePartition, __consumer_offsets-7 -> OnlinePartition, __consumer_offsets-34 -> OnlinePartition, __consumer_offsets-45 -> OnlinePartition, __consumer_offsets-23 -> OnlinePartition, __consumer_offsets-26 -> OnlinePartition, __consumer_offsets-15 -> OnlinePartition, __consumer_offsets-4 -> OnlinePartition, __consumer_offsets-42 -> OnlinePartition, __consumer_offsets-20 -> OnlinePartition, __consumer_offsets-31 -> OnlinePartition, __consumer_offsets-9 -> OnlinePartition, test-0 -> OnlinePartition, __consumer_offsets-1 -> OnlinePartition, __consumer_offsets-12 -> OnlinePartition, __consumer_offsets-17 -> OnlinePartition, __consumer_offsets-28 -> OnlinePartition, __consumer_offsets-6 -> OnlinePartition, __consumer_offsets-39 -> OnlinePartition, __consumer_offsets-44 -> OnlinePartition, __consumer_offsets-36 -> OnlinePartition, __consumer_offsets-47 -> OnlinePartition, __consumer_offsets-14 -> OnlinePartition, __consumer_offsets-3 -> OnlinePartition, __consumer_offsets-25 -> OnlinePartition, __consumer_offsets-41 -> OnlinePartition, __consumer_offsets-30 -> OnlinePartition, __consumer_offsets-11 -> OnlinePartition, __consumer_offsets-33 -> OnlinePartition, __consumer_offsets-22 -> OnlinePartition, __consumer_offsets-0 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2020-06-04 21:06:55,918] INFO [Controller id=0] Ready to serve as the new controller with epoch 14 (kafka.controller.KafkaController)
[2020-06-04 21:06:55,923] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-06-04 21:06:55,923] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-06-04 21:06:55,923] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-06-04 21:06:55,923] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-06-04 21:06:55,923] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-06-04 21:06:55,926] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-06-04 21:06:56,116] DEBUG [Controller id=1] Resigning (kafka.controller.KafkaController)
[2020-06-04 21:06:56,139] DEBUG [Controller id=1] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2020-06-04 21:06:56,139] INFO [PartitionStateMachine controllerId=1] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-06-04 21:06:56,139] INFO [ReplicaStateMachine controllerId=1] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-06-04 21:06:56,139] INFO [Controller id=1] Resigned (kafka.controller.KafkaController)
[2020-06-04 21:06:56,098] DEBUG [Controller id=2] Resigning (kafka.controller.KafkaController)
[2020-06-04 21:06:56,152] DEBUG [Controller id=2] Unregister BrokerModifications handler for Set(2, 1, 0) (kafka.controller.KafkaController)
[2020-06-04 21:06:56,170] INFO [PartitionStateMachine controllerId=2] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-06-04 21:06:56,170] INFO [ReplicaStateMachine controllerId=2] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-06-04 21:06:56,171] INFO [RequestSendThread controllerId=2] Shutting down (kafka.controller.RequestSendThread)
[2020-06-04 21:06:56,171] INFO [RequestSendThread controllerId=2] Stopped (kafka.controller.RequestSendThread)
[2020-06-04 21:06:56,172] INFO [RequestSendThread controllerId=2] Shutdown completed (kafka.controller.RequestSendThread)
[2020-06-04 21:06:56,175] INFO [RequestSendThread controllerId=2] Shutting down (kafka.controller.RequestSendThread)
[2020-06-04 21:06:56,175] INFO [RequestSendThread controllerId=2] Stopped (kafka.controller.RequestSendThread)
[2020-06-04 21:06:56,175] INFO [RequestSendThread controllerId=2] Shutdown completed (kafka.controller.RequestSendThread)
[2020-06-04 21:06:56,203] INFO [RequestSendThread controllerId=2] Shutting down (kafka.controller.RequestSendThread)
[2020-06-04 21:06:56,204] INFO [RequestSendThread controllerId=2] Stopped (kafka.controller.RequestSendThread)
[2020-06-04 21:06:56,204] INFO [RequestSendThread controllerId=2] Shutdown completed (kafka.controller.RequestSendThread)
[2020-06-04 21:06:56,220] INFO [Controller id=2] Resigned (kafka.controller.KafkaController)
[2020-06-04 21:06:56,238] INFO [Controller id=0] Newly added brokers: 2, deleted brokers: , bounced brokers: , all live brokers: 0,2 (kafka.controller.KafkaController)
[2020-06-04 21:06:56,239] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2020-06-04 21:06:56,240] DEBUG [Controller id=2] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-06-04 21:06:56,242] INFO [Controller id=0] New broker startup callback for 2 (kafka.controller.KafkaController)
[2020-06-04 21:06:56,246] DEBUG [Controller id=0] Register BrokerModifications handler for Vector(2) (kafka.controller.KafkaController)
[2020-06-04 21:06:56,246] INFO [Controller id=0] Updated broker epochs cache: Map(0 -> 1069, 2 -> 1076) (kafka.controller.KafkaController)
[2020-06-04 21:06:56,305] INFO [Controller id=0] Newly added brokers: 1, deleted brokers: , bounced brokers: , all live brokers: 0,1,2 (kafka.controller.KafkaController)
[2020-06-04 21:06:56,305] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2020-06-04 21:06:56,306] DEBUG [Controller id=1] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-06-04 21:06:56,309] INFO [Controller id=0] New broker startup callback for 1 (kafka.controller.KafkaController)
[2020-06-04 21:06:56,312] DEBUG [Controller id=0] Register BrokerModifications handler for Vector(1) (kafka.controller.KafkaController)
[2020-06-04 21:06:56,313] INFO [Controller id=0] Updated broker epochs cache: Map(0 -> 1069, 2 -> 1076, 1 -> 1078) (kafka.controller.KafkaController)
[2020-06-04 21:06:56,343] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-06-04 21:06:56,344] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-06-04 21:06:56,345] INFO [RequestSendThread controllerId=0] Controller 0 connected to BOKIE-SURFACE:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-06-04 21:06:56,347] INFO [RequestSendThread controllerId=0] Controller 0 connected to BOKIE-SURFACE:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-06-04 21:06:56,844] DEBUG [Controller id=0] Sending MetadataRequest to Brokers: Vector(0, 2, 1) for TopicPartitions: ArrayBuffer(my-replicated-topic-0) (kafka.controller.KafkaController)
[2020-06-04 21:07:00,932] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 21:07:00,932] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 21:07:00,934] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 21:07:00,934] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 21:09:32,932] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@7a92922, name=log4j:logger=kafka.controller (kafka.controller)
[2020-06-04 21:12:00,936] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 21:12:00,936] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 21:12:00,938] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 21:12:00,938] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 21:14:05,123] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@7a92922, name=log4j:logger=kafka.controller (kafka.controller)
[2020-06-04 21:15:10,438] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@7a92922, name=log4j:logger=kafka.controller (kafka.controller)
[2020-06-04 21:15:10,891] INFO [Controller id=0] Shutting down broker 1 (kafka.controller.KafkaController)
[2020-06-04 21:15:10,892] DEBUG [Controller id=0] All shutting down brokers: 1 (kafka.controller.KafkaController)
[2020-06-04 21:15:10,894] DEBUG [Controller id=0] Live brokers: 0,2 (kafka.controller.KafkaController)
[2020-06-04 21:15:10,907] DEBUG The stop replica request (delete = false) sent to broker 1 is StopReplicaRequestInfo([Topic=my-replicated-topic,Partition=0,Replica=1],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-06-04 21:15:12,176] DEBUG The stop replica request (delete = false) sent to broker 1 is StopReplicaRequestInfo([Topic=my-replicated-topic,Partition=0,Replica=1],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-06-04 21:15:12,178] TRACE [Controller id=0] All leaders = __consumer_offsets-49 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-38 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-16 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-27 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-19 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-8 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-2 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-13 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-24 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-35 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-46 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-5 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-43 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-32 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-21 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-10 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-37 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),my-replicated-topic-0 -> (Leader:0,ISR:0,2,LeaderEpoch:23,ControllerEpoch:14),__consumer_offsets-48 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-40 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-29 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-18 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-7 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-34 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-45 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-23 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-26 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-15 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-4 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-42 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-20 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-31 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-9 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),test-0 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-1 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-12 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-17 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-28 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-6 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-39 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-44 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-36 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-47 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-14 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-3 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-25 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-41 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-30 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-11 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-33 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-22 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-0 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13) (kafka.controller.KafkaController)
[2020-06-04 21:15:13,510] INFO [ControllerEventThread controllerId=1] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-06-04 21:15:13,511] INFO [ControllerEventThread controllerId=1] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-06-04 21:15:13,511] INFO [ControllerEventThread controllerId=1] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-06-04 21:15:13,511] DEBUG [Controller id=1] Resigning (kafka.controller.KafkaController)
[2020-06-04 21:15:13,512] DEBUG [Controller id=1] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2020-06-04 21:15:13,512] INFO [PartitionStateMachine controllerId=1] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-06-04 21:15:13,512] INFO [ReplicaStateMachine controllerId=1] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-06-04 21:15:13,512] INFO [Controller id=1] Resigned (kafka.controller.KafkaController)
[2020-06-04 21:15:13,524] INFO [Controller id=0] Newly added brokers: , deleted brokers: 1, bounced brokers: , all live brokers: 0,2 (kafka.controller.KafkaController)
[2020-06-04 21:15:13,524] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2020-06-04 21:15:13,524] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2020-06-04 21:15:13,526] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2020-06-04 21:15:13,528] INFO [Controller id=0] Broker failure callback for 1 (kafka.controller.KafkaController)
[2020-06-04 21:15:13,529] INFO [Controller id=0] Removed 1 from list of shutting down brokers. (kafka.controller.KafkaController)
[2020-06-04 21:15:13,533] DEBUG [Controller id=0] Unregister BrokerModifications handler for Vector(1) (kafka.controller.KafkaController)
[2020-06-04 21:15:13,533] INFO [Controller id=0] Updated broker epochs cache: Map(0 -> 1069, 2 -> 1076) (kafka.controller.KafkaController)
[2020-06-04 21:15:41,438] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@7a92922, name=log4j:logger=kafka.controller (kafka.controller)
[2020-06-04 21:16:38,561] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@7a92922, name=log4j:logger=kafka.controller (kafka.controller)
[2020-06-04 21:17:00,938] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 21:17:00,938] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 21:17:00,940] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 21:17:00,940] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 21:21:10,302] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@7a92922, name=log4j:logger=kafka.controller (kafka.controller)
[2020-06-04 21:21:58,125] INFO [Controller id=0] Newly added brokers: 1, deleted brokers: , bounced brokers: , all live brokers: 0,1,2 (kafka.controller.KafkaController)
[2020-06-04 21:21:58,125] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2020-06-04 21:21:58,128] INFO [Controller id=0] New broker startup callback for 1 (kafka.controller.KafkaController)
[2020-06-04 21:21:58,137] DEBUG [Controller id=0] Register BrokerModifications handler for Vector(1) (kafka.controller.KafkaController)
[2020-06-04 21:21:58,143] INFO [Controller id=0] Updated broker epochs cache: Map(0 -> 1069, 2 -> 1076, 1 -> 1099) (kafka.controller.KafkaController)
[2020-06-04 21:21:58,144] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-06-04 21:21:58,147] INFO [RequestSendThread controllerId=0] Controller 0 connected to BOKIE-SURFACE:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-06-04 21:21:58,214] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-06-04 21:21:58,238] DEBUG [Controller id=1] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-06-04 21:21:59,358] DEBUG [Controller id=0] Sending MetadataRequest to Brokers: Vector(0, 2, 1) for TopicPartitions: ArrayBuffer(my-replicated-topic-0) (kafka.controller.KafkaController)
[2020-06-04 21:22:00,941] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 21:22:00,941] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 21:22:00,942] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-06-04 21:22:00,942] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 21:23:10,563] INFO [Controller id=0] Shutting down broker 2 (kafka.controller.KafkaController)
[2020-06-04 21:23:10,564] DEBUG [Controller id=0] All shutting down brokers: 2 (kafka.controller.KafkaController)
[2020-06-04 21:23:10,564] DEBUG [Controller id=0] Live brokers: 0,1 (kafka.controller.KafkaController)
[2020-06-04 21:23:10,564] DEBUG The stop replica request (delete = false) sent to broker 2 is StopReplicaRequestInfo([Topic=my-replicated-topic,Partition=0,Replica=2],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-06-04 21:23:10,572] DEBUG The stop replica request (delete = false) sent to broker 2 is StopReplicaRequestInfo([Topic=my-replicated-topic,Partition=0,Replica=2],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-06-04 21:23:10,574] TRACE [Controller id=0] All leaders = __consumer_offsets-49 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-38 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-16 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-27 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-19 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-8 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-2 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-13 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-24 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-35 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-46 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-5 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-43 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-32 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-21 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-10 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-37 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),my-replicated-topic-0 -> (Leader:0,ISR:0,1,LeaderEpoch:24,ControllerEpoch:14),__consumer_offsets-48 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-40 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-29 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-18 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-7 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-34 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-45 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-23 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-26 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-15 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-4 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-42 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-20 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-31 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-9 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),test-0 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-1 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-12 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-17 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-28 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-6 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-39 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-44 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-36 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-47 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-14 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-3 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-25 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-41 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-30 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-11 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-33 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-22 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-0 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13) (kafka.controller.KafkaController)
[2020-06-04 21:23:10,603] WARN [RequestSendThread controllerId=0] Controller 0 epoch 14 fails to send request (type=StopReplicaRequest, controllerId=0, controllerEpoch=14, deletePartitions=false, brokerEpoch=1076, partitions=my-replicated-topic-0) to broker BOKIE-SURFACE:9094 (id: 2 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 2 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:100)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:249)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-04 21:23:12,052] INFO [ControllerEventThread controllerId=2] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-06-04 21:23:12,052] INFO [ControllerEventThread controllerId=2] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-06-04 21:23:12,052] INFO [ControllerEventThread controllerId=2] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-06-04 21:23:12,052] DEBUG [Controller id=2] Resigning (kafka.controller.KafkaController)
[2020-06-04 21:23:12,052] DEBUG [Controller id=2] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2020-06-04 21:23:12,052] INFO [PartitionStateMachine controllerId=2] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-06-04 21:23:12,052] INFO [ReplicaStateMachine controllerId=2] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-06-04 21:23:12,053] INFO [Controller id=2] Resigned (kafka.controller.KafkaController)
[2020-06-04 21:23:12,064] INFO [Controller id=0] Newly added brokers: , deleted brokers: 2, bounced brokers: , all live brokers: 0,1 (kafka.controller.KafkaController)
[2020-06-04 21:23:12,065] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2020-06-04 21:23:12,066] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker BOKIE-SURFACE:9094 (id: 2 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
org.apache.kafka.common.errors.DisconnectException: NetworkClient is no longer active, state is CLOSING
[2020-06-04 21:23:12,066] WARN [RequestSendThread controllerId=0] Controller 0 epoch 14 fails to send request (type=StopReplicaRequest, controllerId=0, controllerEpoch=14, deletePartitions=false, brokerEpoch=1076, partitions=my-replicated-topic-0) to broker BOKIE-SURFACE:9094 (id: 2 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.lang.InterruptedException
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(Unknown Source)
	at java.util.concurrent.CountDownLatch.await(Unknown Source)
	at kafka.utils.ShutdownableThread.pause(ShutdownableThread.scala:82)
	at kafka.controller.RequestSendThread.backoff$1(ControllerChannelManager.scala:230)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:244)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-04 21:23:12,068] TRACE [RequestSendThread controllerId=0] shutdownInitiated latch count reached zero. Shutdown called. (kafka.controller.RequestSendThread)
[2020-06-04 21:23:12,068] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2020-06-04 21:23:12,068] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2020-06-04 21:23:12,069] INFO [Controller id=0] Broker failure callback for 2 (kafka.controller.KafkaController)
[2020-06-04 21:23:12,069] INFO [Controller id=0] Removed 2 from list of shutting down brokers. (kafka.controller.KafkaController)
[2020-06-04 21:23:12,072] DEBUG [Controller id=0] Unregister BrokerModifications handler for Vector(2) (kafka.controller.KafkaController)
[2020-06-04 21:23:12,072] INFO [Controller id=0] Updated broker epochs cache: Map(0 -> 1069, 1 -> 1099) (kafka.controller.KafkaController)
[2020-06-04 21:23:59,963] INFO [Controller id=0] Newly added brokers: 2, deleted brokers: , bounced brokers: , all live brokers: 0,1,2 (kafka.controller.KafkaController)
[2020-06-04 21:23:59,963] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2020-06-04 21:23:59,968] INFO [Controller id=0] New broker startup callback for 2 (kafka.controller.KafkaController)
[2020-06-04 21:23:59,968] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-06-04 21:23:59,978] DEBUG [Controller id=0] Register BrokerModifications handler for Vector(2) (kafka.controller.KafkaController)
[2020-06-04 21:23:59,996] INFO [RequestSendThread controllerId=0] Controller 0 connected to BOKIE-SURFACE:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-06-04 21:23:59,998] INFO [Controller id=0] Updated broker epochs cache: Map(0 -> 1069, 1 -> 1099, 2 -> 1120) (kafka.controller.KafkaController)
[2020-06-04 21:24:00,067] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-06-04 21:24:00,085] DEBUG [Controller id=2] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-06-04 21:24:01,865] DEBUG [Controller id=0] Sending MetadataRequest to Brokers: Vector(0, 1, 2) for TopicPartitions: ArrayBuffer(my-replicated-topic-0) (kafka.controller.KafkaController)
[2020-06-04 21:24:59,988] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2020-06-04 21:24:59,988] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2020-06-04 21:24:59,988] DEBUG [Controller id=0] Live brokers: 1,2 (kafka.controller.KafkaController)
[2020-06-04 21:25:00,003] TRACE [Controller id=0] All leaders = __consumer_offsets-49 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-38 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-16 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-27 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-19 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-8 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-2 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-13 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-24 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-35 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-46 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-5 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-43 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-32 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-21 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-10 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-37 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),my-replicated-topic-0 -> (Leader:2,ISR:1,2,LeaderEpoch:25,ControllerEpoch:14),__consumer_offsets-48 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-40 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-29 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-18 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-7 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-34 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-45 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-23 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-26 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-15 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-4 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-42 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-20 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-31 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-9 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),test-0 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-1 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-12 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-17 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-28 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-6 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-39 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-44 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-36 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-47 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-14 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-3 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-25 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-41 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-30 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-11 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-33 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-22 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13),__consumer_offsets-0 -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:13) (kafka.controller.KafkaController)
[2020-06-04 21:25:00,022] WARN [RequestSendThread controllerId=0] Controller 0 epoch 14 fails to send request (type=LeaderAndIsRequest, controllerId=0, controllerEpoch=14, brokerEpoch=1069, partitionStates=[LeaderAndIsrPartitionState(topicName='my-replicated-topic', partitionIndex=0, controllerEpoch=14, leader=2, leaderEpoch=25, isr=[1, 2], zkVersion=45, replicas=[0, 2, 1], addingReplicas=[], removingReplicas=[], isNew=false)], liveLeaders=(BOKIE-SURFACE:9094 (id: 2 rack: null))) to broker BOKIE-SURFACE:9092 (id: 0 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 0 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:100)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:249)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-04 21:25:01,430] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-06-04 21:25:01,430] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-06-04 21:25:01,430] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-06-04 21:25:01,430] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2020-06-04 21:25:01,430] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(2, 1, 0) (kafka.controller.KafkaController)
[2020-06-04 21:25:01,431] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-06-04 21:25:01,431] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-06-04 21:25:01,431] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2020-06-04 21:25:01,431] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2020-06-04 21:25:01,431] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2020-06-04 21:25:01,433] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2020-06-04 21:25:01,433] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2020-06-04 21:25:01,433] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2020-06-04 21:25:01,436] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2020-06-04 21:25:01,436] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker BOKIE-SURFACE:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
org.apache.kafka.common.errors.DisconnectException: NetworkClient is no longer active, state is CLOSING
[2020-06-04 21:25:01,436] WARN [RequestSendThread controllerId=0] Controller 0 epoch 14 fails to send request (type=LeaderAndIsRequest, controllerId=0, controllerEpoch=14, brokerEpoch=1069, partitionStates=[LeaderAndIsrPartitionState(topicName='my-replicated-topic', partitionIndex=0, controllerEpoch=14, leader=2, leaderEpoch=25, isr=[1, 2], zkVersion=45, replicas=[0, 2, 1], addingReplicas=[], removingReplicas=[], isNew=false)], liveLeaders=(BOKIE-SURFACE:9094 (id: 2 rack: null))) to broker BOKIE-SURFACE:9092 (id: 0 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.lang.InterruptedException
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(Unknown Source)
	at java.util.concurrent.CountDownLatch.await(Unknown Source)
	at kafka.utils.ShutdownableThread.pause(ShutdownableThread.scala:82)
	at kafka.controller.RequestSendThread.backoff$1(ControllerChannelManager.scala:230)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:244)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-04 21:25:01,436] TRACE [RequestSendThread controllerId=0] shutdownInitiated latch count reached zero. Shutdown called. (kafka.controller.RequestSendThread)
[2020-06-04 21:25:01,436] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2020-06-04 21:25:01,436] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2020-06-04 21:25:01,437] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2020-06-04 21:25:01,467] INFO [Controller id=1] 1 successfully elected as the controller. Epoch incremented to 15 and epoch zk version is now 15 (kafka.controller.KafkaController)
[2020-06-04 21:25:01,468] INFO [Controller id=1] Registering handlers (kafka.controller.KafkaController)
[2020-06-04 21:25:01,476] INFO [Controller id=1] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-06-04 21:25:01,478] DEBUG [Controller id=2] Broker 1 was elected as controller instead of broker 2 (kafka.controller.KafkaController)
org.apache.kafka.common.errors.ControllerMovedException: Controller moved to another broker. Aborting controller startup procedure
[2020-06-04 21:25:01,484] INFO [Controller id=1] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-06-04 21:25:01,488] INFO [Controller id=1] Initializing controller context (kafka.controller.KafkaController)
[2020-06-04 21:25:01,498] INFO [Controller id=1] Initialized broker epochs cache: Map(1 -> 1099, 2 -> 1120) (kafka.controller.KafkaController)
[2020-06-04 21:25:01,516] DEBUG [Controller id=1] Register BrokerModifications handler for Set(1, 2) (kafka.controller.KafkaController)
[2020-06-04 21:25:01,620] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2020-06-04 21:25:01,631] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2020-06-04 21:25:01,640] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2020-06-04 21:25:01,640] INFO [Controller id=1] Currently active brokers in the cluster: Set(1, 2) (kafka.controller.KafkaController)
[2020-06-04 21:25:01,640] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2020-06-04 21:25:01,641] INFO [Controller id=1] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2020-06-04 21:25:01,642] INFO [Controller id=1] Current list of topics in the cluster: Set(test, my-replicated-topic, __consumer_offsets) (kafka.controller.KafkaController)
[2020-06-04 21:25:01,644] INFO [Controller id=1] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-06-04 21:25:01,654] INFO [Controller id=1] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-06-04 21:25:01,654] INFO [Controller id=1] List of topics ineligible for deletion: test,my-replicated-topic,__consumer_offsets (kafka.controller.KafkaController)
[2020-06-04 21:25:01,655] INFO [Controller id=1] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-06-04 21:25:01,656] INFO [Topic Deletion Manager 1] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set(test, my-replicated-topic, __consumer_offsets) (kafka.controller.TopicDeletionManager)
[2020-06-04 21:25:01,657] INFO [Controller id=1] Sending update metadata request (kafka.controller.KafkaController)
[2020-06-04 21:25:01,668] INFO [RequestSendThread controllerId=1] Controller 1 connected to BOKIE-SURFACE:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-06-04 21:25:01,670] INFO [RequestSendThread controllerId=1] Controller 1 connected to BOKIE-SURFACE:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-06-04 21:25:01,672] INFO [ReplicaStateMachine controllerId=1] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-06-04 21:25:01,682] INFO [ReplicaStateMachine controllerId=1] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-06-04 21:25:01,711] INFO [ReplicaStateMachine controllerId=1] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-06-04 21:25:01,927] DEBUG [ReplicaStateMachine controllerId=1] Started replica state machine with initial state -> Map([Topic=__consumer_offsets,Partition=21,Replica=0] -> OfflineReplica, [Topic=my-replicated-topic,Partition=0,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=42,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=46,Replica=0] -> OfflineReplica, [Topic=my-replicated-topic,Partition=0,Replica=2] -> OnlineReplica, [Topic=my-replicated-topic,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=39,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=7,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=13,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=49,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=48,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=15,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=38,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=2,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=28,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=23,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=32,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=10,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=18,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=33,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=5,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=17,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=8,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=19,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=37,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=43,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=6,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=9,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=30,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=3,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=25,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=47,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=36,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=11,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=34,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=27,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=12,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=44,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=1,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=45,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=24,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=22,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=0,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=31,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=14,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=40,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=4,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=20,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=41,Replica=0] -> OfflineReplica, [Topic=test,Partition=0,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=26,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=29,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=16,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=35,Replica=0] -> OfflineReplica) (kafka.controller.ZkReplicaStateMachine)
[2020-06-04 21:25:01,928] INFO [PartitionStateMachine controllerId=1] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-06-04 21:25:01,944] INFO [PartitionStateMachine controllerId=1] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-06-04 21:25:02,045] DEBUG [PartitionStateMachine controllerId=1] Started partition state machine with initial state -> Map(__consumer_offsets-49 -> OfflinePartition, __consumer_offsets-38 -> OfflinePartition, __consumer_offsets-16 -> OfflinePartition, __consumer_offsets-27 -> OfflinePartition, __consumer_offsets-8 -> OfflinePartition, __consumer_offsets-19 -> OfflinePartition, __consumer_offsets-13 -> OfflinePartition, __consumer_offsets-2 -> OfflinePartition, __consumer_offsets-46 -> OfflinePartition, __consumer_offsets-35 -> OfflinePartition, __consumer_offsets-24 -> OfflinePartition, __consumer_offsets-5 -> OfflinePartition, __consumer_offsets-43 -> OfflinePartition, __consumer_offsets-32 -> OfflinePartition, __consumer_offsets-21 -> OfflinePartition, __consumer_offsets-10 -> OfflinePartition, __consumer_offsets-37 -> OfflinePartition, my-replicated-topic-0 -> OnlinePartition, __consumer_offsets-48 -> OfflinePartition, __consumer_offsets-40 -> OfflinePartition, __consumer_offsets-18 -> OfflinePartition, __consumer_offsets-29 -> OfflinePartition, __consumer_offsets-7 -> OfflinePartition, __consumer_offsets-23 -> OfflinePartition, __consumer_offsets-45 -> OfflinePartition, __consumer_offsets-34 -> OfflinePartition, __consumer_offsets-26 -> OfflinePartition, __consumer_offsets-4 -> OfflinePartition, __consumer_offsets-15 -> OfflinePartition, __consumer_offsets-42 -> OfflinePartition, __consumer_offsets-31 -> OfflinePartition, __consumer_offsets-9 -> OfflinePartition, __consumer_offsets-20 -> OfflinePartition, test-0 -> OfflinePartition, __consumer_offsets-12 -> OfflinePartition, __consumer_offsets-1 -> OfflinePartition, __consumer_offsets-28 -> OfflinePartition, __consumer_offsets-17 -> OfflinePartition, __consumer_offsets-6 -> OfflinePartition, __consumer_offsets-39 -> OfflinePartition, __consumer_offsets-44 -> OfflinePartition, __consumer_offsets-36 -> OfflinePartition, __consumer_offsets-47 -> OfflinePartition, __consumer_offsets-3 -> OfflinePartition, __consumer_offsets-25 -> OfflinePartition, __consumer_offsets-14 -> OfflinePartition, __consumer_offsets-30 -> OfflinePartition, __consumer_offsets-41 -> OfflinePartition, __consumer_offsets-33 -> OfflinePartition, __consumer_offsets-22 -> OfflinePartition, __consumer_offsets-11 -> OfflinePartition, __consumer_offsets-0 -> OfflinePartition) (kafka.controller.ZkPartitionStateMachine)
[2020-06-04 21:25:02,046] INFO [Controller id=1] Ready to serve as the new controller with epoch 15 (kafka.controller.KafkaController)
[2020-06-04 21:25:02,053] INFO [Controller id=1] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-06-04 21:25:02,053] INFO [Controller id=1] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-06-04 21:25:02,054] INFO [Controller id=1] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-06-04 21:25:02,054] INFO [Controller id=1] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-06-04 21:25:02,056] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-06-04 21:25:02,071] INFO [Controller id=1] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-06-04 21:25:07,076] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 21:25:07,077] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 21:25:07,090] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map(__consumer_offsets-22 -> Vector(0), __consumer_offsets-30 -> Vector(0), __consumer_offsets-8 -> Vector(0), __consumer_offsets-21 -> Vector(0), __consumer_offsets-4 -> Vector(0), __consumer_offsets-27 -> Vector(0), __consumer_offsets-7 -> Vector(0), __consumer_offsets-9 -> Vector(0), __consumer_offsets-46 -> Vector(0), my-replicated-topic-0 -> Vector(0, 2, 1), __consumer_offsets-25 -> Vector(0), __consumer_offsets-35 -> Vector(0), __consumer_offsets-41 -> Vector(0), __consumer_offsets-33 -> Vector(0), __consumer_offsets-23 -> Vector(0), __consumer_offsets-49 -> Vector(0), __consumer_offsets-47 -> Vector(0), __consumer_offsets-16 -> Vector(0), test-0 -> Vector(0), __consumer_offsets-28 -> Vector(0), __consumer_offsets-31 -> Vector(0), __consumer_offsets-36 -> Vector(0), __consumer_offsets-42 -> Vector(0), __consumer_offsets-3 -> Vector(0), __consumer_offsets-18 -> Vector(0), __consumer_offsets-37 -> Vector(0), __consumer_offsets-15 -> Vector(0), __consumer_offsets-24 -> Vector(0), __consumer_offsets-38 -> Vector(0), __consumer_offsets-17 -> Vector(0), __consumer_offsets-48 -> Vector(0), __consumer_offsets-19 -> Vector(0), __consumer_offsets-11 -> Vector(0), __consumer_offsets-13 -> Vector(0), __consumer_offsets-2 -> Vector(0), __consumer_offsets-43 -> Vector(0), __consumer_offsets-6 -> Vector(0), __consumer_offsets-14 -> Vector(0), __consumer_offsets-20 -> Vector(0), __consumer_offsets-0 -> Vector(0), __consumer_offsets-44 -> Vector(0), __consumer_offsets-39 -> Vector(0), __consumer_offsets-12 -> Vector(0), __consumer_offsets-45 -> Vector(0), __consumer_offsets-1 -> Vector(0), __consumer_offsets-5 -> Vector(0), __consumer_offsets-26 -> Vector(0), __consumer_offsets-29 -> Vector(0), __consumer_offsets-34 -> Vector(0), __consumer_offsets-10 -> Vector(0), __consumer_offsets-32 -> Vector(0), __consumer_offsets-40 -> Vector(0)) (kafka.controller.KafkaController)
[2020-06-04 21:25:07,093] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 1.0 (kafka.controller.KafkaController)
[2020-06-04 21:25:07,095] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2020-06-04 21:25:24,380] INFO [Controller id=1] Newly added brokers: 0, deleted brokers: , bounced brokers: , all live brokers: 0,1,2 (kafka.controller.KafkaController)
[2020-06-04 21:25:24,380] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2020-06-04 21:25:24,395] INFO [Controller id=1] New broker startup callback for 0 (kafka.controller.KafkaController)
[2020-06-04 21:25:24,403] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2020-06-04 21:25:24,406] INFO [RequestSendThread controllerId=1] Controller 1 connected to BOKIE-SURFACE:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-06-04 21:25:24,742] DEBUG [Controller id=1] Register BrokerModifications handler for Vector(0) (kafka.controller.KafkaController)
[2020-06-04 21:25:24,754] INFO [Controller id=1] Updated broker epochs cache: Map(1 -> 1099, 2 -> 1120, 0 -> 1195) (kafka.controller.KafkaController)
[2020-06-04 21:25:24,769] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-06-04 21:25:24,796] DEBUG [Controller id=0] Broker 1 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-06-04 21:25:27,423] DEBUG [Controller id=1] Sending MetadataRequest to Brokers: Vector(1, 2, 0) for TopicPartitions: ArrayBuffer(my-replicated-topic-0) (kafka.controller.KafkaController)
[2020-06-04 21:30:07,097] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 21:30:07,097] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 21:30:07,102] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map(my-replicated-topic-0 -> Vector(0, 2, 1)) (kafka.controller.KafkaController)
[2020-06-04 21:30:07,102] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.019230769230769232 (kafka.controller.KafkaController)
[2020-06-04 21:34:32,908] INFO [Controller id=1] New topics: [Set(bokie)], deleted topics: [Set()], new partition replica assignment [Map(bokie-0 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-06-04 21:34:32,911] INFO [Controller id=1] New partition creation callback for bokie-0 (kafka.controller.KafkaController)
[2020-06-04 21:35:07,103] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 21:35:07,103] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 21:35:07,108] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2020-06-04 21:35:07,108] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-06-04 21:35:07,109] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map(my-replicated-topic-0 -> Vector(0, 2, 1)) (kafka.controller.KafkaController)
[2020-06-04 21:35:07,109] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.019230769230769232 (kafka.controller.KafkaController)
[2020-06-04 21:35:35,919] INFO [Controller id=1] Shutting down broker 0 (kafka.controller.KafkaController)
[2020-06-04 21:35:35,920] DEBUG [Controller id=1] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2020-06-04 21:35:35,920] DEBUG [Controller id=1] Live brokers: 1,2 (kafka.controller.KafkaController)
[2020-06-04 21:35:35,925] DEBUG The stop replica request (delete = false) sent to broker 0 is StopReplicaRequestInfo([Topic=my-replicated-topic,Partition=0,Replica=0],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-06-04 21:35:35,946] DEBUG The stop replica request (delete = false) sent to broker 0 is StopReplicaRequestInfo([Topic=my-replicated-topic,Partition=0,Replica=0],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-06-04 21:35:35,947] TRACE [Controller id=1] All leaders = __consumer_offsets-49 -> (Leader:0,ISR:0,LeaderEpoch:12,ControllerEpoch:15),__consumer_offsets-38 -> (Leader:0,ISR:0,LeaderEpoch:12,ControllerEpoch:15),__consumer_offsets-16 -> (Leader:0,ISR:0,LeaderEpoch:12,ControllerEpoch:15),__consumer_offsets-27 -> (Leader:0,ISR:0,LeaderEpoch:12,ControllerEpoch:15),__consumer_offsets-8 -> (Leader:0,ISR:0,LeaderEpoch:12,ControllerEpoch:15),__consumer_offsets-19 -> (Leader:0,ISR:0,LeaderEpoch:12,ControllerEpoch:15),__consumer_offsets-13 -> (Leader:0,ISR:0,LeaderEpoch:12,ControllerEpoch:15),__consumer_offsets-2 -> (Leader:0,ISR:0,LeaderEpoch:12,ControllerEpoch:15),__consumer_offsets-46 -> (Leader:0,ISR:0,LeaderEpoch:12,ControllerEpoch:15),__consumer_offsets-35 -> (Leader:0,ISR:0,LeaderEpoch:12,ControllerEpoch:15),__consumer_offsets-24 -> (Leader:0,ISR:0,LeaderEpoch:12,ControllerEpoch:15),__consumer_offsets-5 -> (Leader:0,ISR:0,LeaderEpoch:12,ControllerEpoch:15),__consumer_offsets-43 -> (Leader:0,ISR:0,LeaderEpoch:12,ControllerEpoch:15),__consumer_offsets-32 -> (Leader:0,ISR:0,LeaderEpoch:12,ControllerEpoch:15),__consumer_offsets-21 -> (Leader:0,ISR:0,LeaderEpoch:12,ControllerEpoch:15),__consumer_offsets-10 -> (Leader:0,ISR:0,LeaderEpoch:12,ControllerEpoch:15),__consumer_offsets-37 -> (Leader:0,ISR:0,LeaderEpoch:12,ControllerEpoch:15),my-replicated-topic-0 -> (Leader:2,ISR:1,2,LeaderEpoch:26,ControllerEpoch:15),__consumer_offsets-48 -> (Leader:0,ISR:0,LeaderEpoch:12,ControllerEpoch:15),__consumer_offsets-40 -> (Leader:0,ISR:0,LeaderEpoch:12,ControllerEpoch:15),__consumer_offsets-18 -> (Leader:0,ISR:0,LeaderEpoch:12,ControllerEpoch:15),__consumer_offsets-29 -> (Leader:0,ISR:0,LeaderEpoch:12,ControllerEpoch:15),__consumer_offsets-7 -> (Leader:0,ISR:0,LeaderEpoch:12,ControllerEpoch:15),__consumer_offsets-23 -> (Leader:0,ISR:0,LeaderEpoch:12,ControllerEpoch:15),__consumer_offsets-45 -> (Leader:0,ISR:0,LeaderEpoch:12,ControllerEpoch:15),__consumer_offsets-34 -> (Leader:0,ISR:0,LeaderEpoch:12,ControllerEpoch:15),bokie-0 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:15),__consumer_offsets-26 -> (Leader:0,ISR:0,LeaderEpoch:12,ControllerEpoch:15),__consumer_offsets-4 -> (Leader:0,ISR:0,LeaderEpoch:12,ControllerEpoch:15),__consumer_offsets-15 -> (Leader:0,ISR:0,LeaderEpoch:12,ControllerEpoch:15),__consumer_offsets-42 -> (Leader:0,ISR:0,LeaderEpoch:12,ControllerEpoch:15),__consumer_offsets-31 -> (Leader:0,ISR:0,LeaderEpoch:12,ControllerEpoch:15),__consumer_offsets-9 -> (Leader:0,ISR:0,LeaderEpoch:12,ControllerEpoch:15),__consumer_offsets-20 -> (Leader:0,ISR:0,LeaderEpoch:12,ControllerEpoch:15),test-0 -> (Leader:0,ISR:0,LeaderEpoch:12,ControllerEpoch:15),__consumer_offsets-12 -> (Leader:0,ISR:0,LeaderEpoch:12,ControllerEpoch:15),__consumer_offsets-1 -> (Leader:0,ISR:0,LeaderEpoch:12,ControllerEpoch:15),__consumer_offsets-28 -> (Leader:0,ISR:0,LeaderEpoch:12,ControllerEpoch:15),__consumer_offsets-17 -> (Leader:0,ISR:0,LeaderEpoch:12,ControllerEpoch:15),__consumer_offsets-6 -> (Leader:0,ISR:0,LeaderEpoch:12,ControllerEpoch:15),__consumer_offsets-39 -> (Leader:0,ISR:0,LeaderEpoch:12,ControllerEpoch:15),__consumer_offsets-44 -> (Leader:0,ISR:0,LeaderEpoch:12,ControllerEpoch:15),__consumer_offsets-36 -> (Leader:0,ISR:0,LeaderEpoch:12,ControllerEpoch:15),__consumer_offsets-47 -> (Leader:0,ISR:0,LeaderEpoch:12,ControllerEpoch:15),__consumer_offsets-3 -> (Leader:0,ISR:0,LeaderEpoch:12,ControllerEpoch:15),__consumer_offsets-25 -> (Leader:0,ISR:0,LeaderEpoch:12,ControllerEpoch:15),__consumer_offsets-14 -> (Leader:0,ISR:0,LeaderEpoch:12,ControllerEpoch:15),__consumer_offsets-30 -> (Leader:0,ISR:0,LeaderEpoch:12,ControllerEpoch:15),__consumer_offsets-41 -> (Leader:0,ISR:0,LeaderEpoch:12,ControllerEpoch:15),__consumer_offsets-33 -> (Leader:0,ISR:0,LeaderEpoch:12,ControllerEpoch:15),__consumer_offsets-22 -> (Leader:0,ISR:0,LeaderEpoch:12,ControllerEpoch:15),__consumer_offsets-11 -> (Leader:0,ISR:0,LeaderEpoch:12,ControllerEpoch:15),__consumer_offsets-0 -> (Leader:0,ISR:0,LeaderEpoch:12,ControllerEpoch:15) (kafka.controller.KafkaController)
[2020-06-04 21:35:37,400] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-06-04 21:35:37,402] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-06-04 21:35:37,402] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-06-04 21:35:37,402] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2020-06-04 21:35:37,402] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2020-06-04 21:35:37,404] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-06-04 21:35:37,404] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-06-04 21:35:37,405] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2020-06-04 21:35:37,411] INFO [Controller id=1] Newly added brokers: , deleted brokers: 0, bounced brokers: , all live brokers: 1,2 (kafka.controller.KafkaController)
[2020-06-04 21:35:37,412] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2020-06-04 21:35:37,412] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2020-06-04 21:35:37,412] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2020-06-04 21:35:37,418] INFO [Controller id=1] Broker failure callback for 0 (kafka.controller.KafkaController)
[2020-06-04 21:35:37,419] INFO [Controller id=1] Removed 0 from list of shutting down brokers. (kafka.controller.KafkaController)
[2020-06-04 21:35:37,584] DEBUG [Controller id=1] Unregister BrokerModifications handler for Vector(0) (kafka.controller.KafkaController)
[2020-06-04 21:35:37,585] INFO [Controller id=1] Updated broker epochs cache: Map(1 -> 1099, 2 -> 1120) (kafka.controller.KafkaController)
[2020-06-04 21:35:37,952] INFO [Controller id=1] Shutting down broker 2 (kafka.controller.KafkaController)
[2020-06-04 21:35:37,952] DEBUG [Controller id=1] All shutting down brokers: 2 (kafka.controller.KafkaController)
[2020-06-04 21:35:37,952] DEBUG [Controller id=1] Live brokers: 1 (kafka.controller.KafkaController)
[2020-06-04 21:35:37,992] TRACE [Controller id=1] All leaders = __consumer_offsets-49 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-38 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-16 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-27 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-8 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-19 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-13 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-2 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-46 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-35 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-24 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-5 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-43 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-32 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-21 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-10 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-37 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),my-replicated-topic-0 -> (Leader:1,ISR:1,LeaderEpoch:27,ControllerEpoch:15),__consumer_offsets-48 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-40 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-18 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-29 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-7 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-23 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-45 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-34 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),bokie-0 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:15),__consumer_offsets-26 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-4 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-15 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-42 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-31 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-9 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-20 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),test-0 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-12 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-1 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-28 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-17 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-6 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-39 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-44 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-36 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-47 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-3 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-25 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-14 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-30 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-41 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-33 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-22 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-11 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-0 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15) (kafka.controller.KafkaController)
[2020-06-04 21:35:38,062] WARN [RequestSendThread controllerId=1] Controller 1 epoch 15 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=15, brokerEpoch=1120, partitionStates=[LeaderAndIsrPartitionState(topicName='my-replicated-topic', partitionIndex=0, controllerEpoch=15, leader=1, leaderEpoch=27, isr=[1], zkVersion=48, replicas=[0, 2, 1], addingReplicas=[], removingReplicas=[], isNew=false)], liveLeaders=(BOKIE-SURFACE:9093 (id: 1 rack: null))) to broker BOKIE-SURFACE:9094 (id: 2 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 2 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:100)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:249)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-04 21:35:39,232] INFO [Controller id=1] Shutting down broker 1 (kafka.controller.KafkaController)
[2020-06-04 21:35:39,233] DEBUG [Controller id=1] All shutting down brokers: 1,2 (kafka.controller.KafkaController)
[2020-06-04 21:35:39,233] DEBUG [Controller id=1] Live brokers:  (kafka.controller.KafkaController)
[2020-06-04 21:35:39,257] TRACE [Controller id=1] All leaders = __consumer_offsets-49 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-38 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-16 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-27 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-8 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-19 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-13 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-2 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-46 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-35 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-24 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-5 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-43 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-32 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-21 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-10 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-37 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),my-replicated-topic-0 -> (Leader:1,ISR:1,LeaderEpoch:27,ControllerEpoch:15),__consumer_offsets-48 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-40 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-18 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-29 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-7 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-23 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-45 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-34 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),bokie-0 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:15),__consumer_offsets-26 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-4 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-15 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-42 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-31 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-9 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-20 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),test-0 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-12 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-1 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-28 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-17 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-6 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-39 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-44 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-36 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-47 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-3 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-25 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-14 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-30 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-41 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-33 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-22 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-11 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-0 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15) (kafka.controller.KafkaController)
[2020-06-04 21:35:39,349] INFO [ControllerEventThread controllerId=2] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-06-04 21:35:39,352] INFO [ControllerEventThread controllerId=2] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-06-04 21:35:39,352] INFO [ControllerEventThread controllerId=2] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-06-04 21:35:39,353] DEBUG [Controller id=2] Resigning (kafka.controller.KafkaController)
[2020-06-04 21:35:39,354] DEBUG [Controller id=2] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2020-06-04 21:35:39,358] INFO [PartitionStateMachine controllerId=2] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-06-04 21:35:39,359] INFO [ReplicaStateMachine controllerId=2] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-06-04 21:35:39,361] INFO [Controller id=2] Resigned (kafka.controller.KafkaController)
[2020-06-04 21:35:39,372] INFO [Controller id=1] Newly added brokers: , deleted brokers: 2, bounced brokers: , all live brokers: 1 (kafka.controller.KafkaController)
[2020-06-04 21:35:39,372] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2020-06-04 21:35:39,374] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker BOKIE-SURFACE:9094 (id: 2 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
org.apache.kafka.common.errors.DisconnectException: NetworkClient is no longer active, state is CLOSING
[2020-06-04 21:35:39,374] WARN [RequestSendThread controllerId=1] Controller 1 epoch 15 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=15, brokerEpoch=1120, partitionStates=[LeaderAndIsrPartitionState(topicName='my-replicated-topic', partitionIndex=0, controllerEpoch=15, leader=1, leaderEpoch=27, isr=[1], zkVersion=48, replicas=[0, 2, 1], addingReplicas=[], removingReplicas=[], isNew=false)], liveLeaders=(BOKIE-SURFACE:9093 (id: 1 rack: null))) to broker BOKIE-SURFACE:9094 (id: 2 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.lang.InterruptedException
	at java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(AbstractQueuedSynchronizer.java:1080)
	at java.base/java.util.concurrent.CountDownLatch.await(CountDownLatch.java:278)
	at kafka.utils.ShutdownableThread.pause(ShutdownableThread.scala:82)
	at kafka.controller.RequestSendThread.backoff$1(ControllerChannelManager.scala:230)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:244)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-06-04 21:35:39,376] TRACE [RequestSendThread controllerId=1] shutdownInitiated latch count reached zero. Shutdown called. (kafka.controller.RequestSendThread)
[2020-06-04 21:35:39,376] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2020-06-04 21:35:39,376] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2020-06-04 21:35:39,379] INFO [Controller id=1] Broker failure callback for 2 (kafka.controller.KafkaController)
[2020-06-04 21:35:39,379] INFO [Controller id=1] Removed 2 from list of shutting down brokers. (kafka.controller.KafkaController)
[2020-06-04 21:35:39,447] DEBUG [Controller id=1] Unregister BrokerModifications handler for Vector(2) (kafka.controller.KafkaController)
[2020-06-04 21:35:39,447] INFO [Controller id=1] Updated broker epochs cache: Map(1 -> 1099) (kafka.controller.KafkaController)
[2020-06-04 21:35:44,283] INFO [Controller id=1] Shutting down broker 1 (kafka.controller.KafkaController)
[2020-06-04 21:35:44,283] DEBUG [Controller id=1] All shutting down brokers: 1 (kafka.controller.KafkaController)
[2020-06-04 21:35:44,283] DEBUG [Controller id=1] Live brokers:  (kafka.controller.KafkaController)
[2020-06-04 21:35:44,290] TRACE [Controller id=1] All leaders = __consumer_offsets-49 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-38 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-16 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-27 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-8 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-19 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-13 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-2 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-46 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-35 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-24 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-5 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-43 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-32 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-21 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-10 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-37 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),my-replicated-topic-0 -> (Leader:1,ISR:1,LeaderEpoch:27,ControllerEpoch:15),__consumer_offsets-48 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-40 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-18 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-29 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-7 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-23 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-45 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-34 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),bokie-0 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:15),__consumer_offsets-26 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-4 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-15 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-42 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-31 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-9 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-20 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),test-0 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-12 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-1 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-28 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-17 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-6 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-39 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-44 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-36 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-47 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-3 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-25 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-14 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-30 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-41 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-33 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-22 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-11 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-0 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15) (kafka.controller.KafkaController)
[2020-06-04 21:35:49,915] INFO [Controller id=1] Shutting down broker 1 (kafka.controller.KafkaController)
[2020-06-04 21:35:49,915] DEBUG [Controller id=1] All shutting down brokers: 1 (kafka.controller.KafkaController)
[2020-06-04 21:35:49,915] DEBUG [Controller id=1] Live brokers:  (kafka.controller.KafkaController)
[2020-06-04 21:35:49,920] TRACE [Controller id=1] All leaders = __consumer_offsets-49 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-38 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-16 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-27 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-8 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-19 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-13 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-2 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-46 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-35 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-24 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-5 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-43 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-32 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-21 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-10 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-37 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),my-replicated-topic-0 -> (Leader:1,ISR:1,LeaderEpoch:27,ControllerEpoch:15),__consumer_offsets-48 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-40 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-18 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-29 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-7 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-23 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-45 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-34 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),bokie-0 -> (Leader:-1,ISR:2,LeaderEpoch:1,ControllerEpoch:15),__consumer_offsets-26 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-4 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-15 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-42 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-31 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-9 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-20 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),test-0 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-12 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-1 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-28 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-17 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-6 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-39 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-44 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-36 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-47 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-3 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-25 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-14 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-30 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-41 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-33 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-22 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-11 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15),__consumer_offsets-0 -> (Leader:-1,ISR:0,LeaderEpoch:13,ControllerEpoch:15) (kafka.controller.KafkaController)
[2020-06-04 21:35:56,123] INFO [ControllerEventThread controllerId=1] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-06-04 21:35:56,126] INFO [ControllerEventThread controllerId=1] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-06-04 21:35:56,125] INFO [ControllerEventThread controllerId=1] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-06-04 21:35:56,127] DEBUG [Controller id=1] Resigning (kafka.controller.KafkaController)
[2020-06-04 21:35:56,127] DEBUG [Controller id=1] Unregister BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2020-06-04 21:35:56,129] INFO [PartitionStateMachine controllerId=1] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-06-04 21:35:56,130] INFO [ReplicaStateMachine controllerId=1] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-06-04 21:35:56,131] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2020-06-04 21:35:56,131] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2020-06-04 21:35:56,131] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2020-06-04 21:35:56,136] INFO [Controller id=1] Resigned (kafka.controller.KafkaController)
[2020-06-04 21:41:06,407] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@7a92922, name=log4j:logger=kafka.controller (kafka.controller)
[2020-06-04 22:07:24,992] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@7a92922, name=log4j:logger=kafka.controller (kafka.controller)
[2020-06-04 22:08:46,896] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-06-04 22:08:46,928] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 16 and epoch zk version is now 16 (kafka.controller.KafkaController)
[2020-06-04 22:08:46,928] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2020-06-04 22:08:46,934] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-06-04 22:08:46,939] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-06-04 22:08:46,943] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2020-06-04 22:08:46,955] INFO [Controller id=0] Initialized broker epochs cache: Map(0 -> 1328) (kafka.controller.KafkaController)
[2020-06-04 22:08:46,973] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2020-06-04 22:08:47,042] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2020-06-04 22:08:47,054] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-06-04 22:08:47,055] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2020-06-04 22:08:47,055] INFO [Controller id=0] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2020-06-04 22:08:47,055] INFO [Controller id=0] Current list of topics in the cluster: Set(bokie, test, my-replicated-topic, __consumer_offsets) (kafka.controller.KafkaController)
[2020-06-04 22:08:47,056] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-06-04 22:08:47,068] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-06-04 22:08:47,068] INFO [Controller id=0] List of topics ineligible for deletion: bokie,my-replicated-topic (kafka.controller.KafkaController)
[2020-06-04 22:08:47,068] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-06-04 22:08:47,069] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set(bokie, my-replicated-topic) (kafka.controller.TopicDeletionManager)
[2020-06-04 22:08:47,069] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2020-06-04 22:08:47,090] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-06-04 22:08:47,101] INFO [RequestSendThread controllerId=0] Controller 0 connected to BOKIE-SURFACE:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-06-04 22:08:47,105] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-06-04 22:08:47,249] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-06-04 22:08:47,328] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> Map([Topic=__consumer_offsets,Partition=21,Replica=0] -> OnlineReplica, [Topic=my-replicated-topic,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=42,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=46,Replica=0] -> OnlineReplica, [Topic=my-replicated-topic,Partition=0,Replica=2] -> OfflineReplica, [Topic=my-replicated-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=39,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=7,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=13,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=49,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=48,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=15,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=38,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=2,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=28,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=23,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=32,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=10,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=18,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=33,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=5,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=17,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=8,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=19,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=37,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=43,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=6,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=9,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=30,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=3,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=25,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=47,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=36,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=11,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=34,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=27,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=12,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=44,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=1,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=45,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=24,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=22,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=31,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=14,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=40,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=4,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=20,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=41,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=26,Replica=0] -> OnlineReplica, [Topic=test,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=29,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=16,Replica=0] -> OnlineReplica, [Topic=bokie,Partition=0,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=35,Replica=0] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2020-06-04 22:08:47,329] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-06-04 22:08:47,346] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-06-04 22:08:47,677] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> Map(__consumer_offsets-49 -> OnlinePartition, __consumer_offsets-38 -> OnlinePartition, __consumer_offsets-16 -> OnlinePartition, __consumer_offsets-27 -> OnlinePartition, __consumer_offsets-8 -> OnlinePartition, __consumer_offsets-19 -> OnlinePartition, __consumer_offsets-13 -> OnlinePartition, __consumer_offsets-2 -> OnlinePartition, __consumer_offsets-46 -> OnlinePartition, __consumer_offsets-35 -> OnlinePartition, __consumer_offsets-24 -> OnlinePartition, __consumer_offsets-5 -> OnlinePartition, __consumer_offsets-43 -> OnlinePartition, __consumer_offsets-32 -> OnlinePartition, __consumer_offsets-21 -> OnlinePartition, __consumer_offsets-10 -> OnlinePartition, __consumer_offsets-37 -> OnlinePartition, my-replicated-topic-0 -> OfflinePartition, __consumer_offsets-48 -> OnlinePartition, __consumer_offsets-40 -> OnlinePartition, __consumer_offsets-18 -> OnlinePartition, __consumer_offsets-29 -> OnlinePartition, __consumer_offsets-7 -> OnlinePartition, __consumer_offsets-34 -> OnlinePartition, __consumer_offsets-23 -> OnlinePartition, __consumer_offsets-45 -> OnlinePartition, bokie-0 -> OfflinePartition, __consumer_offsets-26 -> OnlinePartition, __consumer_offsets-4 -> OnlinePartition, __consumer_offsets-15 -> OnlinePartition, __consumer_offsets-42 -> OnlinePartition, __consumer_offsets-31 -> OnlinePartition, __consumer_offsets-9 -> OnlinePartition, __consumer_offsets-20 -> OnlinePartition, test-0 -> OnlinePartition, __consumer_offsets-12 -> OnlinePartition, __consumer_offsets-1 -> OnlinePartition, __consumer_offsets-28 -> OnlinePartition, __consumer_offsets-17 -> OnlinePartition, __consumer_offsets-6 -> OnlinePartition, __consumer_offsets-39 -> OnlinePartition, __consumer_offsets-44 -> OnlinePartition, __consumer_offsets-36 -> OnlinePartition, __consumer_offsets-47 -> OnlinePartition, __consumer_offsets-3 -> OnlinePartition, __consumer_offsets-25 -> OnlinePartition, __consumer_offsets-14 -> OnlinePartition, __consumer_offsets-30 -> OnlinePartition, __consumer_offsets-41 -> OnlinePartition, __consumer_offsets-33 -> OnlinePartition, __consumer_offsets-22 -> OnlinePartition, __consumer_offsets-11 -> OnlinePartition, __consumer_offsets-0 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2020-06-04 22:08:47,678] INFO [Controller id=0] Ready to serve as the new controller with epoch 16 (kafka.controller.KafkaController)
[2020-06-04 22:08:47,690] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-06-04 22:08:47,691] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-06-04 22:08:47,693] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-06-04 22:08:47,694] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-06-04 22:08:47,698] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-06-04 22:08:47,718] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-06-04 22:08:52,728] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-04 22:08:52,729] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-04 22:08:52,739] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map(bokie-0 -> Vector(2)) (kafka.controller.KafkaController)
[2020-06-04 22:08:52,743] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2020-06-04 22:08:52,744] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2020-06-04 22:08:52,744] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map(my-replicated-topic-0 -> Vector(0, 2, 1)) (kafka.controller.KafkaController)
[2020-06-04 22:08:52,744] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.019230769230769232 (kafka.controller.KafkaController)
[2020-06-04 22:10:04,373] INFO [Controller id=0] Newly added brokers: 1, deleted brokers: , bounced brokers: , all live brokers: 0,1 (kafka.controller.KafkaController)
[2020-06-04 22:10:04,373] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2020-06-04 22:10:04,383] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-06-04 22:10:04,385] INFO [Controller id=0] New broker startup callback for 1 (kafka.controller.KafkaController)
[2020-06-04 22:10:04,393] INFO [RequestSendThread controllerId=0] Controller 0 connected to BOKIE-SURFACE:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-06-04 22:10:04,416] DEBUG [Controller id=0] Register BrokerModifications handler for Vector(1) (kafka.controller.KafkaController)
[2020-06-04 22:10:04,419] INFO [Controller id=0] Updated broker epochs cache: Map(0 -> 1328, 1 -> 1399) (kafka.controller.KafkaController)
[2020-06-04 22:10:04,473] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-06-04 22:10:04,494] DEBUG [Controller id=1] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-06-04 22:10:11,864] DEBUG [Controller id=0] Sending MetadataRequest to Brokers: Vector(0, 1) for TopicPartitions: ArrayBuffer(my-replicated-topic-0) (kafka.controller.KafkaController)
[2020-06-04 22:10:43,911] INFO [Controller id=0] Newly added brokers: 2, deleted brokers: , bounced brokers: , all live brokers: 0,1,2 (kafka.controller.KafkaController)
[2020-06-04 22:10:43,911] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2020-06-04 22:10:43,920] INFO [Controller id=0] New broker startup callback for 2 (kafka.controller.KafkaController)
[2020-06-04 22:10:43,940] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-06-04 22:10:43,944] DEBUG [Controller id=0] Register BrokerModifications handler for Vector(2) (kafka.controller.KafkaController)
[2020-06-04 22:10:43,945] INFO [RequestSendThread controllerId=0] Controller 0 connected to BOKIE-SURFACE:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-06-04 22:10:43,952] INFO [Controller id=0] Updated broker epochs cache: Map(0 -> 1328, 1 -> 1399, 2 -> 1419) (kafka.controller.KafkaController)
[2020-06-04 22:10:44,006] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-06-04 22:10:44,027] DEBUG [Controller id=2] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-06-04 22:10:51,801] DEBUG [Controller id=0] Sending MetadataRequest to Brokers: Vector(0, 1, 2) for TopicPartitions: ArrayBuffer(my-replicated-topic-0) (kafka.controller.KafkaController)
[2020-06-04 22:12:12,337] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@7a92922, name=log4j:logger=kafka.controller (kafka.controller)
